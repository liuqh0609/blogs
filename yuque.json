[
  {
    "id": 31201306,
    "slug": "awnpev",
    "title": "使用Hexo+Github Action+腾讯云函数+yuque-hexo打造自动化博客部署方案",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:20:49.351Z",
      "updated_at": "2021-02-04T06:20:49.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "---\n\ntags: [hexo, github]<br />categories: [fe]<br />cover: [https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png)\n\n---\n\n\n<br />本文将会一步一步的带你打造一套自动化部署的博客系统。<br />从语雀发布文章后自动同步到Github page的静态博客。<br /><!-- more --><br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png#align=left&display=inline&height=150&margin=%5Bobject%20Object%5D&name=image.png&originHeight=300&originWidth=534&size=349027&status=done&style=none&width=267)\n<a name=\"7Kanj\"></a>\n## Hexo创建静态博客\n好第一步就这样完成了\n<a name=\"8yX6N\"></a>\n## Github Action + yuque-hexo实现CI流程\n接下来我们进行第二步<br />...<br />恩，第二步也快了的完成了，那我们继续第三部吧~\n<a name=\"YvrXo\"></a>\n## 腾讯云函数监听语雀事件触发Action\n大功告成，来在语雀上试一下把~\n",
    "body_draft": "---\n\ntags: [hexo, github]<br />categories: [fe]<br />cover: [https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png)\n\n---\n\n\n<br />本文将会一步一步的带你打造一套自动化部署的博客系统。<br />从语雀发布文章后自动同步到Github page的静态博客。<br /><!-- more --><br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png#align=left&display=inline&height=150&margin=%5Bobject%20Object%5D&name=image.png&originHeight=300&originWidth=534&size=349027&status=done&style=none&width=267)\n<a name=\"7Kanj\"></a>\n## Hexo创建静态博客\n好第一步就这样完成了\n<a name=\"8yX6N\"></a>\n## Github Action + yuque-hexo实现CI流程\n接下来我们进行第二步<br />...<br />恩，第二步也快了的完成了，那我们继续第三部吧~\n<a name=\"YvrXo\"></a>\n## 腾讯云函数监听语雀事件触发Action\n大功告成，来在语雀上试一下把~\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B5%2C0%5D%2C%5B5%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><div data-card-type=\"block\" data-lake-card=\"hr\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">tags: [hexo, github]</p><p data-lake-id=\"4dff232ede6dc1f6ddc8e23e3cc79d66\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">categories: [fe]</p><p data-lake-id=\"90a1d392ad19fbd9806b80f125ec23b1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">cover: <a href=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png\" target=\"_blank\">https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png</a></p><div data-card-type=\"block\" data-lake-card=\"hr\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p data-lake-id=\"0a200fe42e0ad65f291c5b894f1cb268\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bef9772815534faea16cda9d550d7d4e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">本文将会一步一步的带你打造一套自动化部署的博客系统。</p><p data-lake-id=\"e99515c124a553c9b7347af465904aab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从语雀发布文章后自动同步到Github page的静态博客。</p><p data-lake-id=\"aa931c88fa3e15fc9e7c833fa856a781\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>&lt;!--</span> more <span>--&gt;</span></p><p data-lake-id=\"3d2ddf6b3d652f25078e7a62a030fbfa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"150px\" style=\"visibility: visible; width: 267px;\"></span></span></p><h2 data-lake-id=\"ecee192aa29dafeb45560a7e68e48a16\" id=\"7Kanj\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Hexo创建静态博客</h2><p data-lake-id=\"041ccb601c29f0c41a1224fb649df86d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">好第一步就这样完成了</p><h2 data-lake-id=\"0787e765d5f709ee6fe156af96a12403\" id=\"8yX6N\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Github Action + yuque-hexo实现CI流程</h2><p data-lake-id=\"9645af3990c1d2bbc3b99c78b633676e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">接下来我们进行第二步</p><p data-lake-id=\"688c2dae4054a244f670fe9130e92ee1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">...</p><p data-lake-id=\"deff8ff40c47c0df6545cb9b12aaf58a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">恩，第二步也快了的完成了，那我们继续第三部吧~</p><h2 data-lake-id=\"d2cffa1e822c6d31bb11ae902b0280f2\" id=\"YvrXo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">腾讯云函数监听语雀事件触发Action</h2><p data-lake-id=\"221662e8b8f35448280d5873f5376f15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">大功告成，来在语雀上试一下把~</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">tags: [hexo, github]</p><p data-lake-id=\"4dff232ede6dc1f6ddc8e23e3cc79d66\">categories: [fe]</p><p data-lake-id=\"90a1d392ad19fbd9806b80f125ec23b1\">cover: <a href=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png\" target=\"_blank\">https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png</a></p><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"0a200fe42e0ad65f291c5b894f1cb268\"><cursor /><br /></p><p data-lake-id=\"bef9772815534faea16cda9d550d7d4e\">本文将会一步一步的带你打造一套自动化部署的博客系统。</p><p data-lake-id=\"e99515c124a553c9b7347af465904aab\">从语雀发布文章后自动同步到Github page的静态博客。</p><p data-lake-id=\"aa931c88fa3e15fc9e7c833fa856a781\"><span>&lt;!--</span> more <span>--&gt;</span></p><p data-lake-id=\"3d2ddf6b3d652f25078e7a62a030fbfa\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png%22%2C%22originWidth%22%3A534%2C%22originHeight%22%3A300%2C%22name%22%3A%22image.png%22%2C%22size%22%3A349027%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A267%2C%22height%22%3A150%7D\"></card></span></p><h2 data-lake-id=\"ecee192aa29dafeb45560a7e68e48a16\" id=\"7Kanj\">Hexo创建静态博客</h2><p data-lake-id=\"041ccb601c29f0c41a1224fb649df86d\">好第一步就这样完成了</p><h2 data-lake-id=\"0787e765d5f709ee6fe156af96a12403\" id=\"8yX6N\">Github Action + yuque-hexo实现CI流程</h2><p data-lake-id=\"9645af3990c1d2bbc3b99c78b633676e\">接下来我们进行第二步</p><p data-lake-id=\"688c2dae4054a244f670fe9130e92ee1\">...</p><p data-lake-id=\"deff8ff40c47c0df6545cb9b12aaf58a\">恩，第二步也快了的完成了，那我们继续第三部吧~</p><h2 data-lake-id=\"d2cffa1e822c6d31bb11ae902b0280f2\" id=\"YvrXo\">腾讯云函数监听语雀事件触发Action</h2><p data-lake-id=\"221662e8b8f35448280d5873f5376f15\">大功告成，来在语雀上试一下把~</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">tags: [hexo, github]</p><p data-lake-id=\"4dff232ede6dc1f6ddc8e23e3cc79d66\">categories: [fe]</p><p data-lake-id=\"90a1d392ad19fbd9806b80f125ec23b1\">cover: <a href=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png\" target=\"_blank\">https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png</a></p><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"0a200fe42e0ad65f291c5b894f1cb268\"><cursor /><br /></p><p data-lake-id=\"bef9772815534faea16cda9d550d7d4e\">本文将会一步一步的带你打造一套自动化部署的博客系统。</p><p data-lake-id=\"e99515c124a553c9b7347af465904aab\">从语雀发布文章后自动同步到Github page的静态博客。</p><p data-lake-id=\"aa931c88fa3e15fc9e7c833fa856a781\"><span>&lt;!--</span> more <span>--&gt;</span></p><p data-lake-id=\"3d2ddf6b3d652f25078e7a62a030fbfa\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png%22%2C%22originWidth%22%3A534%2C%22originHeight%22%3A300%2C%22name%22%3A%22image.png%22%2C%22size%22%3A349027%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A267%2C%22height%22%3A150%7D\"></card></span></p><h2 data-lake-id=\"ecee192aa29dafeb45560a7e68e48a16\" id=\"7Kanj\">Hexo创建静态博客</h2><p data-lake-id=\"041ccb601c29f0c41a1224fb649df86d\">好第一步就这样完成了</p><h2 data-lake-id=\"0787e765d5f709ee6fe156af96a12403\" id=\"8yX6N\">Github Action + yuque-hexo实现CI流程</h2><p data-lake-id=\"9645af3990c1d2bbc3b99c78b633676e\">接下来我们进行第二步</p><p data-lake-id=\"688c2dae4054a244f670fe9130e92ee1\">...</p><p data-lake-id=\"deff8ff40c47c0df6545cb9b12aaf58a\">恩，第二步也快了的完成了，那我们继续第三部吧~</p><h2 data-lake-id=\"d2cffa1e822c6d31bb11ae902b0280f2\" id=\"YvrXo\">腾讯云函数监听语雀事件触发Action</h2><p data-lake-id=\"221662e8b8f35448280d5873f5376f15\">大功告成，来在语雀上试一下把~</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-04T06:20:49.000Z",
    "deleted_at": null,
    "created_at": "2021-02-04T05:56:33.000Z",
    "updated_at": "2021-02-04T06:20:49.000Z",
    "published_at": "2021-02-04T06:20:49.000Z",
    "first_published_at": "2021-02-04T06:01:55.000Z",
    "word_count": 147,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png",
    "description": "tags: [hexo, github]categories: [fe]cover: https://cdn.nlark.com/yuque/0/2021/png/2705850/1612418500562-e844caa3-bb3e-4b5d-8b27-573fd7f1d7ab.png本文将...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 31175200,
    "slug": "gk6d8w",
    "title": "语雀测试文档",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png#align=left&display=inline&height=366&margin=%5Bobject%20Object%5D&name=image.png&originHeight=731&originWidth=500&size=837151&status=done&style=none&width=250)\n",
    "body_draft": "![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png#align=left&display=inline&height=366&margin=%5Bobject%20Object%5D&name=image.png&originHeight=731&originWidth=500&size=837151&status=done&style=none&width=250)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B1%2C0%2C0%2C0%2C0%2C0%2C0%5D%2C%5B1%2C0%2C0%2C0%2C0%2C0%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"890e9d638ec7958b95358b0885689683\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"366px\" style=\"visibility: visible; width: 250px;\"></span></span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"890e9d638ec7958b95358b0885689683\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png%22%2C%22originWidth%22%3A500%2C%22originHeight%22%3A731%2C%22name%22%3A%22image.png%22%2C%22size%22%3A837151%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A60.284046%2C%22y%22%3A24.906769%2C%22width%22%3A154.28207400000002%2C%22height%22%3A103.75989100000001%2C%22text%22%3A%22%E4%BB%8D%22%7D%2C%7B%22x%22%3A322.48392%2C%22y%22%3A239.34265%2C%22width%22%3A26.91179999999997%2C%22height%22%3A19.14792%2C%22text%22%3A%2249%22%7D%2C%7B%22x%22%3A342.42667%2C%22y%22%3A502.71707%2C%22width%22%3A153.82162999999997%2C%22height%22%3A40.59652999999997%2C%22text%22%3A%22iChau%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BB%8D%2049%20iChau%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A250%2C%22height%22%3A366%7D\"></card></span></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"890e9d638ec7958b95358b0885689683\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png%22%2C%22originWidth%22%3A500%2C%22originHeight%22%3A731%2C%22name%22%3A%22image.png%22%2C%22size%22%3A837151%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A60.284046%2C%22y%22%3A24.906769%2C%22width%22%3A154.28207400000002%2C%22height%22%3A103.75989100000001%2C%22text%22%3A%22%E4%BB%8D%22%7D%2C%7B%22x%22%3A322.48392%2C%22y%22%3A239.34265%2C%22width%22%3A26.91179999999997%2C%22height%22%3A19.14792%2C%22text%22%3A%2249%22%7D%2C%7B%22x%22%3A342.42667%2C%22y%22%3A502.71707%2C%22width%22%3A153.82162999999997%2C%22height%22%3A40.59652999999997%2C%22text%22%3A%22iChau%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BB%8D%2049%20iChau%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A250%2C%22height%22%3A366%7D\"></card></span></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-04T03:51:02.000Z",
    "deleted_at": null,
    "created_at": "2021-02-03T13:31:17.000Z",
    "updated_at": "2021-02-04T03:51:02.000Z",
    "published_at": "2021-02-04T03:51:02.000Z",
    "first_published_at": "2021-02-03T13:31:39.000Z",
    "word_count": 0,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/2705850/1612410294674-95772a68-2c02-460a-8a79-ef6f289a69ab.png",
    "description": "",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 31090455,
    "slug": "lgqwvp",
    "title": "栈",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"Psrpk\"></a>\n## 【20】有效的括号\n<a name=\"f0AHY\"></a>\n### 题目描述\n> 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。\n> \n\n> 有效字符串需满足：\n> - 左括号必须用相同类型的右括号闭合。\n> - 左括号必须以正确的顺序闭合。\n> \n**提示：**\n> - ** ** 1 <= s.length <= 10\n> - `s` 仅由括号 `'()[]{}'` 组成\n> \n<br />\n> [链接](https://leetcode-cn.com/problems/valid-parentheses/)\n\n<a name=\"ob7i5\"></a>\n### 题解\n\n1. 首先要明确一点，**最后出现的左括号一定是匹配第一次出现的右括号**（这就可以从栈的**后进先出**去匹配遇到右括号时是否能和栈顶的左括号相匹配）\n```javascript\nvar isValid = function(s) {\n  // 如果字符长度是奇数直接返回false\n  if(s.length%2===1) return false\n  // 构建map字典\n  const map = new Map([\n    [')','('],\n    ['}','{'],\n    [']','[']\n  ])\n  // 创建缓存栈\n  const stack = []\n  // 循环字符串\n  for(let val of s) {\n    // 符合左括号规则入栈\n      if(val ==='('||val==='['||val==='{'){\n        stack.push(val)\n      }else {\n        // 判断右括号是否和栈顶的左括号匹配\n         const top = stack.pop()\n         // 不匹配直接返回false，匹配循环继续\n         if(map.get(val) !== top) return false;\n      }\n  }\n  // 字符匹配完毕，判断栈内是否清空\n  return stack.length === 0\n};\n```\n<a name=\"Ebg2J\"></a>\n### 复杂度\n\n- 时间复杂度： O(n） ：一个循环解决的\n- 空间复杂度：O(n) ：stack最大可能就是将s字符串的所有字符压入，所以为O(n)\n\n\n\n<a name=\"KieVn\"></a>\n## 【144】二叉树的前序遍历 - 迭代\n<a name=\"3ocJ3\"></a>\n### 题目描述\n> 给你二叉树的根节点 `root` ，返回它节点值的 **前序**_ _遍历。\n> ![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png#align=left&display=inline&height=427&margin=%5Bobject%20Object%5D&name=image.png&originHeight=427&originWidth=920&size=30145&status=done&style=none&width=920)\n> [链接](https://leetcode-cn.com/problems/binary-tree-preorder-traversal/)\n\n<br />\n<a name=\"DnvMS\"></a>\n### 题解\n\n1. 首先明确前序遍历的规则：DLR ，即先找自身（D）节点，然后找左（L）节点，最后找右（R）节点\n> 延伸：\n> 中序遍历： LDR\n> 后续遍历： LRD\n\n2. <br />\n```javascript\n/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar preorderTraversal = function(root) {\n  if(!root) return []\n  const res = []\n  const stack = []\n  // 将根节点首先压入栈中\n  stack.push(root)\n  while(stack.length){\n    // 取出栈顶元素进行遍历操作,栈顶元素就是根元素即D\n    const d = stack.pop()\n    res.push(d.val)\n    //  分别取出左右节点,分别压入栈中\n    //  这里需要注意因为栈的特性是后进先出，所以我们前序遍历要先取出左节点，因为这里左节点要最后入栈\n    if(d.right) stack.push(d.right)\n    if(d.left) stack.push(d.left)\n  }\n  return res\n};\n```\n\n\n",
    "body_draft": "<a name=\"Psrpk\"></a>\n## 【20】有效的括号\n<a name=\"f0AHY\"></a>\n### 题目描述\n> 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。\n> \n\n> 有效字符串需满足：\n> - 左括号必须用相同类型的右括号闭合。\n> - 左括号必须以正确的顺序闭合。\n> \n**提示：**\n> - ** ** 1 <= s.length <= 10\n> - `s` 仅由括号 `'()[]{}'` 组成\n> \n<br />\n> [链接](https://leetcode-cn.com/problems/valid-parentheses/)\n\n<a name=\"ob7i5\"></a>\n### 题解\n\n1. 首先要明确一点，**最后出现的左括号一定是匹配第一次出现的右括号**（这就可以从栈的**后进先出**去匹配遇到右括号时是否能和栈顶的左括号相匹配）\n```javascript\nvar isValid = function(s) {\n  // 如果字符长度是奇数直接返回false\n  if(s.length%2===1) return false\n  // 构建map字典\n  const map = new Map([\n    [')','('],\n    ['}','{'],\n    [']','[']\n  ])\n  // 创建缓存栈\n  const stack = []\n  // 循环字符串\n  for(let val of s) {\n    // 符合左括号规则入栈\n      if(val ==='('||val==='['||val==='{'){\n        stack.push(val)\n      }else {\n        // 判断右括号是否和栈顶的左括号匹配\n         const top = stack.pop()\n         // 不匹配直接返回false，匹配循环继续\n         if(map.get(val) !== top) return false;\n      }\n  }\n  // 字符匹配完毕，判断栈内是否清空\n  return stack.length === 0\n};\n```\n<a name=\"Ebg2J\"></a>\n### 复杂度\n\n- 时间复杂度： O(n） ：一个循环解决的\n- 空间复杂度：O(n) ：stack最大可能就是将s字符串的所有字符压入，所以为O(n)\n\n\n\n<a name=\"KieVn\"></a>\n## 【144】二叉树的前序遍历 - 迭代\n<a name=\"3ocJ3\"></a>\n### 题目描述\n> 给你二叉树的根节点 `root` ，返回它节点值的 **前序**_ _遍历。\n> ![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png#align=left&display=inline&height=427&margin=%5Bobject%20Object%5D&name=image.png&originHeight=427&originWidth=920&size=30145&status=done&style=none&width=920)\n> [链接](https://leetcode-cn.com/problems/binary-tree-preorder-traversal/)\n\n<br />\n<a name=\"DnvMS\"></a>\n### 题解\n\n1. 首先明确前序遍历的规则：DLR ，即先找自身（D）节点，然后找左（L）节点，最后找右（R）节点\n> 延伸：\n> 中序遍历： LDR\n> 后续遍历： LRD\n\n2. <br />\n```javascript\n/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar preorderTraversal = function(root) {\n  if(!root) return []\n  const res = []\n  const stack = []\n  // 将根节点首先压入栈中\n  stack.push(root)\n  while(stack.length){\n    // 取出栈顶元素进行遍历操作,栈顶元素就是根元素即D\n    const d = stack.pop()\n    res.push(d.val)\n    //  分别取出左右节点,分别压入栈中\n    //  这里需要注意因为栈的特性是后进先出，所以我们前序遍历要先取出左节点，因为这里左节点要最后入栈\n    if(d.right) stack.push(d.right)\n    if(d.left) stack.push(d.left)\n  }\n  return res\n};\n```\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B17%2C0%2C1%2C0%5D%2C%5B17%2C0%2C1%2C2%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"8012a788b649d46e9eb1e13447f2cb31\" id=\"Psrpk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">【20】有效的括号</h2><h3 data-lake-id=\"c2dc14041ff617f96882649310ecb3d5\" id=\"f0AHY\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">题目描述</h3><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"f8384eae90dd9aaf590d21940bcf0f34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">给定一个只包括 '('，')'，'{'，'}'，'['，']'&nbsp;的字符串 s ，判断字符串是否有效。</p><p data-lake-id=\"55b7ae6df20298d1bae2c34388f5eb8a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"39e97174cd4140e2ebaf212f10214b3d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">有效字符串需满足：</p><ul data-lake-id=\"575f995d66d95557e8dcebdd6ab63f8d\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"01f08a7acc5644a5858db7b618f766b9\">左括号必须用相同类型的右括号闭合。</li><li data-lake-id=\"3069ce01500b0100453ec22bbaaaa9c3\">左括号必须以正确的顺序闭合。</li></ul><p data-lake-id=\"f3918d8f75fd86e88862c57df97ad845\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>提示：</strong></p><ul data-lake-id=\"cba85f899ccdca7cd5c72e4686c1bc15\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"6ae2e03b4eeaa8face78cdebc0841c67\"><strong> </strong><span style=\"background-color: rgba(0, 0, 0, 0.06);\"> 1 &lt;= s.length &lt;= 10</span><sup>4</sup></li><li data-lake-id=\"01f1c1f7f11eac0f6ede9d46c9a00e75\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">s</code><span style=\"background-color: transparent;\"> 仅由括号 </span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">'()[]{}'</code><span style=\"background-color: transparent;\"> 组成</span></li></ul><p data-lake-id=\"b84e3addf0f5a633b1639728a28f7463\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent;\"><br></span></p><p data-lake-id=\"2fc8014354b0a83a0708277e09fba677\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent;\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/valid-parentheses/\">链接</a></span></p></blockquote><h3 data-lake-id=\"0e8c21a13d0706d6c99385313ccd40f3\" id=\"ob7i5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">题解</h3><ol data-lake-id=\"d41083a9230689548ab4e05ce496eb7f\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"28b942a0ef7241a5039a2a574ff9ef81\">首先要明确一点，<strong>最后出现的左括号一定是匹配第一次出现的右括号</strong>（这就可以从栈的<strong>后进先出</strong>去匹配遇到右括号时是否能和栈顶的左括号相匹配）</li></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"FlpWV\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isValid</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 如果字符长度是奇数直接返回false</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">%</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 构建map字典</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">map</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Map</span>([\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    [<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">')'</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'('</span>],\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    [<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'}'</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'{'</span>],\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    [<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">']'</span>,<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'['</span>]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  ])\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 创建缓存栈</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> []\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 循环字符串</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">of</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">s</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 符合左括号规则入栈</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'('</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'['</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'{'</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 判断右括号是否和栈顶的左括号匹配</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">         <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">top</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pop</span>()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">         <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 不匹配直接返回false，匹配循环继续</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">         <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">map</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">get</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!==</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">top</span>) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 字符匹配完毕，判断栈内是否清空</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">===</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">};</span></span></pre></div></div></div><h3 data-lake-id=\"868d57afaab86beea7b9c478321ab3f4\" id=\"Ebg2J\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">复杂度</h3><ul data-lake-id=\"92f577fb78f9921eb2726acaec7ee7bb\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"db1f953d7a90dd862602a39d1b4c3bb0\">时间复杂度： O(n） ：一个循环解决的</li><li data-lake-id=\"7fb9dce91341e4a861be7910e270ba07\">空间复杂度：O(n) ：stack最大可能就是将s字符串的所有字符压入，所以为O(n)</li></ul><p data-lake-id=\"bb1e93bb774b145ae5801e96af16c3c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"96f1e9a12b47cf2f8f34740dd5a0dc63\" id=\"KieVn\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">【144】二叉树的前序遍历 - 迭代</h2><h3 data-lake-id=\"7976830d5e6e1a21eba03f498d15b391\" id=\"3ocJ3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">题目描述</h3><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"559f5eac180e84a16c6d7eb683d9a4b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">给你二叉树的根节点&nbsp;</span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">root</code><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">&nbsp;，返回它节点值的&nbsp;</span><strong>前序</strong><em>&nbsp;</em><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\">遍历。</span></p><p data-lake-id=\"ef580f2cf203a6d17fb5e7b0fc13a50f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"427px\" style=\"visibility: visible; width: 920px;\"></span></span></p><p data-lake-id=\"36393b2e6db4d8c09333a978709aa15e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/\">链接</a></span></p></blockquote><p data-lake-id=\"933c0ed4cfcb6b5e2c4798319e8edb29\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-10\" data-mce-style=\"font-size: 10px\" style=\"font-size: 13px;\"><br></span></p><h3 data-lake-id=\"c236f35a4864f6d1fbc503ef75dcbf47\" id=\"DnvMS\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">题解</h3><ol data-lake-id=\"227a72143636af6c78c6d105c04d37ab\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"489fc6e870ec941fd0ba96fa129765b5\">首先明确前序遍历的规则：DLR ，即先找自身（D）节点，然后找左（L）节点，最后找右（R）节点</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"be53daa8d698c4191f0d9f912b60c98c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">延伸：</p><p data-lake-id=\"2964be89a783b20dc6db027f808c2127\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">中序遍历： LDR</p><p data-lake-id=\"c7278be1a0ab04da3f7157daa28f0849\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">后续遍历： LRD</p></blockquote><ol data-lake-id=\"231a40474789f1575db11fe62b9aa6f5\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f6c0249ca1ee38a9c3a20da74bef7942\"><br></li></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"LCkDF\" class=\"lake-card-margin lake-card-embed-toolbar-active lake-activated\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/**</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * Definition for a binary tree node.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * function TreeNode(val, left, right) {</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> *     this.val = (val===undefined ? 0 : val)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> *     this.left = (left===undefined ? null : left)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> *     this.right = (right===undefined ? null : right)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * }</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> */</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/**</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * @param {TreeNode} root</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * @return {number[]}</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> */</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">preorderTraversal</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">root</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">root</span>) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> []\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">res</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> []\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> []\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 将根节点首先压入栈中</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">root</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 取出栈顶元素进行遍历操作,栈顶元素就是根元素即D</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pop</span>()\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">res</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">val</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//  分别取出左右节点,分别压入栈中</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//  这里需要注意因为栈的特性是后进先出，所以我们前序遍历要先取出左节点，因为这里左节点要最后入栈</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">right</span>) <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">right</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">left</span>) <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stack</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">d</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">left</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">res</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">};</span></span></pre></div></div></div><p data-lake-id=\"466a46dd0b6749d434bea04305640ee0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"8012a788b649d46e9eb1e13447f2cb31\" id=\"Psrpk\">【20】有效的括号</h2><h3 data-lake-id=\"c2dc14041ff617f96882649310ecb3d5\" id=\"f0AHY\">题目描述</h3><blockquote><p data-lake-id=\"f8384eae90dd9aaf590d21940bcf0f34\">给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。</p><p data-lake-id=\"55b7ae6df20298d1bae2c34388f5eb8a\"><br /></p><p data-lake-id=\"39e97174cd4140e2ebaf212f10214b3d\">有效字符串需满足：</p><ul data-lake-id=\"575f995d66d95557e8dcebdd6ab63f8d\"><li data-lake-id=\"01f08a7acc5644a5858db7b618f766b9\">左括号必须用相同类型的右括号闭合。</li><li data-lake-id=\"3069ce01500b0100453ec22bbaaaa9c3\">左括号必须以正确的顺序闭合。</li></ul><p data-lake-id=\"f3918d8f75fd86e88862c57df97ad845\"><strong>提示：</strong></p><ul data-lake-id=\"cba85f899ccdca7cd5c72e4686c1bc15\"><li data-lake-id=\"6ae2e03b4eeaa8face78cdebc0841c67\"><strong> </strong><span style=\"background-color: rgba(0, 0, 0, 0.06);\"> 1 &lt;= s.length &lt;= 10</span><sup>4</sup></li><li data-lake-id=\"01f1c1f7f11eac0f6ede9d46c9a00e75\"><code>s</code><span style=\"background-color: transparent;\"> 仅由括号 </span><code>'()[]{}'</code><span style=\"background-color: transparent;\"> 组成</span></li></ul><p data-lake-id=\"b84e3addf0f5a633b1639728a28f7463\"><span style=\"background-color: transparent;\"><br /></span></p><p data-lake-id=\"2fc8014354b0a83a0708277e09fba677\"><span style=\"background-color: transparent;\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/valid-parentheses/\">链接</a></span></p></blockquote><h3 data-lake-id=\"0e8c21a13d0706d6c99385313ccd40f3\" id=\"ob7i5\">题解</h3><ol data-lake-id=\"d41083a9230689548ab4e05ce496eb7f\" start=\"1\"><li data-lake-id=\"28b942a0ef7241a5039a2a574ff9ef81\">首先要明确一点，<strong>最后出现的左括号一定是匹配第一次出现的右括号</strong>（这就可以从栈的<strong>后进先出</strong>去匹配遇到右括号时是否能和栈顶的左括号相匹配）</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20isValid%20%3D%20function(s)%20%7B%5Cn%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E5%AD%97%E7%AC%A6%E9%95%BF%E5%BA%A6%E6%98%AF%E5%A5%87%E6%95%B0%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9Efalse%5Cn%20%20if(s.length%252%3D%3D%3D1)%20return%20false%5Cn%20%20%2F%2F%20%E6%9E%84%E5%BB%BAmap%E5%AD%97%E5%85%B8%5Cn%20%20const%20map%20%3D%20new%20Map(%5B%5Cn%20%20%20%20%5B')'%2C'('%5D%2C%5Cn%20%20%20%20%5B'%7D'%2C'%7B'%5D%2C%5Cn%20%20%20%20%5B'%5D'%2C'%5B'%5D%5Cn%20%20%5D)%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E7%BC%93%E5%AD%98%E6%A0%88%5Cn%20%20const%20stack%20%3D%20%5B%5D%5Cn%20%20%2F%2F%20%E5%BE%AA%E7%8E%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%5Cn%20%20for(let%20val%20of%20s)%20%7B%5Cn%20%20%20%20%2F%2F%20%E7%AC%A6%E5%90%88%E5%B7%A6%E6%8B%AC%E5%8F%B7%E8%A7%84%E5%88%99%E5%85%A5%E6%A0%88%5Cn%20%20%20%20%20%20if(val%20%3D%3D%3D'('%7C%7Cval%3D%3D%3D'%5B'%7C%7Cval%3D%3D%3D'%7B')%7B%5Cn%20%20%20%20%20%20%20%20stack.push(val)%5Cn%20%20%20%20%20%20%7Delse%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E5%8F%B3%E6%8B%AC%E5%8F%B7%E6%98%AF%E5%90%A6%E5%92%8C%E6%A0%88%E9%A1%B6%E7%9A%84%E5%B7%A6%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D%5Cn%20%20%20%20%20%20%20%20%20const%20top%20%3D%20stack.pop()%5Cn%20%20%20%20%20%20%20%20%20%2F%2F%20%E4%B8%8D%E5%8C%B9%E9%85%8D%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E5%8C%B9%E9%85%8D%E5%BE%AA%E7%8E%AF%E7%BB%A7%E7%BB%AD%5Cn%20%20%20%20%20%20%20%20%20if(map.get(val)%20!%3D%3D%20top)%20return%20false%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%AD%97%E7%AC%A6%E5%8C%B9%E9%85%8D%E5%AE%8C%E6%AF%95%EF%BC%8C%E5%88%A4%E6%96%AD%E6%A0%88%E5%86%85%E6%98%AF%E5%90%A6%E6%B8%85%E7%A9%BA%5Cn%20%20return%20stack.length%20%3D%3D%3D%200%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22FlpWV%22%2C%22autoWrap%22%3Afalse%7D\"></card><h3 data-lake-id=\"868d57afaab86beea7b9c478321ab3f4\" id=\"Ebg2J\">复杂度</h3><ul data-lake-id=\"92f577fb78f9921eb2726acaec7ee7bb\"><li data-lake-id=\"db1f953d7a90dd862602a39d1b4c3bb0\">时间复杂度： O(n） ：一个循环解决的</li><li data-lake-id=\"7fb9dce91341e4a861be7910e270ba07\">空间复杂度：O(n) ：stack最大可能就是将s字符串的所有字符压入，所以为O(n)</li></ul><p data-lake-id=\"bb1e93bb774b145ae5801e96af16c3c2\"><br /></p><h2 data-lake-id=\"96f1e9a12b47cf2f8f34740dd5a0dc63\" id=\"KieVn\">【144】二叉树的前序遍历 - 迭代</h2><h3 data-lake-id=\"7976830d5e6e1a21eba03f498d15b391\" id=\"3ocJ3\">题目描述</h3><blockquote><p data-lake-id=\"559f5eac180e84a16c6d7eb683d9a4b9\"><span class=\"lake-fontsize-10\">给你二叉树的根节点 </span><code>root</code><span class=\"lake-fontsize-10\"> ，返回它节点值的 </span><strong>前序</strong><em> </em><span class=\"lake-fontsize-10\">遍历。</span></p><p data-lake-id=\"ef580f2cf203a6d17fb5e7b0fc13a50f\"><span class=\"lake-fontsize-10\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png%22%2C%22originWidth%22%3A920%2C%22originHeight%22%3A427%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30145%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A16.086601%2C%22y%22%3A13.48198%2C%22width%22%3A42.747036%2C%22height%22%3A13.884017%2C%22text%22%3A%22%E7%A4%BA%E4%BE%8B1%3A%22%7D%2C%7B%22x%22%3A163.43372%2C%22y%22%3A185.75305%2C%22width%22%3A26.214240000000018%2C%22height%22%3A26.214240000000018%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A47.012497%2C%22y%22%3A312.50552%2C%22width%22%3A18.951362999999994%2C%22height%22%3A18.951362999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A31.45833%2C%22y%22%3A377.19998%2C%22width%22%3A181.86197%2C%22height%22%3A16.698720000000037%2C%22text%22%3A%22%E8%BE%93%E4%BA%BA%3Aroot-%5B1%2Cnul1%2C2%2C3%22%7D%2C%7B%22x%22%3A31.216454%2C%22y%22%3A398.403%2C%22width%22%3A96.252056%2C%22height%22%3A15.388049999999964%2C%22text%22%3A%22%E8%BE%93%E5%87%BA%3A%5B1%2C2%2C3%5D%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%A4%BA%E4%BE%8B1%3A%202%203%20%E8%BE%93%E4%BA%BA%3Aroot-%5B1%2Cnul1%2C2%2C3%20%E8%BE%93%E5%87%BA%3A%5B1%2C2%2C3%5D%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A920%2C%22height%22%3A427%7D\"></card></span></p><p data-lake-id=\"36393b2e6db4d8c09333a978709aa15e\"><span class=\"lake-fontsize-10\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/\">链接</a></span></p></blockquote><p data-lake-id=\"933c0ed4cfcb6b5e2c4798319e8edb29\"><span class=\"lake-fontsize-10\"><br /></span></p><h3 data-lake-id=\"c236f35a4864f6d1fbc503ef75dcbf47\" id=\"DnvMS\">题解</h3><ol data-lake-id=\"227a72143636af6c78c6d105c04d37ab\" start=\"1\"><li data-lake-id=\"489fc6e870ec941fd0ba96fa129765b5\">首先明确前序遍历的规则：DLR ，即先找自身（D）节点，然后找左（L）节点，最后找右（R）节点</li></ol><blockquote><p data-lake-id=\"be53daa8d698c4191f0d9f912b60c98c\">延伸：</p><p data-lake-id=\"2964be89a783b20dc6db027f808c2127\" style=\"text-indent: 2em;\">中序遍历： LDR</p><p data-lake-id=\"c7278be1a0ab04da3f7157daa28f0849\" style=\"text-indent: 2em;\">后续遍历： LRD</p></blockquote><ol data-lake-id=\"231a40474789f1575db11fe62b9aa6f5\" start=\"2\"><li data-lake-id=\"f6c0249ca1ee38a9c3a20da74bef7942\"><br /></li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20Definition%20for%20a%20binary%20tree%20node.%5Cn%20*%20function%20TreeNode(val%2C%20left%2C%20right)%20%7B%5Cn%20*%20%20%20%20%20this.val%20%3D%20(val%3D%3D%3Dundefined%20%3F%200%20%3A%20val)%5Cn%20*%20%20%20%20%20this.left%20%3D%20(left%3D%3D%3Dundefined%20%3F%20null%20%3A%20left)%5Cn%20*%20%20%20%20%20this.right%20%3D%20(right%3D%3D%3Dundefined%20%3F%20null%20%3A%20right)%5Cn%20*%20%7D%5Cn%20*%2F%5Cn%2F**%5Cn%20*%20%40param%20%7BTreeNode%7D%20root%5Cn%20*%20%40return%20%7Bnumber%5B%5D%7D%5Cn%20*%2F%5Cnvar%20preorderTraversal%20%3D%20function(root)%20%7B%5Cn%20%20if(!root)%20return%20%5B%5D%5Cn%20%20const%20res%20%3D%20%5B%5D%5Cn%20%20const%20stack%20%3D%20%5B%5D%5Cn%20%20%2F%2F%20%E5%B0%86%E6%A0%B9%E8%8A%82%E7%82%B9%E9%A6%96%E5%85%88%E5%8E%8B%E5%85%A5%E6%A0%88%E4%B8%AD%5Cn%20%20stack.push(root)%5Cn%20%20while(stack.length)%7B%5Cn%20%20%20%20%2F%2F%20%E5%8F%96%E5%87%BA%E6%A0%88%E9%A1%B6%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E9%81%8D%E5%8E%86%E6%93%8D%E4%BD%9C%2C%E6%A0%88%E9%A1%B6%E5%85%83%E7%B4%A0%E5%B0%B1%E6%98%AF%E6%A0%B9%E5%85%83%E7%B4%A0%E5%8D%B3D%5Cn%20%20%20%20const%20d%20%3D%20stack.pop()%5Cn%20%20%20%20res.push(d.val)%5Cn%20%20%20%20%2F%2F%20%20%E5%88%86%E5%88%AB%E5%8F%96%E5%87%BA%E5%B7%A6%E5%8F%B3%E8%8A%82%E7%82%B9%2C%E5%88%86%E5%88%AB%E5%8E%8B%E5%85%A5%E6%A0%88%E4%B8%AD%5Cn%20%20%20%20%2F%2F%20%20%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E5%9B%A0%E4%B8%BA%E6%A0%88%E7%9A%84%E7%89%B9%E6%80%A7%E6%98%AF%E5%90%8E%E8%BF%9B%E5%85%88%E5%87%BA%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E8%A6%81%E5%85%88%E5%8F%96%E5%87%BA%E5%B7%A6%E8%8A%82%E7%82%B9%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E9%87%8C%E5%B7%A6%E8%8A%82%E7%82%B9%E8%A6%81%E6%9C%80%E5%90%8E%E5%85%A5%E6%A0%88%5Cn%20%20%20%20if(d.right)%20stack.push(d.right)%5Cn%20%20%20%20if(d.left)%20stack.push(d.left)%5Cn%20%20%7D%5Cn%20%20return%20res%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22LCkDF%22%7D\"></card><p data-lake-id=\"466a46dd0b6749d434bea04305640ee0\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"8012a788b649d46e9eb1e13447f2cb31\" id=\"Psrpk\">【20】有效的括号</h2><h3 data-lake-id=\"c2dc14041ff617f96882649310ecb3d5\" id=\"f0AHY\">题目描述</h3><blockquote><p data-lake-id=\"f8384eae90dd9aaf590d21940bcf0f34\">给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。</p><p data-lake-id=\"55b7ae6df20298d1bae2c34388f5eb8a\"><br /></p><p data-lake-id=\"39e97174cd4140e2ebaf212f10214b3d\">有效字符串需满足：</p><ul data-lake-id=\"575f995d66d95557e8dcebdd6ab63f8d\"><li data-lake-id=\"01f08a7acc5644a5858db7b618f766b9\">左括号必须用相同类型的右括号闭合。</li><li data-lake-id=\"3069ce01500b0100453ec22bbaaaa9c3\">左括号必须以正确的顺序闭合。</li></ul><p data-lake-id=\"f3918d8f75fd86e88862c57df97ad845\"><strong>提示：</strong></p><ul data-lake-id=\"cba85f899ccdca7cd5c72e4686c1bc15\"><li data-lake-id=\"6ae2e03b4eeaa8face78cdebc0841c67\"><strong> </strong><span style=\"background-color: rgba(0, 0, 0, 0.06);\"> 1 &lt;= s.length &lt;= 10</span><sup>4</sup></li><li data-lake-id=\"01f1c1f7f11eac0f6ede9d46c9a00e75\"><code>s</code><span style=\"background-color: transparent;\"> 仅由括号 </span><code>'()[]{}'</code><span style=\"background-color: transparent;\"> 组成</span></li></ul><p data-lake-id=\"b84e3addf0f5a633b1639728a28f7463\"><span style=\"background-color: transparent;\"><br /></span></p><p data-lake-id=\"2fc8014354b0a83a0708277e09fba677\"><span style=\"background-color: transparent;\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/valid-parentheses/\">链接</a></span></p></blockquote><h3 data-lake-id=\"0e8c21a13d0706d6c99385313ccd40f3\" id=\"ob7i5\">题解</h3><ol data-lake-id=\"d41083a9230689548ab4e05ce496eb7f\" start=\"1\"><li data-lake-id=\"28b942a0ef7241a5039a2a574ff9ef81\">首先要明确一点，<strong>最后出现的左括号一定是匹配第一次出现的右括号</strong>（这就可以从栈的<strong>后进先出</strong>去匹配遇到右括号时是否能和栈顶的左括号相匹配）</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20isValid%20%3D%20function(s)%20%7B%5Cn%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E5%AD%97%E7%AC%A6%E9%95%BF%E5%BA%A6%E6%98%AF%E5%A5%87%E6%95%B0%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9Efalse%5Cn%20%20if(s.length%252%3D%3D%3D1)%20return%20false%5Cn%20%20%2F%2F%20%E6%9E%84%E5%BB%BAmap%E5%AD%97%E5%85%B8%5Cn%20%20const%20map%20%3D%20new%20Map(%5B%5Cn%20%20%20%20%5B')'%2C'('%5D%2C%5Cn%20%20%20%20%5B'%7D'%2C'%7B'%5D%2C%5Cn%20%20%20%20%5B'%5D'%2C'%5B'%5D%5Cn%20%20%5D)%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E7%BC%93%E5%AD%98%E6%A0%88%5Cn%20%20const%20stack%20%3D%20%5B%5D%5Cn%20%20%2F%2F%20%E5%BE%AA%E7%8E%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%5Cn%20%20for(let%20val%20of%20s)%20%7B%5Cn%20%20%20%20%2F%2F%20%E7%AC%A6%E5%90%88%E5%B7%A6%E6%8B%AC%E5%8F%B7%E8%A7%84%E5%88%99%E5%85%A5%E6%A0%88%5Cn%20%20%20%20%20%20if(val%20%3D%3D%3D'('%7C%7Cval%3D%3D%3D'%5B'%7C%7Cval%3D%3D%3D'%7B')%7B%5Cn%20%20%20%20%20%20%20%20stack.push(val)%5Cn%20%20%20%20%20%20%7Delse%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E5%8F%B3%E6%8B%AC%E5%8F%B7%E6%98%AF%E5%90%A6%E5%92%8C%E6%A0%88%E9%A1%B6%E7%9A%84%E5%B7%A6%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D%5Cn%20%20%20%20%20%20%20%20%20const%20top%20%3D%20stack.pop()%5Cn%20%20%20%20%20%20%20%20%20%2F%2F%20%E4%B8%8D%E5%8C%B9%E9%85%8D%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E5%8C%B9%E9%85%8D%E5%BE%AA%E7%8E%AF%E7%BB%A7%E7%BB%AD%5Cn%20%20%20%20%20%20%20%20%20if(map.get(val)%20!%3D%3D%20top)%20return%20false%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%AD%97%E7%AC%A6%E5%8C%B9%E9%85%8D%E5%AE%8C%E6%AF%95%EF%BC%8C%E5%88%A4%E6%96%AD%E6%A0%88%E5%86%85%E6%98%AF%E5%90%A6%E6%B8%85%E7%A9%BA%5Cn%20%20return%20stack.length%20%3D%3D%3D%200%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22FlpWV%22%2C%22autoWrap%22%3Afalse%7D\"></card><h3 data-lake-id=\"868d57afaab86beea7b9c478321ab3f4\" id=\"Ebg2J\">复杂度</h3><ul data-lake-id=\"92f577fb78f9921eb2726acaec7ee7bb\"><li data-lake-id=\"db1f953d7a90dd862602a39d1b4c3bb0\">时间复杂度： O(n） ：一个循环解决的</li><li data-lake-id=\"7fb9dce91341e4a861be7910e270ba07\">空间复杂度：O(n) ：stack最大可能就是将s字符串的所有字符压入，所以为O(n)</li></ul><p data-lake-id=\"bb1e93bb774b145ae5801e96af16c3c2\"><br /></p><h2 data-lake-id=\"96f1e9a12b47cf2f8f34740dd5a0dc63\" id=\"KieVn\">【144】二叉树的前序遍历 - 迭代</h2><h3 data-lake-id=\"7976830d5e6e1a21eba03f498d15b391\" id=\"3ocJ3\">题目描述</h3><blockquote><p data-lake-id=\"559f5eac180e84a16c6d7eb683d9a4b9\"><span class=\"lake-fontsize-10\">给你二叉树的根节点 </span><code>root</code><span class=\"lake-fontsize-10\"> ，返回它节点值的 </span><strong>前序</strong><em> </em><span class=\"lake-fontsize-10\">遍历。</span></p><p data-lake-id=\"ef580f2cf203a6d17fb5e7b0fc13a50f\"><span class=\"lake-fontsize-10\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png%22%2C%22originWidth%22%3A920%2C%22originHeight%22%3A427%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30145%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A16.086601%2C%22y%22%3A13.48198%2C%22width%22%3A42.747036%2C%22height%22%3A13.884017%2C%22text%22%3A%22%E7%A4%BA%E4%BE%8B1%3A%22%7D%2C%7B%22x%22%3A163.43372%2C%22y%22%3A185.75305%2C%22width%22%3A26.214240000000018%2C%22height%22%3A26.214240000000018%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A47.012497%2C%22y%22%3A312.50552%2C%22width%22%3A18.951362999999994%2C%22height%22%3A18.951362999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A31.45833%2C%22y%22%3A377.19998%2C%22width%22%3A181.86197%2C%22height%22%3A16.698720000000037%2C%22text%22%3A%22%E8%BE%93%E4%BA%BA%3Aroot-%5B1%2Cnul1%2C2%2C3%22%7D%2C%7B%22x%22%3A31.216454%2C%22y%22%3A398.403%2C%22width%22%3A96.252056%2C%22height%22%3A15.388049999999964%2C%22text%22%3A%22%E8%BE%93%E5%87%BA%3A%5B1%2C2%2C3%5D%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%A4%BA%E4%BE%8B1%3A%202%203%20%E8%BE%93%E4%BA%BA%3Aroot-%5B1%2Cnul1%2C2%2C3%20%E8%BE%93%E5%87%BA%3A%5B1%2C2%2C3%5D%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A920%2C%22height%22%3A427%7D\"></card></span></p><p data-lake-id=\"36393b2e6db4d8c09333a978709aa15e\"><span class=\"lake-fontsize-10\"><a target=\"_blank\" href=\"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/\">链接</a></span></p></blockquote><p data-lake-id=\"933c0ed4cfcb6b5e2c4798319e8edb29\"><span class=\"lake-fontsize-10\"><br /></span></p><h3 data-lake-id=\"c236f35a4864f6d1fbc503ef75dcbf47\" id=\"DnvMS\">题解</h3><ol data-lake-id=\"227a72143636af6c78c6d105c04d37ab\" start=\"1\"><li data-lake-id=\"489fc6e870ec941fd0ba96fa129765b5\">首先明确前序遍历的规则：DLR ，即先找自身（D）节点，然后找左（L）节点，最后找右（R）节点</li></ol><blockquote><p data-lake-id=\"be53daa8d698c4191f0d9f912b60c98c\">延伸：</p><p data-lake-id=\"2964be89a783b20dc6db027f808c2127\" style=\"text-indent: 2em;\">中序遍历： LDR</p><p data-lake-id=\"c7278be1a0ab04da3f7157daa28f0849\" style=\"text-indent: 2em;\">后续遍历： LRD</p></blockquote><ol data-lake-id=\"231a40474789f1575db11fe62b9aa6f5\" start=\"2\"><li data-lake-id=\"f6c0249ca1ee38a9c3a20da74bef7942\"><br /></li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20Definition%20for%20a%20binary%20tree%20node.%5Cn%20*%20function%20TreeNode(val%2C%20left%2C%20right)%20%7B%5Cn%20*%20%20%20%20%20this.val%20%3D%20(val%3D%3D%3Dundefined%20%3F%200%20%3A%20val)%5Cn%20*%20%20%20%20%20this.left%20%3D%20(left%3D%3D%3Dundefined%20%3F%20null%20%3A%20left)%5Cn%20*%20%20%20%20%20this.right%20%3D%20(right%3D%3D%3Dundefined%20%3F%20null%20%3A%20right)%5Cn%20*%20%7D%5Cn%20*%2F%5Cn%2F**%5Cn%20*%20%40param%20%7BTreeNode%7D%20root%5Cn%20*%20%40return%20%7Bnumber%5B%5D%7D%5Cn%20*%2F%5Cnvar%20preorderTraversal%20%3D%20function(root)%20%7B%5Cn%20%20if(!root)%20return%20%5B%5D%5Cn%20%20const%20res%20%3D%20%5B%5D%5Cn%20%20const%20stack%20%3D%20%5B%5D%5Cn%20%20%2F%2F%20%E5%B0%86%E6%A0%B9%E8%8A%82%E7%82%B9%E9%A6%96%E5%85%88%E5%8E%8B%E5%85%A5%E6%A0%88%E4%B8%AD%5Cn%20%20stack.push(root)%5Cn%20%20while(stack.length)%7B%5Cn%20%20%20%20%2F%2F%20%E5%8F%96%E5%87%BA%E6%A0%88%E9%A1%B6%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E9%81%8D%E5%8E%86%E6%93%8D%E4%BD%9C%2C%E6%A0%88%E9%A1%B6%E5%85%83%E7%B4%A0%E5%B0%B1%E6%98%AF%E6%A0%B9%E5%85%83%E7%B4%A0%E5%8D%B3D%5Cn%20%20%20%20const%20d%20%3D%20stack.pop()%5Cn%20%20%20%20res.push(d.val)%5Cn%20%20%20%20%2F%2F%20%20%E5%88%86%E5%88%AB%E5%8F%96%E5%87%BA%E5%B7%A6%E5%8F%B3%E8%8A%82%E7%82%B9%2C%E5%88%86%E5%88%AB%E5%8E%8B%E5%85%A5%E6%A0%88%E4%B8%AD%5Cn%20%20%20%20%2F%2F%20%20%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E5%9B%A0%E4%B8%BA%E6%A0%88%E7%9A%84%E7%89%B9%E6%80%A7%E6%98%AF%E5%90%8E%E8%BF%9B%E5%85%88%E5%87%BA%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E8%A6%81%E5%85%88%E5%8F%96%E5%87%BA%E5%B7%A6%E8%8A%82%E7%82%B9%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E9%87%8C%E5%B7%A6%E8%8A%82%E7%82%B9%E8%A6%81%E6%9C%80%E5%90%8E%E5%85%A5%E6%A0%88%5Cn%20%20%20%20if(d.right)%20stack.push(d.right)%5Cn%20%20%20%20if(d.left)%20stack.push(d.left)%5Cn%20%20%7D%5Cn%20%20return%20res%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22LCkDF%22%7D\"></card><p data-lake-id=\"466a46dd0b6749d434bea04305640ee0\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-02T09:26:07.000Z",
    "deleted_at": null,
    "created_at": "2021-02-02T06:10:34.000Z",
    "updated_at": "2021-02-02T09:26:08.000Z",
    "published_at": "2021-02-02T09:26:07.000Z",
    "first_published_at": "2021-02-02T07:05:55.000Z",
    "word_count": 763,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/2705850/1612251623472-983623d0-dd7e-44be-b6a6-3532f6f145c2.png",
    "description": "【20】有效的括号题目描述给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。有效字符串需满足：左括号必须用相同类型的右括号闭合。左括号必须以正确的顺序闭合。提示：  1 <= s.length <= 104s 仅由括号 '()[]{}' 组成链...",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 31083709,
    "slug": "qdou1k",
    "title": "栈",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png#align=left&display=inline&height=314&margin=%5Bobject%20Object%5D&name=image.png&originHeight=314&originWidth=342&size=23754&status=done&style=none&width=342)\n<a name=\"va1Yz\"></a>\n## 定义\n一种**后进先出**的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的<br />\n\n<a name=\"16UL2\"></a>\n## 名词解释\n\n\n<a name=\"zeigJ\"></a>\n### push： 入栈\n<a name=\"onWRb\"></a>\n### pop： 出栈\n<a name=\"fHjCD\"></a>\n### top：栈顶\n\n\n<a name=\"nno6m\"></a>\n## JavaScript中的栈\n\n<br />在js中是没用栈这种数据结构的，不过我们可以利用**数组**来模拟。<br />而且在js中也是有对应的 `push` 和 `pop` 方法的:<br />\n<br />push: 向数组末尾添加一个元素，返回值是数组的长度<br />pop：移除数组的第一个元素，返回值是移除的元素<br />\n\n<a name=\"79Jl3\"></a>\n## 什么场景下用栈？\n\n\n> 最直白的讲就是需要**后进先出**的场景\n\n\n\n<a name=\"3aGk3\"></a>\n### 十进制转二进制\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245130432-6b1613e8-13ae-4f96-a691-47f68394f3bb.png#align=left&display=inline&height=259&margin=%5Bobject%20Object%5D&name=image.png&originHeight=259&originWidth=379&size=80976&status=done&style=none&width=379)<br />我们计算十进制转二进制时，就是不断除以2，然后取余数<br />然后将最后一位的余数与第一位的余数拼成二进制<br />\n<br />这样的后进先出的手法有没有想到栈！<br />\n\n<a name=\"TwG6v\"></a>\n### 判断字符串的括号是否有效\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245247309-b9ef1209-3935-4573-acd5-3b11b1e44384.png#align=left&display=inline&height=228&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=275&size=30754&status=done&style=none&width=275)<br />我们验证括号是否有效其实就是在验证是不是能够凑齐一对完整的闭合括号。<br />\n<br />而且我们可以发现一个规律，越靠左的左括号，它对应的右括号就越靠右。反之也就是最后面的左括号，对应的必定是出现的第一个右括号。<br />\n<br />所以我们就可以在遇到左括号时就入栈，遇到右括号时就与栈顶的括号就行配对比较，若果符合配对规则则出栈，否则就不符合规则直接判定无效。匹配到最后结如果栈内是空就证明可以完整闭合<br />\n<br />\n\n<a name=\"venNQ\"></a>\n### 函数调用栈等\n\n<br />这个可以看浏览器，js的解释器就是通过调用栈的形式实现的<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249568954-7f2f8a5c-6c50-4eb5-bb44-c98e9dd0490b.png#align=left&display=inline&height=290&margin=%5Bobject%20Object%5D&name=image.png&originHeight=290&originWidth=305&size=43181&status=done&style=none&width=305)![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249579751-d03a29ca-0a7a-4a44-896b-2bb23a79b6ed.png#align=left&display=inline&height=130&margin=%5Bobject%20Object%5D&name=image.png&originHeight=182&originWidth=470&size=38332&status=done&style=none&width=335)<br />\n<br />执行fun1时先将fun1入栈，然后调用fun2，入栈；然后调用fun3入栈。<br />\n<br />fun3执行完毕出栈<br />fun2执行完毕出栈<br />fun1执行完毕出栈<br />程序执行完毕\n",
    "body_draft": "![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png#align=left&display=inline&height=314&margin=%5Bobject%20Object%5D&name=image.png&originHeight=314&originWidth=342&size=23754&status=done&style=none&width=342)\n<a name=\"va1Yz\"></a>\n## 定义\n一种**后进先出**的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的<br />\n\n<a name=\"16UL2\"></a>\n## 名词解释\n\n\n<a name=\"zeigJ\"></a>\n### push： 入栈\n<a name=\"onWRb\"></a>\n### pop： 出栈\n<a name=\"fHjCD\"></a>\n### top：栈顶\n\n\n<a name=\"nno6m\"></a>\n## JavaScript中的栈\n\n<br />在js中是没用栈这种数据结构的，不过我们可以利用**数组**来模拟。<br />而且在js中也是有对应的 `push` 和 `pop` 方法的:<br />\n<br />push: 向数组末尾添加一个元素，返回值是数组的长度<br />pop：移除数组的第一个元素，返回值是移除的元素<br />\n\n<a name=\"79Jl3\"></a>\n## 什么场景下用栈？\n\n\n> 最直白的讲就是需要**后进先出**的场景\n\n\n\n<a name=\"3aGk3\"></a>\n### 十进制转二进制\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245130432-6b1613e8-13ae-4f96-a691-47f68394f3bb.png#align=left&display=inline&height=259&margin=%5Bobject%20Object%5D&name=image.png&originHeight=259&originWidth=379&size=80976&status=done&style=none&width=379)<br />我们计算十进制转二进制时，就是不断除以2，然后取余数<br />然后将最后一位的余数与第一位的余数拼成二进制<br />\n<br />这样的后进先出的手法有没有想到栈！<br />\n\n<a name=\"TwG6v\"></a>\n### 判断字符串的括号是否有效\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245247309-b9ef1209-3935-4573-acd5-3b11b1e44384.png#align=left&display=inline&height=228&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=275&size=30754&status=done&style=none&width=275)<br />我们验证括号是否有效其实就是在验证是不是能够凑齐一对完整的闭合括号。<br />\n<br />而且我们可以发现一个规律，越靠左的左括号，它对应的右括号就越靠右。反之也就是最后面的左括号，对应的必定是出现的第一个右括号。<br />\n<br />所以我们就可以在遇到左括号时就入栈，遇到右括号时就与栈顶的括号就行配对比较，若果符合配对规则则出栈，否则就不符合规则直接判定无效。匹配到最后结如果栈内是空就证明可以完整闭合<br />\n<br />\n\n<a name=\"venNQ\"></a>\n### 函数调用栈等\n\n<br />这个可以看浏览器，js的解释器就是通过调用栈的形式实现的<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249568954-7f2f8a5c-6c50-4eb5-bb44-c98e9dd0490b.png#align=left&display=inline&height=290&margin=%5Bobject%20Object%5D&name=image.png&originHeight=290&originWidth=305&size=43181&status=done&style=none&width=305)![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249579751-d03a29ca-0a7a-4a44-896b-2bb23a79b6ed.png#align=left&display=inline&height=130&margin=%5Bobject%20Object%5D&name=image.png&originHeight=182&originWidth=470&size=38332&status=done&style=none&width=335)<br />\n<br />执行fun1时先将fun1入栈，然后调用fun2，入栈；然后调用fun3入栈。<br />\n<br />fun3执行完毕出栈<br />fun2执行完毕出栈<br />fun1执行完毕出栈<br />程序执行完毕\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B48%2C0%2C6%5D%2C%5B48%2C0%2C6%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"314px\" style=\"visibility: visible; width: 342px;\"></span></p><h2 data-lake-id=\"99b1343b60586650e3bd2acde6982a60\" id=\"va1Yz\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">定义</h2><p data-lake-id=\"223a872fa53895fdfb1efbc03d18b360\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一种<strong>后进先出</strong>的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的</p><p data-lake-id=\"56ea7e919c5ce1cb961122f1ff13ff3a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"a95e7d03e2901368363d7ba7d0b65078\" id=\"16UL2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">名词解释</h2><p data-lake-id=\"53ce295337d108f753cc24859e52ca19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"3df5a128bc34832996ee788dd5ae44c3\" id=\"zeigJ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">push： 入栈</h3><h3 data-lake-id=\"d20528768ab320325a8dd73e5b5abc0e\" id=\"onWRb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">pop： 出栈</h3><h3 data-lake-id=\"30076fce249bd9d7f697ce507353030a\" id=\"fHjCD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">top：栈顶</h3><p data-lake-id=\"2cd0e2bc9660ff512fe9e705264c62fd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"8e896a689ee2e5431ba4740d7e8d462f\" id=\"nno6m\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">JavaScript中的栈</h2><p data-lake-id=\"ac56929c29eaaa7cef2d1084b19add0c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"642509b76a71695d0517380b3c1bbccc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在js中是没用栈这种数据结构的，不过我们可以利用<strong>数组</strong>来模拟。</p><p data-lake-id=\"0265e0cb99f393f297a5372214961705\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而且在js中也是有对应的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">push</code>&nbsp;和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">pop</code>&nbsp;方法的:</p><p data-lake-id=\"c99b8e0de69314783e174e3465dd52cb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"346f220455f1ff39a6bc3077296b620f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">push: 向数组末尾添加一个元素，返回值是数组的长度</p><p data-lake-id=\"72c20d8dd6bb99c8a09016f647d46c45\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">pop：移除数组的第一个元素，返回值是移除的元素</p><p data-lake-id=\"8d489fbe0d913f23d48224e8d69c42e5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"206f6c12d71aeda0dc453a605f4b25e1\" id=\"79Jl3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">什么场景下用栈？</h2><p data-lake-id=\"effe1b348a180810cb2879986eda06f0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"9264f48f99ed70991ffb308a94d84160\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最直白的讲就是需要<strong>后进先出</strong>的场景</p></blockquote><p data-lake-id=\"eaa42ac762132ede7d2fc4441771b43f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"3e58112368e97e2a6777091351ba9566\" id=\"3aGk3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">十进制转二进制</h3><p data-lake-id=\"c71096ba40a7b489a0592de93652c1be\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245130432-6b1613e8-13ae-4f96-a691-47f68394f3bb.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"259px\" style=\"visibility: visible; width: 379px;\"></span></p><p data-lake-id=\"5a7dff035651ae5c2a9bdb69e450394c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们计算十进制转二进制时，就是不断除以2，然后取余数</p><p data-lake-id=\"f3aafae77707673b5ce49ddff7198e27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后将最后一位的余数与第一位的余数拼成二进制</p><p data-lake-id=\"dfd2f9269f7477d88c68aff5dcc472fa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2b234b4cd9d7423b3510d9c4dded05a6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样的后进先出的手法有没有想到栈！</p><p data-lake-id=\"acb4f3b82b85b0f97b82de2576da4c3b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"227cda13acb18b98b0ec97f2248ef9bd\" id=\"TwG6v\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">判断字符串的括号是否有效</h3><p data-lake-id=\"d5c97af8d53b743673c43c35b5cc4c79\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612245247309-b9ef1209-3935-4573-acd5-3b11b1e44384.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"228px\" style=\"visibility: visible; width: 275px;\"></span></p><p data-lake-id=\"3d44dfb86bea90ac48c654d65fba01f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们验证括号是否有效其实就是在验证是不是能够凑齐一对完整的闭合括号。</p><p data-lake-id=\"0bbb1e52f0519606091d524a1597706d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8ee82dd582e7166a728adc54d00c767a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而且我们可以发现一个规律，越靠左的左括号，它对应的右括号就越靠右。反之也就是最后面的左括号，对应的必定是出现的第一个右括号。</p><p data-lake-id=\"6421d8f9dd376425e9b9d8b021a98663\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ba26ba96c0d6c5d6dcd2857f5034d01b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以我们就可以在遇到左括号时就入栈，遇到右括号时就与栈顶的括号就行配对比较，若果符合配对规则则出栈，否则就不符合规则直接判定无效。匹配到最后结如果栈内是空就证明可以完整闭合</p><p data-lake-id=\"5f6556891babef04542f41429628e912\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8b6e020f9ef74a694ce95eed96cc2b40\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"e67f5d90e5417a526d5c38ccdf2fa4a8\" id=\"venNQ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">函数调用栈等</h3><p data-lake-id=\"98a2ace692ca432a75e8e2be6435ad0f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a82f9c889f5736ccfbcb0a1793d1ec06\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个可以看浏览器，js的解释器就是通过调用栈的形式实现的</p><p data-lake-id=\"7a3f58dba0a29ac05af3e2a5fba935cf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249568954-7f2f8a5c-6c50-4eb5-bb44-c98e9dd0490b.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"290px\" style=\"visibility: visible; width: 305px;\"></span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612249579751-d03a29ca-0a7a-4a44-896b-2bb23a79b6ed.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"130px\" style=\"visibility: visible; width: 335px;\"></span></p><p data-lake-id=\"fe233be623f2a226c58bf5a0aa863d72\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"24a9099f94e02c7c280c413ac8f6d5d6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">执行fun1时先将fun1入栈，然后调用fun2，入栈；然后调用fun3入栈。</p><p data-lake-id=\"c9ff803d8d2890be43ce22ee4b410d18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a9cc356a61ab1566cd5a6cf91cfe1be7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">fun3执行完毕出栈</p><p data-lake-id=\"2230079f3b5bf58ddba260f794cabf53\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">fun2执行完毕出栈</p><p data-lake-id=\"2e9276f849038d607ac07d0815fc195f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">fun1执行完毕出栈</p><p data-lake-id=\"482a7d1800e8c8f3b86ded2092f86a34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">程序执行完毕</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png%22%2C%22originWidth%22%3A342%2C%22originHeight%22%3A314%2C%22name%22%3A%22image.png%22%2C%22size%22%3A23754%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A27.731445%2C%22y%22%3A34.347366%2C%22width%22%3A43.188455%2C%22height%22%3A15.927673999999996%2C%22text%22%3A%22push%22%7D%2C%7B%22x%22%3A259.15433%2C%22y%22%3A36.021336%2C%22width%22%3A34.64598999999998%2C%22height%22%3A15.747772000000005%2C%22text%22%3A%22pop%22%7D%2C%7B%22x%22%3A274.4982%2C%22y%22%3A131.70189%2C%22width%22%3A29.244019999999978%2C%22height%22%3A17.44063%2C%22text%22%3A%22top%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22push%20pop%20top%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A342%2C%22height%22%3A314%7D\"></card></p><h2 data-lake-id=\"99b1343b60586650e3bd2acde6982a60\" id=\"va1Yz\">定义</h2><p data-lake-id=\"223a872fa53895fdfb1efbc03d18b360\">一种<strong>后进先出</strong>的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的</p><p data-lake-id=\"56ea7e919c5ce1cb961122f1ff13ff3a\"><br /></p><h2 data-lake-id=\"a95e7d03e2901368363d7ba7d0b65078\" id=\"16UL2\">名词解释</h2><p data-lake-id=\"53ce295337d108f753cc24859e52ca19\"><br /></p><h3 data-lake-id=\"3df5a128bc34832996ee788dd5ae44c3\" id=\"zeigJ\">push： 入栈</h3><h3 data-lake-id=\"d20528768ab320325a8dd73e5b5abc0e\" id=\"onWRb\">pop： 出栈</h3><h3 data-lake-id=\"30076fce249bd9d7f697ce507353030a\" id=\"fHjCD\">top：栈顶</h3><p data-lake-id=\"2cd0e2bc9660ff512fe9e705264c62fd\"><br /></p><h2 data-lake-id=\"8e896a689ee2e5431ba4740d7e8d462f\" id=\"nno6m\">JavaScript中的栈</h2><p data-lake-id=\"ac56929c29eaaa7cef2d1084b19add0c\"><br /></p><p data-lake-id=\"642509b76a71695d0517380b3c1bbccc\">在js中是没用栈这种数据结构的，不过我们可以利用<strong>数组</strong>来模拟。</p><p data-lake-id=\"0265e0cb99f393f297a5372214961705\">而且在js中也是有对应的 <code>push</code> 和 <code>pop</code> 方法的:</p><p data-lake-id=\"c99b8e0de69314783e174e3465dd52cb\"><br /></p><p data-lake-id=\"346f220455f1ff39a6bc3077296b620f\">push: 向数组末尾添加一个元素，返回值是数组的长度</p><p data-lake-id=\"72c20d8dd6bb99c8a09016f647d46c45\">pop：移除数组的第一个元素，返回值是移除的元素</p><p data-lake-id=\"8d489fbe0d913f23d48224e8d69c42e5\"><br /></p><h2 data-lake-id=\"206f6c12d71aeda0dc453a605f4b25e1\" id=\"79Jl3\">什么场景下用栈？</h2><p data-lake-id=\"effe1b348a180810cb2879986eda06f0\"><br /></p><blockquote><p data-lake-id=\"9264f48f99ed70991ffb308a94d84160\">最直白的讲就是需要<strong>后进先出</strong>的场景</p></blockquote><p data-lake-id=\"eaa42ac762132ede7d2fc4441771b43f\"><br /></p><h3 data-lake-id=\"3e58112368e97e2a6777091351ba9566\" id=\"3aGk3\">十进制转二进制</h3><p data-lake-id=\"c71096ba40a7b489a0592de93652c1be\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612245130432-6b1613e8-13ae-4f96-a691-47f68394f3bb.png%22%2C%22originWidth%22%3A379%2C%22originHeight%22%3A259%2C%22name%22%3A%22image.png%22%2C%22size%22%3A80976%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A255.3274%2C%22y%22%3A15.572619%2C%22width%22%3A45.33483000000001%2C%22height%22%3A22.288827%2C%22text%22%3A%22%E4%BD%99%E6%95%B0%22%7D%2C%7B%22x%22%3A60.83523%2C%22y%22%3A22.155045%2C%22width%22%3A18.089499999999994%2C%22height%22%3A18.089499999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A121.1506%2C%22y%22%3A24.322504%2C%22width%22%3A11.669389999999993%2C%22height%22%3A11.669389999999993%2C%22text%22%3A%225%22%7D%2C%7B%22x%22%3A315.14157%2C%22y%22%3A55.00748%2C%22width%22%3A47.839969999999994%2C%22height%22%3A22.64434%2C%22text%22%3A%22%E4%BD%8E%E4%BD%8D%22%7D%2C%7B%22x%22%3A60.138058%2C%22y%22%3A56.26222%2C%22width%22%3A16.240831999999997%2C%22height%22%3A16.240831999999997%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A263.02786%2C%22y%22%3A57.05484%2C%22width%22%3A40.953070000000025%2C%22height%22%3A22.077030000000008%2C%22text%22%3A%22(ko)%22%7D%2C%7B%22x%22%3A118.790955%2C%22y%22%3A58.062054%2C%22width%22%3A13.422224999999997%2C%22height%22%3A13.422224999999997%2C%22text%22%3A%227%22%7D%2C%7B%22x%22%3A266.87976%2C%22y%22%3A93.01568%2C%22width%22%3A37.473540000000014%2C%22height%22%3A22.08435%2C%22text%22%3A%22(k1)%22%7D%2C%7B%22x%22%3A119.332825%2C%22y%22%3A93.172585%2C%22width%22%3A16.704715000000007%2C%22height%22%3A16.704715000000007%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A254.23486%2C%22y%22%3A128.8939%2C%22width%22%3A50.13599000000002%2C%22height%22%3A20.39249000000001%2C%22text%22%3A%220(k2)%22%7D%2C%7B%22x%22%3A254.79552%2C%22y%22%3A161.92145%2C%22width%22%3A49.14301999999998%2C%22height%22%3A19.414749999999998%2C%22text%22%3A%220(k3)%22%7D%2C%7B%22x%22%3A255.37683%2C%22y%22%3A195.26353%2C%22width%22%3A49.79684999999998%2C%22height%22%3A20.27847%2C%22text%22%3A%220(k))%22%7D%2C%7B%22x%22%3A320.24985%2C%22y%22%3A223.0598%2C%22width%22%3A45.079350000000034%2C%22height%22%3A22.453609999999998%2C%22text%22%3A%22%E9%AB%98%E4%BD%8D%22%7D%2C%7B%22x%22%3A257.74353%2C%22y%22%3A225.33583%2C%22width%22%3A47.37890999999996%2C%22height%22%3A21.369670000000013%2C%22text%22%3A%221(ks)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BD%99%E6%95%B0%203%205%20%E4%BD%8E%E4%BD%8D%201%20(ko)%207%20(k1)%208%200(k2)%200(k3)%200(k))%20%E9%AB%98%E4%BD%8D%201(ks)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A379%2C%22height%22%3A259%7D\"></card></p><p data-lake-id=\"5a7dff035651ae5c2a9bdb69e450394c\">我们计算十进制转二进制时，就是不断除以2，然后取余数</p><p data-lake-id=\"f3aafae77707673b5ce49ddff7198e27\">然后将最后一位的余数与第一位的余数拼成二进制</p><p data-lake-id=\"dfd2f9269f7477d88c68aff5dcc472fa\"><br /></p><p data-lake-id=\"2b234b4cd9d7423b3510d9c4dded05a6\">这样的后进先出的手法有没有想到栈！</p><p data-lake-id=\"acb4f3b82b85b0f97b82de2576da4c3b\"><br /></p><h3 data-lake-id=\"227cda13acb18b98b0ec97f2248ef9bd\" id=\"TwG6v\">判断字符串的括号是否有效</h3><p data-lake-id=\"d5c97af8d53b743673c43c35b5cc4c79\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612245247309-b9ef1209-3935-4573-acd5-3b11b1e44384.png%22%2C%22originWidth%22%3A275%2C%22originHeight%22%3A228%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30754%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A15.864529%2C%22y%22%3A15.495544%2C%22width%22%3A122.027391%2C%22height%22%3A22.584683%2C%22text%22%3A%22(((0))))%22%7D%2C%7B%22x%22%3A180.42653%2C%22y%22%3A17.000565%2C%22width%22%3A54.30461%2C%22height%22%3A18.242199%2C%22text%22%3A%22VALID%22%7D%2C%7B%22x%22%3A25.100525%2C%22y%22%3A77.18549%2C%22width%22%3A68.426305%2C%22height%22%3A17.654079999999993%2C%22text%22%3A%22)000%22%7D%2C%7B%22x%22%3A180.29567%2C%22y%22%3A77.80292%2C%22width%22%3A53.60079999999999%2C%22height%22%3A16.880709999999993%2C%22text%22%3A%22VALID%22%7D%2C%7B%22x%22%3A16.084814%2C%22y%22%3A134.69365%2C%22width%22%3A90.002566%2C%22height%22%3A21.503600000000006%2C%22text%22%3A%22(((((((O%22%7D%2C%7B%22x%22%3A180.42603%2C%22y%22%3A136.37277%2C%22width%22%3A76.69667000000001%2C%22height%22%3A19.804489999999987%2C%22text%22%3A%22INVALID%22%7D%2C%7B%22x%22%3A16.115915%2C%22y%22%3A195.18074%2C%22width%22%3A100.523545%2C%22height%22%3A22.520190000000014%2C%22text%22%3A%22((0()))%22%7D%2C%7B%22x%22%3A179.28008%2C%22y%22%3A197.46753%2C%22width%22%3A54.656859999999995%2C%22height%22%3A17.124629999999996%2C%22text%22%3A%22VALID%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22(((0))))%20VALID%20)000%20VALID%20(((((((O%20INVALID%20((0()))%20VALID%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A275%2C%22height%22%3A228%7D\"></card></p><p data-lake-id=\"3d44dfb86bea90ac48c654d65fba01f2\">我们验证括号是否有效其实就是在验证是不是能够凑齐一对完整的闭合括号。</p><p data-lake-id=\"0bbb1e52f0519606091d524a1597706d\"><br /></p><p data-lake-id=\"8ee82dd582e7166a728adc54d00c767a\">而且我们可以发现一个规律，越靠左的左括号，它对应的右括号就越靠右。反之也就是最后面的左括号，对应的必定是出现的第一个右括号。</p><p data-lake-id=\"6421d8f9dd376425e9b9d8b021a98663\"><br /></p><p data-lake-id=\"ba26ba96c0d6c5d6dcd2857f5034d01b\">所以我们就可以在遇到左括号时就入栈，遇到右括号时就与栈顶的括号就行配对比较，若果符合配对规则则出栈，否则就不符合规则直接判定无效。匹配到最后结如果栈内是空就证明可以完整闭合</p><p data-lake-id=\"5f6556891babef04542f41429628e912\"><br /></p><p data-lake-id=\"8b6e020f9ef74a694ce95eed96cc2b40\"><br /></p><h3 data-lake-id=\"e67f5d90e5417a526d5c38ccdf2fa4a8\" id=\"venNQ\">函数调用栈等</h3><p data-lake-id=\"98a2ace692ca432a75e8e2be6435ad0f\"><br /></p><p data-lake-id=\"a82f9c889f5736ccfbcb0a1793d1ec06\">这个可以看浏览器，js的解释器就是通过调用栈的形式实现的</p><p data-lake-id=\"7a3f58dba0a29ac05af3e2a5fba935cf\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612249568954-7f2f8a5c-6c50-4eb5-bb44-c98e9dd0490b.png%22%2C%22originWidth%22%3A305%2C%22originHeight%22%3A290%2C%22name%22%3A%22image.png%22%2C%22size%22%3A43181%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A13.52626%2C%22y%22%3A3.2511253%2C%22width%22%3A88.65498%2C%22height%22%3A14.8355327%2C%22text%22%3A%22constfun1%22%7D%2C%7B%22x%22%3A30.069237%2C%22y%22%3A23.036798%2C%22width%22%3A62.634073%2C%22height%22%3A18.942282000000002%2C%22text%22%3A%22fun2()%3B%22%7D%2C%7B%22x%22%3A127.49709%2C%22y%22%3A91.112144%2C%22width%22%3A57.04135000000001%2C%22height%22%3A16.038712000000004%2C%22text%22%3A%22O)-%3E%22%7D%2C%7B%22x%22%3A66.358665%2C%22y%22%3A91.83338%2C%22width%22%3A36.440794999999994%2C%22height%22%3A14.217759999999998%2C%22text%22%3A%22fun2%22%7D%2C%7B%22x%22%3A13.635799%2C%22y%22%3A93.858284%2C%22width%22%3A45.157128%2C%22height%22%3A12.882776000000007%2C%22text%22%3A%22conSt%22%7D%2C%7B%22x%22%3A32.23883%2C%22y%22%3A111.40384%2C%22width%22%3A60.92715999999999%2C%22height%22%3A18.90338%2C%22text%22%3A%22fun3()%3B%22%7D%2C%7B%22x%22%3A13.812032%2C%22y%22%3A178.08855%2C%22width%22%3A177.46761800000002%2C%22height%22%3A17.67505%2C%22text%22%3A%22constfun3-)-%3E%22%7D%2C%7B%22x%22%3A29.867498%2C%22y%22%3A202.29095%2C%22width%22%3A167.024102%2C%22height%22%3A14.830330000000004%2C%22text%22%3A%22console.1og(%5C%22yes%5C%22)%3B%22%7D%2C%7B%22x%22%3A13.16948%2C%22y%22%3A266.14084%2C%22width%22%3A56.565345%2C%22height%22%3A17.534299999999973%2C%22text%22%3A%22fun10)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22constfun1%20fun2()%3B%20O)-%3E%20fun2%20conSt%20fun3()%3B%20constfun3-)-%3E%20console.1og(%5C%22yes%5C%22)%3B%20fun10)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A305%2C%22height%22%3A290%7D\"></card><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612249579751-d03a29ca-0a7a-4a44-896b-2bb23a79b6ed.png%22%2C%22originWidth%22%3A470%2C%22originHeight%22%3A182%2C%22name%22%3A%22image.png%22%2C%22size%22%3A38332%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A449.2405%2C%22y%22%3A3.3807576%2C%22width%22%3A15.040720000000022%2C%22height%22%3A13.6574484%2C%22text%22%3A%22%E7%99%BD%22%7D%2C%7B%22x%22%3A27.587267%2C%22y%22%3A4.017492%2C%22width%22%3A64.55848300000001%2C%22height%22%3A12.738658000000001%2C%22text%22%3A%22CALLSTACK%22%7D%2C%7B%22x%22%3A36.778584%2C%22y%22%3A25.791214%2C%22width%22%3A210.609786%2C%22height%22%3A17.497736%2C%22text%22%3A%22%E6%AC%A2Launchprogram%3Aindexjs%5B10216%5D%22%7D%2C%7B%22x%22%3A419.57883%2C%22y%22%3A28.360521%2C%22width%22%3A38.487210000000005%2C%22height%22%3A9.628424000000003%2C%22text%22%3A%22PAUSED%22%7D%2C%7B%22x%22%3A376.5425%2C%22y%22%3A48.262177%2C%22width%22%3A46.9941%2C%22height%22%3A13.679148999999995%2C%22text%22%3A%22indexjs%22%7D%2C%7B%22x%22%3A44.244648%2C%22y%22%3A48.40822%2C%22width%22%3A30.659092%2C%22height%22%3A11.887521999999997%2C%22text%22%3A%22fun3%22%7D%2C%7B%22x%22%3A432.47046%2C%22y%22%3A49.98433%2C%22width%22%3A25.04077000000001%2C%22height%22%3A10.649768000000002%2C%22text%22%3A%2210%3A3%22%7D%2C%7B%22x%22%3A44.684986%2C%22y%22%3A69.81611%2C%22width%22%3A30.332903999999992%2C%22height%22%3A12.183890000000005%2C%22text%22%3A%22fun2%22%7D%2C%7B%22x%22%3A383.32764%2C%22y%22%3A71.11938%2C%22width%22%3A75.69638000000003%2C%22height%22%3A14.008849999999995%2C%22text%22%3A%22indexjs63%22%7D%2C%7B%22x%22%3A45.197186%2C%22y%22%3A92.2038%2C%22width%22%3A28.580730000000003%2C%22height%22%3A11.810019999999994%2C%22text%22%3A%22fun1%22%7D%2C%7B%22x%22%3A383.31253%2C%22y%22%3A92.67117%2C%22width%22%3A75.72650000000004%2C%22height%22%3A14.046509999999998%2C%22text%22%3A%22indexJjs2%3A3%22%7D%2C%7B%22x%22%3A376.76257%2C%22y%22%3A114.51294%2C%22width%22%3A81.35108000000002%2C%22height%22%3A15.435099999999991%2C%22text%22%3A%22indexjs13%3A1%22%7D%2C%7B%22x%22%3A45.544125%2C%22y%22%3A115.73279%2C%22width%22%3A79.116985%2C%22height%22%3A10.747640000000004%2C%22text%22%3A%22%3Canonymous%3E%22%7D%2C%7B%22x%22%3A158.21053%2C%22y%22%3A131.6581%2C%22width%22%3A200.80192%2C%22height%22%3A15.80943000000002%2C%22text%22%3A%22Show6More%3ASkippedbyskipFiles%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%99%BD%20CALLSTACK%20%E6%AC%A2Launchprogram%3Aindexjs%5B10216%5D%20PAUSED%20indexjs%20fun3%2010%3A3%20fun2%20indexjs63%20fun1%20indexJjs2%3A3%20indexjs13%3A1%20%3Canonymous%3E%20Show6More%3ASkippedbyskipFiles%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A335%2C%22height%22%3A130%7D\"></card></p><p data-lake-id=\"fe233be623f2a226c58bf5a0aa863d72\"><br /></p><p data-lake-id=\"24a9099f94e02c7c280c413ac8f6d5d6\">执行fun1时先将fun1入栈，然后调用fun2，入栈；然后调用fun3入栈。</p><p data-lake-id=\"c9ff803d8d2890be43ce22ee4b410d18\"><br /></p><p data-lake-id=\"a9cc356a61ab1566cd5a6cf91cfe1be7\">fun3执行完毕出栈</p><p data-lake-id=\"2230079f3b5bf58ddba260f794cabf53\">fun2执行完毕出栈</p><p data-lake-id=\"2e9276f849038d607ac07d0815fc195f\">fun1执行完毕出栈</p><p data-lake-id=\"482a7d1800e8c8f3b86ded2092f86a34\">程序执行完毕<cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png%22%2C%22originWidth%22%3A342%2C%22originHeight%22%3A314%2C%22name%22%3A%22image.png%22%2C%22size%22%3A23754%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A27.731445%2C%22y%22%3A34.347366%2C%22width%22%3A43.188455%2C%22height%22%3A15.927673999999996%2C%22text%22%3A%22push%22%7D%2C%7B%22x%22%3A259.15433%2C%22y%22%3A36.021336%2C%22width%22%3A34.64598999999998%2C%22height%22%3A15.747772000000005%2C%22text%22%3A%22pop%22%7D%2C%7B%22x%22%3A274.4982%2C%22y%22%3A131.70189%2C%22width%22%3A29.244019999999978%2C%22height%22%3A17.44063%2C%22text%22%3A%22top%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22push%20pop%20top%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A342%2C%22height%22%3A314%7D\"></card></p><h2 data-lake-id=\"99b1343b60586650e3bd2acde6982a60\" id=\"va1Yz\">定义</h2><p data-lake-id=\"223a872fa53895fdfb1efbc03d18b360\">一种<strong>后进先出</strong>的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的</p><p data-lake-id=\"56ea7e919c5ce1cb961122f1ff13ff3a\"><br /></p><h2 data-lake-id=\"a95e7d03e2901368363d7ba7d0b65078\" id=\"16UL2\">名词解释</h2><p data-lake-id=\"53ce295337d108f753cc24859e52ca19\"><br /></p><h3 data-lake-id=\"3df5a128bc34832996ee788dd5ae44c3\" id=\"zeigJ\">push： 入栈</h3><h3 data-lake-id=\"d20528768ab320325a8dd73e5b5abc0e\" id=\"onWRb\">pop： 出栈</h3><h3 data-lake-id=\"30076fce249bd9d7f697ce507353030a\" id=\"fHjCD\">top：栈顶</h3><p data-lake-id=\"2cd0e2bc9660ff512fe9e705264c62fd\"><br /></p><h2 data-lake-id=\"8e896a689ee2e5431ba4740d7e8d462f\" id=\"nno6m\">JavaScript中的栈</h2><p data-lake-id=\"ac56929c29eaaa7cef2d1084b19add0c\"><br /></p><p data-lake-id=\"642509b76a71695d0517380b3c1bbccc\">在js中是没用栈这种数据结构的，不过我们可以利用<strong>数组</strong>来模拟。</p><p data-lake-id=\"0265e0cb99f393f297a5372214961705\">而且在js中也是有对应的 <code>push</code> 和 <code>pop</code> 方法的:</p><p data-lake-id=\"c99b8e0de69314783e174e3465dd52cb\"><br /></p><p data-lake-id=\"346f220455f1ff39a6bc3077296b620f\">push: 向数组末尾添加一个元素，返回值是数组的长度</p><p data-lake-id=\"72c20d8dd6bb99c8a09016f647d46c45\">pop：移除数组的第一个元素，返回值是移除的元素</p><p data-lake-id=\"8d489fbe0d913f23d48224e8d69c42e5\"><br /></p><h2 data-lake-id=\"206f6c12d71aeda0dc453a605f4b25e1\" id=\"79Jl3\">什么场景下用栈？</h2><p data-lake-id=\"effe1b348a180810cb2879986eda06f0\"><br /></p><blockquote><p data-lake-id=\"9264f48f99ed70991ffb308a94d84160\">最直白的讲就是需要<strong>后进先出</strong>的场景</p></blockquote><p data-lake-id=\"eaa42ac762132ede7d2fc4441771b43f\"><br /></p><h3 data-lake-id=\"3e58112368e97e2a6777091351ba9566\" id=\"3aGk3\">十进制转二进制</h3><p data-lake-id=\"c71096ba40a7b489a0592de93652c1be\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612245130432-6b1613e8-13ae-4f96-a691-47f68394f3bb.png%22%2C%22originWidth%22%3A379%2C%22originHeight%22%3A259%2C%22name%22%3A%22image.png%22%2C%22size%22%3A80976%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A255.3274%2C%22y%22%3A15.572619%2C%22width%22%3A45.33483000000001%2C%22height%22%3A22.288827%2C%22text%22%3A%22%E4%BD%99%E6%95%B0%22%7D%2C%7B%22x%22%3A60.83523%2C%22y%22%3A22.155045%2C%22width%22%3A18.089499999999994%2C%22height%22%3A18.089499999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A121.1506%2C%22y%22%3A24.322504%2C%22width%22%3A11.669389999999993%2C%22height%22%3A11.669389999999993%2C%22text%22%3A%225%22%7D%2C%7B%22x%22%3A315.14157%2C%22y%22%3A55.00748%2C%22width%22%3A47.839969999999994%2C%22height%22%3A22.64434%2C%22text%22%3A%22%E4%BD%8E%E4%BD%8D%22%7D%2C%7B%22x%22%3A60.138058%2C%22y%22%3A56.26222%2C%22width%22%3A16.240831999999997%2C%22height%22%3A16.240831999999997%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A263.02786%2C%22y%22%3A57.05484%2C%22width%22%3A40.953070000000025%2C%22height%22%3A22.077030000000008%2C%22text%22%3A%22(ko)%22%7D%2C%7B%22x%22%3A118.790955%2C%22y%22%3A58.062054%2C%22width%22%3A13.422224999999997%2C%22height%22%3A13.422224999999997%2C%22text%22%3A%227%22%7D%2C%7B%22x%22%3A266.87976%2C%22y%22%3A93.01568%2C%22width%22%3A37.473540000000014%2C%22height%22%3A22.08435%2C%22text%22%3A%22(k1)%22%7D%2C%7B%22x%22%3A119.332825%2C%22y%22%3A93.172585%2C%22width%22%3A16.704715000000007%2C%22height%22%3A16.704715000000007%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A254.23486%2C%22y%22%3A128.8939%2C%22width%22%3A50.13599000000002%2C%22height%22%3A20.39249000000001%2C%22text%22%3A%220(k2)%22%7D%2C%7B%22x%22%3A254.79552%2C%22y%22%3A161.92145%2C%22width%22%3A49.14301999999998%2C%22height%22%3A19.414749999999998%2C%22text%22%3A%220(k3)%22%7D%2C%7B%22x%22%3A255.37683%2C%22y%22%3A195.26353%2C%22width%22%3A49.79684999999998%2C%22height%22%3A20.27847%2C%22text%22%3A%220(k))%22%7D%2C%7B%22x%22%3A320.24985%2C%22y%22%3A223.0598%2C%22width%22%3A45.079350000000034%2C%22height%22%3A22.453609999999998%2C%22text%22%3A%22%E9%AB%98%E4%BD%8D%22%7D%2C%7B%22x%22%3A257.74353%2C%22y%22%3A225.33583%2C%22width%22%3A47.37890999999996%2C%22height%22%3A21.369670000000013%2C%22text%22%3A%221(ks)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BD%99%E6%95%B0%203%205%20%E4%BD%8E%E4%BD%8D%201%20(ko)%207%20(k1)%208%200(k2)%200(k3)%200(k))%20%E9%AB%98%E4%BD%8D%201(ks)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A379%2C%22height%22%3A259%7D\"></card></p><p data-lake-id=\"5a7dff035651ae5c2a9bdb69e450394c\">我们计算十进制转二进制时，就是不断除以2，然后取余数</p><p data-lake-id=\"f3aafae77707673b5ce49ddff7198e27\">然后将最后一位的余数与第一位的余数拼成二进制</p><p data-lake-id=\"dfd2f9269f7477d88c68aff5dcc472fa\"><br /></p><p data-lake-id=\"2b234b4cd9d7423b3510d9c4dded05a6\">这样的后进先出的手法有没有想到栈！</p><p data-lake-id=\"acb4f3b82b85b0f97b82de2576da4c3b\"><br /></p><h3 data-lake-id=\"227cda13acb18b98b0ec97f2248ef9bd\" id=\"TwG6v\">判断字符串的括号是否有效</h3><p data-lake-id=\"d5c97af8d53b743673c43c35b5cc4c79\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612245247309-b9ef1209-3935-4573-acd5-3b11b1e44384.png%22%2C%22originWidth%22%3A275%2C%22originHeight%22%3A228%2C%22name%22%3A%22image.png%22%2C%22size%22%3A30754%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A15.864529%2C%22y%22%3A15.495544%2C%22width%22%3A122.027391%2C%22height%22%3A22.584683%2C%22text%22%3A%22(((0))))%22%7D%2C%7B%22x%22%3A180.42653%2C%22y%22%3A17.000565%2C%22width%22%3A54.30461%2C%22height%22%3A18.242199%2C%22text%22%3A%22VALID%22%7D%2C%7B%22x%22%3A25.100525%2C%22y%22%3A77.18549%2C%22width%22%3A68.426305%2C%22height%22%3A17.654079999999993%2C%22text%22%3A%22)000%22%7D%2C%7B%22x%22%3A180.29567%2C%22y%22%3A77.80292%2C%22width%22%3A53.60079999999999%2C%22height%22%3A16.880709999999993%2C%22text%22%3A%22VALID%22%7D%2C%7B%22x%22%3A16.084814%2C%22y%22%3A134.69365%2C%22width%22%3A90.002566%2C%22height%22%3A21.503600000000006%2C%22text%22%3A%22(((((((O%22%7D%2C%7B%22x%22%3A180.42603%2C%22y%22%3A136.37277%2C%22width%22%3A76.69667000000001%2C%22height%22%3A19.804489999999987%2C%22text%22%3A%22INVALID%22%7D%2C%7B%22x%22%3A16.115915%2C%22y%22%3A195.18074%2C%22width%22%3A100.523545%2C%22height%22%3A22.520190000000014%2C%22text%22%3A%22((0()))%22%7D%2C%7B%22x%22%3A179.28008%2C%22y%22%3A197.46753%2C%22width%22%3A54.656859999999995%2C%22height%22%3A17.124629999999996%2C%22text%22%3A%22VALID%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22(((0))))%20VALID%20)000%20VALID%20(((((((O%20INVALID%20((0()))%20VALID%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A275%2C%22height%22%3A228%7D\"></card></p><p data-lake-id=\"3d44dfb86bea90ac48c654d65fba01f2\">我们验证括号是否有效其实就是在验证是不是能够凑齐一对完整的闭合括号。</p><p data-lake-id=\"0bbb1e52f0519606091d524a1597706d\"><br /></p><p data-lake-id=\"8ee82dd582e7166a728adc54d00c767a\">而且我们可以发现一个规律，越靠左的左括号，它对应的右括号就越靠右。反之也就是最后面的左括号，对应的必定是出现的第一个右括号。</p><p data-lake-id=\"6421d8f9dd376425e9b9d8b021a98663\"><br /></p><p data-lake-id=\"ba26ba96c0d6c5d6dcd2857f5034d01b\">所以我们就可以在遇到左括号时就入栈，遇到右括号时就与栈顶的括号就行配对比较，若果符合配对规则则出栈，否则就不符合规则直接判定无效。匹配到最后结如果栈内是空就证明可以完整闭合</p><p data-lake-id=\"5f6556891babef04542f41429628e912\"><br /></p><p data-lake-id=\"8b6e020f9ef74a694ce95eed96cc2b40\"><br /></p><h3 data-lake-id=\"e67f5d90e5417a526d5c38ccdf2fa4a8\" id=\"venNQ\">函数调用栈等</h3><p data-lake-id=\"98a2ace692ca432a75e8e2be6435ad0f\"><br /></p><p data-lake-id=\"a82f9c889f5736ccfbcb0a1793d1ec06\">这个可以看浏览器，js的解释器就是通过调用栈的形式实现的</p><p data-lake-id=\"7a3f58dba0a29ac05af3e2a5fba935cf\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612249568954-7f2f8a5c-6c50-4eb5-bb44-c98e9dd0490b.png%22%2C%22originWidth%22%3A305%2C%22originHeight%22%3A290%2C%22name%22%3A%22image.png%22%2C%22size%22%3A43181%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A13.52626%2C%22y%22%3A3.2511253%2C%22width%22%3A88.65498%2C%22height%22%3A14.8355327%2C%22text%22%3A%22constfun1%22%7D%2C%7B%22x%22%3A30.069237%2C%22y%22%3A23.036798%2C%22width%22%3A62.634073%2C%22height%22%3A18.942282000000002%2C%22text%22%3A%22fun2()%3B%22%7D%2C%7B%22x%22%3A127.49709%2C%22y%22%3A91.112144%2C%22width%22%3A57.04135000000001%2C%22height%22%3A16.038712000000004%2C%22text%22%3A%22O)-%3E%22%7D%2C%7B%22x%22%3A66.358665%2C%22y%22%3A91.83338%2C%22width%22%3A36.440794999999994%2C%22height%22%3A14.217759999999998%2C%22text%22%3A%22fun2%22%7D%2C%7B%22x%22%3A13.635799%2C%22y%22%3A93.858284%2C%22width%22%3A45.157128%2C%22height%22%3A12.882776000000007%2C%22text%22%3A%22conSt%22%7D%2C%7B%22x%22%3A32.23883%2C%22y%22%3A111.40384%2C%22width%22%3A60.92715999999999%2C%22height%22%3A18.90338%2C%22text%22%3A%22fun3()%3B%22%7D%2C%7B%22x%22%3A13.812032%2C%22y%22%3A178.08855%2C%22width%22%3A177.46761800000002%2C%22height%22%3A17.67505%2C%22text%22%3A%22constfun3-)-%3E%22%7D%2C%7B%22x%22%3A29.867498%2C%22y%22%3A202.29095%2C%22width%22%3A167.024102%2C%22height%22%3A14.830330000000004%2C%22text%22%3A%22console.1og(%5C%22yes%5C%22)%3B%22%7D%2C%7B%22x%22%3A13.16948%2C%22y%22%3A266.14084%2C%22width%22%3A56.565345%2C%22height%22%3A17.534299999999973%2C%22text%22%3A%22fun10)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22constfun1%20fun2()%3B%20O)-%3E%20fun2%20conSt%20fun3()%3B%20constfun3-)-%3E%20console.1og(%5C%22yes%5C%22)%3B%20fun10)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A305%2C%22height%22%3A290%7D\"></card><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612249579751-d03a29ca-0a7a-4a44-896b-2bb23a79b6ed.png%22%2C%22originWidth%22%3A470%2C%22originHeight%22%3A182%2C%22name%22%3A%22image.png%22%2C%22size%22%3A38332%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A449.2405%2C%22y%22%3A3.3807576%2C%22width%22%3A15.040720000000022%2C%22height%22%3A13.6574484%2C%22text%22%3A%22%E7%99%BD%22%7D%2C%7B%22x%22%3A27.587267%2C%22y%22%3A4.017492%2C%22width%22%3A64.55848300000001%2C%22height%22%3A12.738658000000001%2C%22text%22%3A%22CALLSTACK%22%7D%2C%7B%22x%22%3A36.778584%2C%22y%22%3A25.791214%2C%22width%22%3A210.609786%2C%22height%22%3A17.497736%2C%22text%22%3A%22%E6%AC%A2Launchprogram%3Aindexjs%5B10216%5D%22%7D%2C%7B%22x%22%3A419.57883%2C%22y%22%3A28.360521%2C%22width%22%3A38.487210000000005%2C%22height%22%3A9.628424000000003%2C%22text%22%3A%22PAUSED%22%7D%2C%7B%22x%22%3A376.5425%2C%22y%22%3A48.262177%2C%22width%22%3A46.9941%2C%22height%22%3A13.679148999999995%2C%22text%22%3A%22indexjs%22%7D%2C%7B%22x%22%3A44.244648%2C%22y%22%3A48.40822%2C%22width%22%3A30.659092%2C%22height%22%3A11.887521999999997%2C%22text%22%3A%22fun3%22%7D%2C%7B%22x%22%3A432.47046%2C%22y%22%3A49.98433%2C%22width%22%3A25.04077000000001%2C%22height%22%3A10.649768000000002%2C%22text%22%3A%2210%3A3%22%7D%2C%7B%22x%22%3A44.684986%2C%22y%22%3A69.81611%2C%22width%22%3A30.332903999999992%2C%22height%22%3A12.183890000000005%2C%22text%22%3A%22fun2%22%7D%2C%7B%22x%22%3A383.32764%2C%22y%22%3A71.11938%2C%22width%22%3A75.69638000000003%2C%22height%22%3A14.008849999999995%2C%22text%22%3A%22indexjs63%22%7D%2C%7B%22x%22%3A45.197186%2C%22y%22%3A92.2038%2C%22width%22%3A28.580730000000003%2C%22height%22%3A11.810019999999994%2C%22text%22%3A%22fun1%22%7D%2C%7B%22x%22%3A383.31253%2C%22y%22%3A92.67117%2C%22width%22%3A75.72650000000004%2C%22height%22%3A14.046509999999998%2C%22text%22%3A%22indexJjs2%3A3%22%7D%2C%7B%22x%22%3A376.76257%2C%22y%22%3A114.51294%2C%22width%22%3A81.35108000000002%2C%22height%22%3A15.435099999999991%2C%22text%22%3A%22indexjs13%3A1%22%7D%2C%7B%22x%22%3A45.544125%2C%22y%22%3A115.73279%2C%22width%22%3A79.116985%2C%22height%22%3A10.747640000000004%2C%22text%22%3A%22%3Canonymous%3E%22%7D%2C%7B%22x%22%3A158.21053%2C%22y%22%3A131.6581%2C%22width%22%3A200.80192%2C%22height%22%3A15.80943000000002%2C%22text%22%3A%22Show6More%3ASkippedbyskipFiles%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%99%BD%20CALLSTACK%20%E6%AC%A2Launchprogram%3Aindexjs%5B10216%5D%20PAUSED%20indexjs%20fun3%2010%3A3%20fun2%20indexjs63%20fun1%20indexJjs2%3A3%20indexjs13%3A1%20%3Canonymous%3E%20Show6More%3ASkippedbyskipFiles%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A335%2C%22height%22%3A130%7D\"></card></p><p data-lake-id=\"fe233be623f2a226c58bf5a0aa863d72\"><br /></p><p data-lake-id=\"24a9099f94e02c7c280c413ac8f6d5d6\">执行fun1时先将fun1入栈，然后调用fun2，入栈；然后调用fun3入栈。</p><p data-lake-id=\"c9ff803d8d2890be43ce22ee4b410d18\"><br /></p><p data-lake-id=\"a9cc356a61ab1566cd5a6cf91cfe1be7\">fun3执行完毕出栈</p><p data-lake-id=\"2230079f3b5bf58ddba260f794cabf53\">fun2执行完毕出栈</p><p data-lake-id=\"2e9276f849038d607ac07d0815fc195f\">fun1执行完毕出栈</p><p data-lake-id=\"482a7d1800e8c8f3b86ded2092f86a34\">程序执行完毕<cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-02T07:08:34.000Z",
    "deleted_at": null,
    "created_at": "2021-02-02T03:35:18.000Z",
    "updated_at": "2021-02-02T07:08:34.000Z",
    "published_at": "2021-02-02T07:08:34.000Z",
    "first_published_at": "2021-02-02T06:01:16.000Z",
    "word_count": 538,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/2705850/1612236925054-f7e99dfb-004a-4be1-aee6-aacfbdabd331.png",
    "description": "定义一种后进先出的数据结构。 类似于一个麻袋，先装进去的就在袋子的最底部，所以只能先拿出来最上面的名词解释push： 入栈pop： 出栈top：栈顶JavaScript中的栈在js中是没用栈这种数据结构的，不过我们可以利用数组来模拟。而且在js中也是有对应的 push 和 pop 方法的:pu...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 31070426,
    "slug": "bxdf75",
    "title": "时间复杂度&空间复杂度",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"BjxUI\"></a>\n## 复杂度的作用\n一般我们会从两个维度去考虑一段代码的质量：\n\n1. 时间复杂度\n1. 空间复杂度\n\n\n<br />顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。<br />\n<br />所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。<br />\n<br />那么我们应该怎么来定义复杂度呢？<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png#align=left&display=inline&height=78&margin=%5Bobject%20Object%5D&name=image.png&originHeight=155&originWidth=198&size=27501&status=done&style=none&width=99)<br />\n\n<a name=\"NlxK8\"></a>\n## 复杂度的定义与特点\n<a name=\"E25zp\"></a>\n### 定义\n> 复杂度是一个关于输入量n的函数。\n> eg：假设你的代码复杂度是f(n),那么用大写字母O将其括起来就可以表示复杂度了 --- O(f(n))\n\n<a name=\"YuKYG\"></a>\n### 特点\n<a name=\"Vc0kY\"></a>\n#### 与常系数无关\n> 例如O(n) + O(n) = O(2n), 其实O(n)复杂度和O(2n)复杂度是一样的，我们通常会忽略常系数对复杂度的影响\n\n\n\n<a name=\"cwbYM\"></a>\n#### 多项式级相加的复杂度，会取结果最大的那一个作为最后的结果\n> O(n^2) + O(n)，明显n^2在输入量n逐渐变大的情况下，变化会更大，所以我们就说复杂度是O(n^2)即可\n\n\n\n<a name=\"uq9Wt\"></a>\n#### O(1)是一个特殊的复杂度：输入量n与消耗的资源无关\n> O（1）表示的是当前复杂度和输入n无关。例如你的代码处理100条数据是消耗3个时间单元和1个空间单元，处理500条数据依然还是消耗3个时间单元和1个空间单元，那么就是输入量与消耗资源无\n\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612220986085-7033d2c5-66bb-4608-8177-b3105aa878a9.png#align=left&display=inline&height=337&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1346&originWidth=1412&size=1576566&status=done&style=none&width=353)\n<a name=\"e4lA3\"></a>\n## 案例分析\n\n\n<a name=\"VYhz0\"></a>\n### O(1)\n```javascript\nlet num = 0;\nnum += 1;\n```\n时间复杂度：O(1)<br />空间复杂度：O(1)<br />\n\n<a name=\"Atoxd\"></a>\n### O(n)\n```javascript\nfor(let i =0; i++; i<n){\n  console.log(i)\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(1)\n> 单个变量所占的空间永远都是一个常量所以是O(1)\n\n```javascript\nconst arr = []\nfor(let i=0;i++;i<n){\n  arr.push(i)\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(n)\n> 这段代码相当于我们给数组arr中添加了n个元素，所以占用了n个内存单元，因此空间复杂度为O(n)\n\n<a name=\"tXrOE\"></a>\n### O(logn)\n```javascript\nlet i = 1;\nwhile(i<=n){\n  i*=2;\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(1)\n> 这段代码相当于是在计算 2<=n，也就是x次之后循环结束那么x=logn\n\n\n<br />\n\n",
    "body_draft": "<a name=\"BjxUI\"></a>\n## 复杂度的作用\n一般我们会从两个维度去考虑一段代码的质量：\n\n1. 时间复杂度\n1. 空间复杂度\n\n\n<br />顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。<br />\n<br />所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。<br />\n<br />那么我们应该怎么来定义复杂度呢？<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png#align=left&display=inline&height=78&margin=%5Bobject%20Object%5D&name=image.png&originHeight=155&originWidth=198&size=27501&status=done&style=none&width=99)<br />\n\n<a name=\"NlxK8\"></a>\n## 复杂度的定义与特点\n<a name=\"E25zp\"></a>\n### 定义\n> 复杂度是一个关于输入量n的函数。\n> eg：假设你的代码复杂度是f(n),那么用大写字母O将其括起来就可以表示复杂度了 --- O(f(n))\n\n<a name=\"YuKYG\"></a>\n### 特点\n<a name=\"Vc0kY\"></a>\n#### 与常系数无关\n> 例如O(n) + O(n) = O(2n), 其实O(n)复杂度和O(2n)复杂度是一样的，我们通常会忽略常系数对复杂度的影响\n\n\n\n<a name=\"cwbYM\"></a>\n#### 多项式级相加的复杂度，会取结果最大的那一个作为最后的结果\n> O(n^2) + O(n)，明显n^2在输入量n逐渐变大的情况下，变化会更大，所以我们就说复杂度是O(n^2)即可\n\n\n\n<a name=\"uq9Wt\"></a>\n#### O(1)是一个特殊的复杂度：输入量n与消耗的资源无关\n> O（1）表示的是当前复杂度和输入n无关。例如你的代码处理100条数据是消耗3个时间单元和1个空间单元，处理500条数据依然还是消耗3个时间单元和1个空间单元，那么就是输入量与消耗资源无\n\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1612220986085-7033d2c5-66bb-4608-8177-b3105aa878a9.png#align=left&display=inline&height=337&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1346&originWidth=1412&size=1576566&status=done&style=none&width=353)\n<a name=\"e4lA3\"></a>\n## 案例分析\n\n\n<a name=\"VYhz0\"></a>\n### O(1)\n```javascript\nlet num = 0;\nnum += 1;\n```\n时间复杂度：O(1)<br />空间复杂度：O(1)<br />\n\n<a name=\"Atoxd\"></a>\n### O(n)\n```javascript\nfor(let i =0; i++; i<n){\n  console.log(i)\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(1)\n> 单个变量所占的空间永远都是一个常量所以是O(1)\n\n```javascript\nconst arr = []\nfor(let i=0;i++;i<n){\n  arr.push(i)\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(n)\n> 这段代码相当于我们给数组arr中添加了n个元素，所以占用了n个内存单元，因此空间复杂度为O(n)\n\n<a name=\"tXrOE\"></a>\n### O(logn)\n```javascript\nlet i = 1;\nwhile(i<=n){\n  i*=2;\n}\n```\n时间复杂度：O(n)<br />空间复杂度：O(1)\n> 这段代码相当于是在计算 2<=n，也就是x次之后循环结束那么x=logn\n\n\n<br />\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B44%2C0%2C6%2C1%5D%2C%5B44%2C0%2C6%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"df324ac0682221537a110ba1a9edcd32\" id=\"BjxUI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">复杂度的作用</h2><p data-lake-id=\"ae15deabfdb0fc9726d147bcf7cb8110\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"03387e5101c0b46f88d7102671fa5e71\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"cd8c1b739d3fecb35a48ceb4d3522759\">时间复杂度</li><li data-lake-id=\"192d0d9a9285edbfe7443b9533f2cdf4\">空间复杂度</li></ol><p data-lake-id=\"e2fa57f4703dd82e319b5ce7518b231b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"29c3b6e859316ffe45a64bc988df7530\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"da9deb71731125e8c5c83bfa003122bc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8b93fc32221f59c13d04e81da6db80b6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。</p><p data-lake-id=\"cd4eafec52e4e6c7a5679b4697b90754\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"eb72b23eb8d02b64644bba03e993ade9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么我们应该怎么来定义复杂度呢？</p><p data-lake-id=\"1bee8409e4423a0d00fa40ebc90cfde6\" style=\"text-align: center; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"78px\" style=\"visibility: visible; width: 99px;\"></span></p><p data-lake-id=\"94f036a79f7851f05e985b503496c672\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"504217ae19c74802f8b59fe0ac4e8abb\" id=\"NlxK8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">复杂度的定义与特点</h2><h3 data-lake-id=\"e5178cddc83b67d5bcb0adbb73bdeb99\" id=\"E25zp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">定义</h3><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"49c82311e9c460a21ae5e5625a8391f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">复杂度是一个关于输入量n的函数。</p><p data-lake-id=\"465ae4486b1abfc26f38274c765f8e5e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg：假设你的代码复杂度是f(n),那么用大写字母O将其括起来就可以表示复杂度了 --- O(f(n))</p></blockquote><h3 data-lake-id=\"c7e070d715ce8039fea5af279f18498c\" id=\"YuKYG\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">特点</h3><h4 data-lake-id=\"9668d8fd454e8a20d0d17d88ce0328d6\" id=\"Vc0kY\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">与常系数无关</h4><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"e51798eff2d76270d4fb6c55efb17281\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">例如O(n) + O(n) = O(2n), 其实O(n)复杂度和O(2n)复杂度是一样的，我们通常会忽略常系数对复杂度的影响</p></blockquote><p data-lake-id=\"86d33a844e5d5a8203888714581b5abc\" style=\"padding-left: 1em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"d6978e44d9f08c71a33b5d1123317c1b\" id=\"cwbYM\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">多项式级相加的复杂度，会取结果最大的那一个作为最后的结果</h4><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"66d3e4282eb620119447edd183fb5d06\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">O(n^2) + O(n)，明显n^2在输入量n逐渐变大的情况下，变化会更大，所以我们就说复杂度是O(n^2)即可</p></blockquote><p data-lake-id=\"e63dd309d17a70b6f0d69ff3ad8fc9e0\" style=\"padding-left: 1em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 data-lake-id=\"716112481c03c97e64fa037fc6d308c6\" id=\"uq9Wt\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">O(1)是一个特殊的复杂度：输入量n与消耗的资源无关</h4><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"a007ba704fd318bd5ba32e04b9365a64\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">O（1）表示的是当前复杂度和输入n无关。例如你的代码处理100条数据是消耗3个时间单元和1个空间单元，处理500条数据依然还是消耗3个时间单元和1个空间单元，那么就是输入量与消耗资源无</p></blockquote><p data-lake-id=\"428500644c190687703e6e2cbb9caba1\" style=\"padding-left: 1em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"27681534a2087edc38c5b96298580664\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1612220986085-7033d2c5-66bb-4608-8177-b3105aa878a9.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"337px\" style=\"visibility: visible; width: 353px;\"></span></p><h2 data-lake-id=\"c279687c1b3737b3a7598297aad64293\" id=\"e4lA3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">案例分析</h2><p data-lake-id=\"cc0824d20ef294d34d700c1f0faeb95f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"5e928bd4f2289a967284840335233eba\" id=\"VYhz0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">O(1)</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ekCzv\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">num</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">num</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>;</span></span></pre></div></div></div><p data-lake-id=\"c6f097714ca862b84ba2bf480fedf461\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">时间复杂度：O(1)</p><p data-lake-id=\"51e5cf273a007f38def93efc9820a252\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">空间复杂度：O(1)</p><p data-lake-id=\"c2c0430afe64b9002d258a6020a807d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"06cb30ba826f30b11d2175a5b216bbb3\" id=\"Atoxd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">O(n)</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"nTvhk\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>; <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>; <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">n</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"eb27c92742df1830e99571a97b2c0533\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">时间复杂度：O(n)</p><p data-lake-id=\"d82d73d0426233f6dd897b72c3b4a575\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">空间复杂度：O(1)</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"86d090d727c4165661528d43488c7a22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">单个变量所占的空间永远都是一个常量所以是O(1)</p></blockquote><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"LdzGO\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">arr</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> []\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span>(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>;<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>;<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">n</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">arr</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">push</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"81b9c12c97e92dcd6178775e7aec3c8d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">时间复杂度：O(n)</p><p data-lake-id=\"b31704fd0acaa0d403855aa2f9d81a5b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">空间复杂度：O(n)</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"243cbef1687a37217ffc3bda75b9aa28\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这段代码相当于我们给数组arr中添加了n个元素，所以占用了n个内存单元，因此空间复杂度为O(n)</p></blockquote><h3 data-lake-id=\"096774bfebc759de813314b79609a415\" id=\"tXrOE\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">O(log<sub>2</sub>n)</h3><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"duay8\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;=</span><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">n</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">*=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"783b1424d6d9915f37c9d082ee5dc9ec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">时间复杂度：O(n)<br>空间复杂度：O(1)</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"b598a2ade424f030a47c4a485eade246\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这段代码相当于是在计算 2<sup>​x </sup>&lt;=<sup> ​​</sup>​n，也就是x次之后循环结束那么x=log<sub>2</sub>n</p></blockquote><p data-lake-id=\"df9a3fdfa8a863d0a1c0977dfc50f4d4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5a42ac2ca75a5efd8baeff8786053af8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"df324ac0682221537a110ba1a9edcd32\" id=\"BjxUI\">复杂度的作用</h2><p data-lake-id=\"ae15deabfdb0fc9726d147bcf7cb8110\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"03387e5101c0b46f88d7102671fa5e71\" start=\"1\"><li data-lake-id=\"cd8c1b739d3fecb35a48ceb4d3522759\">时间复杂度</li><li data-lake-id=\"192d0d9a9285edbfe7443b9533f2cdf4\">空间复杂度</li></ol><p data-lake-id=\"e2fa57f4703dd82e319b5ce7518b231b\"><br /></p><p data-lake-id=\"29c3b6e859316ffe45a64bc988df7530\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"da9deb71731125e8c5c83bfa003122bc\"><br /></p><p data-lake-id=\"8b93fc32221f59c13d04e81da6db80b6\">所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。</p><p data-lake-id=\"cd4eafec52e4e6c7a5679b4697b90754\"><br /></p><p data-lake-id=\"eb72b23eb8d02b64644bba03e993ade9\">那么我们应该怎么来定义复杂度呢？</p><p data-lake-id=\"1bee8409e4423a0d00fa40ebc90cfde6\" style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png%22%2C%22originWidth%22%3A198%2C%22originHeight%22%3A155%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27501%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A20.598785%2C%22y%22%3A133.20865%2C%22width%22%3A155.889085%2C%22height%22%3A18.116150000000005%2C%22text%22%3A%22%E4%BD%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E5%BA%A6O(n!)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BD%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E5%BA%A6O(n!)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A99%2C%22height%22%3A78%7D\"></card></p><p data-lake-id=\"94f036a79f7851f05e985b503496c672\"><br /></p><h2 data-lake-id=\"504217ae19c74802f8b59fe0ac4e8abb\" id=\"NlxK8\">复杂度的定义与特点</h2><h3 data-lake-id=\"e5178cddc83b67d5bcb0adbb73bdeb99\" id=\"E25zp\">定义</h3><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"49c82311e9c460a21ae5e5625a8391f2\">复杂度是一个关于输入量n的函数。</p><p data-lake-id=\"465ae4486b1abfc26f38274c765f8e5e\">eg：假设你的代码复杂度是f(n),那么用大写字母O将其括起来就可以表示复杂度了 --- O(f(n))</p></blockquote><h3 data-lake-id=\"c7e070d715ce8039fea5af279f18498c\" id=\"YuKYG\">特点</h3><h4 data-lake-id=\"9668d8fd454e8a20d0d17d88ce0328d6\" id=\"Vc0kY\">与常系数无关</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"e51798eff2d76270d4fb6c55efb17281\">例如O(n) + O(n) = O(2n), 其实O(n)复杂度和O(2n)复杂度是一样的，我们通常会忽略常系数对复杂度的影响</p></blockquote><p data-lake-id=\"86d33a844e5d5a8203888714581b5abc\" style=\"padding-left: 1em;\"><br /></p><h4 data-lake-id=\"d6978e44d9f08c71a33b5d1123317c1b\" id=\"cwbYM\">多项式级相加的复杂度，会取结果最大的那一个作为最后的结果</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"66d3e4282eb620119447edd183fb5d06\">O(n^2) + O(n)，明显n^2在输入量n逐渐变大的情况下，变化会更大，所以我们就说复杂度是O(n^2)即可</p></blockquote><p data-lake-id=\"e63dd309d17a70b6f0d69ff3ad8fc9e0\" style=\"padding-left: 1em;\"><br /></p><h4 data-lake-id=\"716112481c03c97e64fa037fc6d308c6\" id=\"uq9Wt\">O(1)是一个特殊的复杂度：输入量n与消耗的资源无关</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"a007ba704fd318bd5ba32e04b9365a64\">O（1）表示的是当前复杂度和输入n无关。例如你的代码处理100条数据是消耗3个时间单元和1个空间单元，处理500条数据依然还是消耗3个时间单元和1个空间单元，那么就是输入量与消耗资源无</p></blockquote><p data-lake-id=\"428500644c190687703e6e2cbb9caba1\" style=\"padding-left: 1em;\"><br /></p><p data-lake-id=\"27681534a2087edc38c5b96298580664\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612220986085-7033d2c5-66bb-4608-8177-b3105aa878a9.png%22%2C%22originWidth%22%3A1412%2C%22originHeight%22%3A1346%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1576566%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A417.93414%2C%22y%22%3A3.7894673%2C%22width%22%3A186.84905999999995%2C%22height%22%3A57.650502700000004%2C%22text%22%3A%22nlogzn%22%7D%2C%7B%22x%22%3A154.36687%2C%22y%22%3A4.071363%2C%22width%22%3A167.09846%2C%22height%22%3A45.639297%2C%22text%22%3A%22n.2nn2%22%7D%2C%7B%22x%22%3A53.15459%2C%22y%22%3A42.83262%2C%22width%22%3A88.5305%2C%22height%22%3A44.82247%2C%22text%22%3A%22100%22%7D%2C%7B%22x%22%3A62.079006%2C%22y%22%3A158.43344%2C%22width%22%3A60.772113999999995%2C%22height%22%3A46.70291%2C%22text%22%3A%2290%22%7D%2C%7B%22x%22%3A59.740017%2C%22y%22%3A275.62622%2C%22width%22%3A66.031653%2C%22height%22%3A48.26663000000002%2C%22text%22%3A%2280%22%7D%2C%7B%22x%22%3A63.140945%2C%22y%22%3A392.70947%2C%22width%22%3A61.84285%2C%22height%22%3A46.66372999999999%2C%22text%22%3A%2270%22%7D%2C%7B%22x%22%3A62.90552%2C%22y%22%3A510.85904%2C%22width%22%3A61.190435%2C%22height%22%3A47.32516000000004%2C%22text%22%3A%2260%22%7D%2C%7B%22x%22%3A14.132811%2C%22y%22%3A564.77264%2C%22width%22%3A49.940449%2C%22height%22%3A49.940449%2C%22text%22%3A%22N%22%7D%2C%7B%22x%22%3A61.478466%2C%22y%22%3A627.4721%2C%22width%22%3A63.950374%2C%22height%22%3A48.02660000000003%2C%22text%22%3A%2250%22%7D%2C%7B%22x%22%3A62.02315%2C%22y%22%3A742.2439%2C%22width%22%3A63.354429999999994%2C%22height%22%3A50.590499999999906%2C%22text%22%3A%2240%22%7D%2C%7B%22x%22%3A59.375984%2C%22y%22%3A861.5134%2C%22width%22%3A64.430116%2C%22height%22%3A45.56246999999996%2C%22text%22%3A%2230%22%7D%2C%7B%22x%22%3A61.574352%2C%22y%22%3A976.7424%2C%22width%22%3A62.595918000000005%2C%22height%22%3A49.03360000000009%2C%22text%22%3A%2220%22%7D%2C%7B%22x%22%3A65.89829%2C%22y%22%3A1095.6565%2C%22width%22%3A57.049205%2C%22height%22%3A44.77150000000006%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A1165.9978%2C%22y%22%3A1164.4974%2C%22width%22%3A134.1884%2C%22height%22%3A45.975000000000136%2C%22text%22%3A%22logzn%22%7D%2C%7B%22x%22%3A233.15996%2C%22y%22%3A1245.1973%2C%22width%22%3A61.97510999999997%2C%22height%22%3A50.93329999999992%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A695.2873%2C%22y%22%3A1246.4506%2C%22width%22%3A302.80425%2C%22height%22%3A48.43970000000013%2C%22text%22%3A%22506070%22%7D%2C%7B%22x%22%3A584.4206%2C%22y%22%3A1246.4547%2C%22width%22%3A60.30736999999999%2C%22height%22%3A47.85110000000009%2C%22text%22%3A%2240%22%7D%2C%7B%22x%22%3A459.43942%2C%22y%22%3A1246.1334%2C%22width%22%3A68.48404%2C%22height%22%3A49.396400000000085%2C%22text%22%3A%2230%22%7D%2C%7B%22x%22%3A345.26297%2C%22y%22%3A1246.5358%2C%22width%22%3A67.28787%2C%22height%22%3A49.03009999999995%2C%22text%22%3A%2220%22%7D%2C%7B%22x%22%3A1048.9641%2C%22y%22%3A1247.298%2C%22width%22%3A66.71960000000013%2C%22height%22%3A48.14830000000006%2C%22text%22%3A%2280%22%7D%2C%7B%22x%22%3A1143.3971%2C%22y%22%3A1249.2186%2C%22width%22%3A214.0154%2C%22height%22%3A45.43180000000007%2C%22text%22%3A%2290100%22%7D%2C%7B%22x%22%3A771.3994%2C%22y%22%3A1304.7079%2C%22width%22%3A36.452159999999935%2C%22height%22%3A36.452159999999935%2C%22text%22%3A%22n%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22nlogzn%20n.2nn2%20100%2090%2080%2070%2060%20N%2050%2040%2030%2020%2010%20logzn%2010%20506070%2040%2030%2020%2080%2090100%20n%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A353%2C%22height%22%3A337%7D\"></card></p><h2 data-lake-id=\"c279687c1b3737b3a7598297aad64293\" id=\"e4lA3\">案例分析</h2><p data-lake-id=\"cc0824d20ef294d34d700c1f0faeb95f\"><br /></p><h3 data-lake-id=\"5e928bd4f2289a967284840335233eba\" id=\"VYhz0\">O(1)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20num%20%3D%200%3B%5Cnnum%20%2B%3D%201%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22ekCzv%22%7D\"></card><p data-lake-id=\"c6f097714ca862b84ba2bf480fedf461\">时间复杂度：O(1)</p><p data-lake-id=\"51e5cf273a007f38def93efc9820a252\">空间复杂度：O(1)</p><p data-lake-id=\"c2c0430afe64b9002d258a6020a807d8\"><br /></p><h3 data-lake-id=\"06cb30ba826f30b11d2175a5b216bbb3\" id=\"Atoxd\">O(n)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22for(let%20i%20%3D0%3B%20i%2B%2B%3B%20i%3Cn)%7B%5Cn%20%20console.log(i)%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22nTvhk%22%7D\"></card><p data-lake-id=\"eb27c92742df1830e99571a97b2c0533\">时间复杂度：O(n)</p><p data-lake-id=\"d82d73d0426233f6dd897b72c3b4a575\">空间复杂度：O(1)</p><blockquote><p data-lake-id=\"86d090d727c4165661528d43488c7a22\">单个变量所占的空间永远都是一个常量所以是O(1)</p></blockquote><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20arr%20%3D%20%5B%5D%5Cnfor(let%20i%3D0%3Bi%2B%2B%3Bi%3Cn)%7B%5Cn%20%20arr.push(i)%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22LdzGO%22%7D\"></card><p data-lake-id=\"81b9c12c97e92dcd6178775e7aec3c8d\">时间复杂度：O(n)</p><p data-lake-id=\"b31704fd0acaa0d403855aa2f9d81a5b\">空间复杂度：O(n)</p><blockquote><p data-lake-id=\"243cbef1687a37217ffc3bda75b9aa28\">这段代码相当于我们给数组arr中添加了n个元素，所以占用了n个内存单元，因此空间复杂度为O(n)</p></blockquote><h3 data-lake-id=\"096774bfebc759de813314b79609a415\" id=\"tXrOE\">O(log<sub>2</sub>n)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20i%20%3D%201%3B%5Cnwhile(i%3C%3Dn)%7B%5Cn%20%20i*%3D2%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22duay8%22%7D\"></card><p data-lake-id=\"783b1424d6d9915f37c9d082ee5dc9ec\">时间复杂度：O(n)<br />空间复杂度：O(1)</p><blockquote><p data-lake-id=\"b598a2ade424f030a47c4a485eade246\">这段代码相当于是在计算 2<sup>x </sup>&lt;=<sup> </sup>n，也就是<anchor />x<focus />次之后循环结束那么x=log<sub>2</sub>n</p></blockquote><p data-lake-id=\"df9a3fdfa8a863d0a1c0977dfc50f4d4\"><br /></p><p data-lake-id=\"5a42ac2ca75a5efd8baeff8786053af8\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"df324ac0682221537a110ba1a9edcd32\" id=\"BjxUI\">复杂度的作用</h2><p data-lake-id=\"ae15deabfdb0fc9726d147bcf7cb8110\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"03387e5101c0b46f88d7102671fa5e71\" start=\"1\"><li data-lake-id=\"cd8c1b739d3fecb35a48ceb4d3522759\">时间复杂度</li><li data-lake-id=\"192d0d9a9285edbfe7443b9533f2cdf4\">空间复杂度</li></ol><p data-lake-id=\"e2fa57f4703dd82e319b5ce7518b231b\"><br /></p><p data-lake-id=\"29c3b6e859316ffe45a64bc988df7530\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"da9deb71731125e8c5c83bfa003122bc\"><br /></p><p data-lake-id=\"8b93fc32221f59c13d04e81da6db80b6\">所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。</p><p data-lake-id=\"cd4eafec52e4e6c7a5679b4697b90754\"><br /></p><p data-lake-id=\"eb72b23eb8d02b64644bba03e993ade9\">那么我们应该怎么来定义复杂度呢？</p><p data-lake-id=\"1bee8409e4423a0d00fa40ebc90cfde6\" style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png%22%2C%22originWidth%22%3A198%2C%22originHeight%22%3A155%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27501%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A20.598785%2C%22y%22%3A133.20865%2C%22width%22%3A155.889085%2C%22height%22%3A18.116150000000005%2C%22text%22%3A%22%E4%BD%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E5%BA%A6O(n!)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%BD%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E5%BA%A6O(n!)%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A99%2C%22height%22%3A78%7D\"></card></p><p data-lake-id=\"94f036a79f7851f05e985b503496c672\"><br /></p><h2 data-lake-id=\"504217ae19c74802f8b59fe0ac4e8abb\" id=\"NlxK8\">复杂度的定义与特点</h2><h3 data-lake-id=\"e5178cddc83b67d5bcb0adbb73bdeb99\" id=\"E25zp\">定义</h3><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"49c82311e9c460a21ae5e5625a8391f2\">复杂度是一个关于输入量n的函数。</p><p data-lake-id=\"465ae4486b1abfc26f38274c765f8e5e\">eg：假设你的代码复杂度是f(n),那么用大写字母O将其括起来就可以表示复杂度了 --- O(f(n))</p></blockquote><h3 data-lake-id=\"c7e070d715ce8039fea5af279f18498c\" id=\"YuKYG\">特点</h3><h4 data-lake-id=\"9668d8fd454e8a20d0d17d88ce0328d6\" id=\"Vc0kY\">与常系数无关</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"e51798eff2d76270d4fb6c55efb17281\">例如O(n) + O(n) = O(2n), 其实O(n)复杂度和O(2n)复杂度是一样的，我们通常会忽略常系数对复杂度的影响</p></blockquote><p data-lake-id=\"86d33a844e5d5a8203888714581b5abc\" style=\"padding-left: 1em;\"><br /></p><h4 data-lake-id=\"d6978e44d9f08c71a33b5d1123317c1b\" id=\"cwbYM\">多项式级相加的复杂度，会取结果最大的那一个作为最后的结果</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"66d3e4282eb620119447edd183fb5d06\">O(n^2) + O(n)，明显n^2在输入量n逐渐变大的情况下，变化会更大，所以我们就说复杂度是O(n^2)即可</p></blockquote><p data-lake-id=\"e63dd309d17a70b6f0d69ff3ad8fc9e0\" style=\"padding-left: 1em;\"><br /></p><h4 data-lake-id=\"716112481c03c97e64fa037fc6d308c6\" id=\"uq9Wt\">O(1)是一个特殊的复杂度：输入量n与消耗的资源无关</h4><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"a007ba704fd318bd5ba32e04b9365a64\">O（1）表示的是当前复杂度和输入n无关。例如你的代码处理100条数据是消耗3个时间单元和1个空间单元，处理500条数据依然还是消耗3个时间单元和1个空间单元，那么就是输入量与消耗资源无</p></blockquote><p data-lake-id=\"428500644c190687703e6e2cbb9caba1\" style=\"padding-left: 1em;\"><br /></p><p data-lake-id=\"27681534a2087edc38c5b96298580664\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1612220986085-7033d2c5-66bb-4608-8177-b3105aa878a9.png%22%2C%22originWidth%22%3A1412%2C%22originHeight%22%3A1346%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1576566%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A417.93414%2C%22y%22%3A3.7894673%2C%22width%22%3A186.84905999999995%2C%22height%22%3A57.650502700000004%2C%22text%22%3A%22nlogzn%22%7D%2C%7B%22x%22%3A154.36687%2C%22y%22%3A4.071363%2C%22width%22%3A167.09846%2C%22height%22%3A45.639297%2C%22text%22%3A%22n.2nn2%22%7D%2C%7B%22x%22%3A53.15459%2C%22y%22%3A42.83262%2C%22width%22%3A88.5305%2C%22height%22%3A44.82247%2C%22text%22%3A%22100%22%7D%2C%7B%22x%22%3A62.079006%2C%22y%22%3A158.43344%2C%22width%22%3A60.772113999999995%2C%22height%22%3A46.70291%2C%22text%22%3A%2290%22%7D%2C%7B%22x%22%3A59.740017%2C%22y%22%3A275.62622%2C%22width%22%3A66.031653%2C%22height%22%3A48.26663000000002%2C%22text%22%3A%2280%22%7D%2C%7B%22x%22%3A63.140945%2C%22y%22%3A392.70947%2C%22width%22%3A61.84285%2C%22height%22%3A46.66372999999999%2C%22text%22%3A%2270%22%7D%2C%7B%22x%22%3A62.90552%2C%22y%22%3A510.85904%2C%22width%22%3A61.190435%2C%22height%22%3A47.32516000000004%2C%22text%22%3A%2260%22%7D%2C%7B%22x%22%3A14.132811%2C%22y%22%3A564.77264%2C%22width%22%3A49.940449%2C%22height%22%3A49.940449%2C%22text%22%3A%22N%22%7D%2C%7B%22x%22%3A61.478466%2C%22y%22%3A627.4721%2C%22width%22%3A63.950374%2C%22height%22%3A48.02660000000003%2C%22text%22%3A%2250%22%7D%2C%7B%22x%22%3A62.02315%2C%22y%22%3A742.2439%2C%22width%22%3A63.354429999999994%2C%22height%22%3A50.590499999999906%2C%22text%22%3A%2240%22%7D%2C%7B%22x%22%3A59.375984%2C%22y%22%3A861.5134%2C%22width%22%3A64.430116%2C%22height%22%3A45.56246999999996%2C%22text%22%3A%2230%22%7D%2C%7B%22x%22%3A61.574352%2C%22y%22%3A976.7424%2C%22width%22%3A62.595918000000005%2C%22height%22%3A49.03360000000009%2C%22text%22%3A%2220%22%7D%2C%7B%22x%22%3A65.89829%2C%22y%22%3A1095.6565%2C%22width%22%3A57.049205%2C%22height%22%3A44.77150000000006%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A1165.9978%2C%22y%22%3A1164.4974%2C%22width%22%3A134.1884%2C%22height%22%3A45.975000000000136%2C%22text%22%3A%22logzn%22%7D%2C%7B%22x%22%3A233.15996%2C%22y%22%3A1245.1973%2C%22width%22%3A61.97510999999997%2C%22height%22%3A50.93329999999992%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A695.2873%2C%22y%22%3A1246.4506%2C%22width%22%3A302.80425%2C%22height%22%3A48.43970000000013%2C%22text%22%3A%22506070%22%7D%2C%7B%22x%22%3A584.4206%2C%22y%22%3A1246.4547%2C%22width%22%3A60.30736999999999%2C%22height%22%3A47.85110000000009%2C%22text%22%3A%2240%22%7D%2C%7B%22x%22%3A459.43942%2C%22y%22%3A1246.1334%2C%22width%22%3A68.48404%2C%22height%22%3A49.396400000000085%2C%22text%22%3A%2230%22%7D%2C%7B%22x%22%3A345.26297%2C%22y%22%3A1246.5358%2C%22width%22%3A67.28787%2C%22height%22%3A49.03009999999995%2C%22text%22%3A%2220%22%7D%2C%7B%22x%22%3A1048.9641%2C%22y%22%3A1247.298%2C%22width%22%3A66.71960000000013%2C%22height%22%3A48.14830000000006%2C%22text%22%3A%2280%22%7D%2C%7B%22x%22%3A1143.3971%2C%22y%22%3A1249.2186%2C%22width%22%3A214.0154%2C%22height%22%3A45.43180000000007%2C%22text%22%3A%2290100%22%7D%2C%7B%22x%22%3A771.3994%2C%22y%22%3A1304.7079%2C%22width%22%3A36.452159999999935%2C%22height%22%3A36.452159999999935%2C%22text%22%3A%22n%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22nlogzn%20n.2nn2%20100%2090%2080%2070%2060%20N%2050%2040%2030%2020%2010%20logzn%2010%20506070%2040%2030%2020%2080%2090100%20n%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A353%2C%22height%22%3A337%7D\"></card></p><h2 data-lake-id=\"c279687c1b3737b3a7598297aad64293\" id=\"e4lA3\">案例分析</h2><p data-lake-id=\"cc0824d20ef294d34d700c1f0faeb95f\"><br /></p><h3 data-lake-id=\"5e928bd4f2289a967284840335233eba\" id=\"VYhz0\">O(1)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20num%20%3D%200%3B%5Cnnum%20%2B%3D%201%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22ekCzv%22%7D\"></card><p data-lake-id=\"c6f097714ca862b84ba2bf480fedf461\">时间复杂度：O(1)</p><p data-lake-id=\"51e5cf273a007f38def93efc9820a252\">空间复杂度：O(1)</p><p data-lake-id=\"c2c0430afe64b9002d258a6020a807d8\"><br /></p><h3 data-lake-id=\"06cb30ba826f30b11d2175a5b216bbb3\" id=\"Atoxd\">O(n)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22for(let%20i%20%3D0%3B%20i%2B%2B%3B%20i%3Cn)%7B%5Cn%20%20console.log(i)%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22nTvhk%22%7D\"></card><p data-lake-id=\"eb27c92742df1830e99571a97b2c0533\">时间复杂度：O(n)</p><p data-lake-id=\"d82d73d0426233f6dd897b72c3b4a575\">空间复杂度：O(1)</p><blockquote><p data-lake-id=\"86d090d727c4165661528d43488c7a22\">单个变量所占的空间永远都是一个常量所以是O(1)</p></blockquote><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20arr%20%3D%20%5B%5D%5Cnfor(let%20i%3D0%3Bi%2B%2B%3Bi%3Cn)%7B%5Cn%20%20arr.push(i)%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22LdzGO%22%7D\"></card><p data-lake-id=\"81b9c12c97e92dcd6178775e7aec3c8d\">时间复杂度：O(n)</p><p data-lake-id=\"b31704fd0acaa0d403855aa2f9d81a5b\">空间复杂度：O(n)</p><blockquote><p data-lake-id=\"243cbef1687a37217ffc3bda75b9aa28\">这段代码相当于我们给数组arr中添加了n个元素，所以占用了n个内存单元，因此空间复杂度为O(n)</p></blockquote><h3 data-lake-id=\"096774bfebc759de813314b79609a415\" id=\"tXrOE\">O(log<sub>2</sub>n)</h3><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20i%20%3D%201%3B%5Cnwhile(i%3C%3Dn)%7B%5Cn%20%20i*%3D2%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22duay8%22%7D\"></card><p data-lake-id=\"783b1424d6d9915f37c9d082ee5dc9ec\">时间复杂度：O(n)<br />空间复杂度：O(1)</p><blockquote><p data-lake-id=\"b598a2ade424f030a47c4a485eade246\">这段代码相当于是在计算 2<sup>x </sup>&lt;=<sup> </sup>n，也就是<anchor />x<focus />次之后循环结束那么x=log<sub>2</sub>n</p></blockquote><p data-lake-id=\"df9a3fdfa8a863d0a1c0977dfc50f4d4\"><br /></p><p data-lake-id=\"5a42ac2ca75a5efd8baeff8786053af8\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-02T00:13:25.000Z",
    "deleted_at": null,
    "created_at": "2021-02-01T23:09:37.000Z",
    "updated_at": "2021-02-02T00:13:25.000Z",
    "published_at": "2021-02-02T00:13:25.000Z",
    "first_published_at": "2021-02-01T23:16:46.000Z",
    "word_count": 658,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png",
    "description": "复杂度的作用一般我们会从两个维度去考虑一段代码的质量：时间复杂度空间复杂度顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。所以时间复杂度和空间复杂度一般是用来衡量一段代码的优劣的。那么我们应该怎么来定义复杂度呢？复杂度的定义与特点定义复杂...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 30708504,
    "slug": "hevd47",
    "title": "[红宝书质检厂]看看读完红宝书的你，到底学废了吗？",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。<br />\n<br />本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何<br />\n\n<a name=\"90b62752\"></a>\n## 第一章\n<a name=\"0rhlJ\"></a>\n### 你眼里的JavaScript是什么？\n在前端的远古时代（95年之前）为了验证一个输入字段是否有效，就需要与服务器进行一次往返的通信，极其浪费时间。而JavaScript当时的出现就是为了解决这种前端的数据验证问题，但是随着自身的发展，现在Js能做的事情已经越来越多了，也就成为了现在我们所认识的主流编程语言。<br />完整的JavaScript由3部分组成：\n\n1. ECMAScript\n1. DOM\n1. BOM\n<a name=\"2tI5X\"></a>\n### 那你能分别介绍一下这三部分吗？\nECMAScript：由国际标准化组织制定的一种标准，定义了这门语言的一些词法、语法和类型等一系列的标准<br />DOM：全称是Document Object Model，也就是文档对象模型，是用来让我们对HTML文档中的元素结构进行增删改查的<br />BOM：Brower Object Model，浏览器对象模型，实现了一系列的浏览器API，以方便我们去操作浏览器相关的操作，常用的有window对象，navigator对象，XMLRequest，操作Cookie的等等<br />\n\n<a name=\"oYbWt\"></a>\n### 思维导图\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png#align=left&display=inline&height=425&margin=%5Bobject%20Object%5D&name=image.png&originHeight=850&originWidth=2438&size=361309&status=done&style=none&width=1219)\n<a name=\"ERTEX\"></a>\n## 第二章\n<a name=\"eCk0O\"></a>\n### 能说一下script标签的defer和async属性吗？\n\n\n<a name=\"ItByg\"></a>\n### 上面你提到的load和DOMContentLoad事件能解释一下吗？\n\n\n<a name=\"jhwrf\"></a>\n### 思维导图\n",
    "body_draft": "对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。<br />\n<br />本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何<br />\n\n<a name=\"90b62752\"></a>\n## 第一章\n<a name=\"0rhlJ\"></a>\n### 你眼里的JavaScript是什么？\n在前端的远古时代（95年之前）为了验证一个输入字段是否有效，就需要与服务器进行一次往返的通信，极其浪费时间。而JavaScript当时的出现就是为了解决这种前端的数据验证问题，但是随着自身的发展，现在Js能做的事情已经越来越多了，也就成为了现在我们所认识的主流编程语言。<br />完整的JavaScript由3部分组成：\n\n1. ECMAScript\n1. DOM\n1. BOM\n<a name=\"2tI5X\"></a>\n### 那你能分别介绍一下这三部分吗？\nECMAScript：由国际标准化组织制定的一种标准，定义了这门语言的一些词法、语法和类型等一系列的标准<br />DOM：全称是Document Object Model，也就是文档对象模型，是用来让我们对HTML文档中的元素结构进行增删改查的<br />BOM：Brower Object Model，浏览器对象模型，实现了一系列的浏览器API，以方便我们去操作浏览器相关的操作，常用的有window对象，navigator对象，XMLRequest，操作Cookie的等等<br />\n\n<a name=\"oYbWt\"></a>\n### 思维导图\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/2705850/1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png#align=left&display=inline&height=425&margin=%5Bobject%20Object%5D&name=image.png&originHeight=850&originWidth=2438&size=361309&status=done&style=none&width=1219)\n<a name=\"ERTEX\"></a>\n## 第二章\n<a name=\"eCk0O\"></a>\n### 能说一下script标签的defer和async属性吗？\n\n\n<a name=\"ItByg\"></a>\n### 上面你提到的load和DOMContentLoad事件能解释一下吗？\n\n\n<a name=\"jhwrf\"></a>\n### 思维导图\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B21%2C0%2C4%5D%2C%5B21%2C0%2C4%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。</p><p data-lake-id=\"ade722222248818d7f08f7a3b09dad2f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d9e6427166884fe37761eaf37fcac5b2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何</p><p data-lake-id=\"c9e88b60636bbc947a65512c4014ae2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"cf278af5db8dd2bdeb67e9c89f6b1e6f\" id=\"90b62752\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">第一章</h2><h3 data-lake-id=\"756e41029c6d99ddaa9083cfb6959d02\" id=\"0rhlJ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">你眼里的JavaScript是什么？</h3><p data-lake-id=\"8401815ab9fe432e5f52a0db734f8020\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在前端的远古时代（95年之前）为了验证一个输入字段是否有效，就需要与服务器进行一次往返的通信，极其浪费时间。<span>而JavaScript当时的出现就是为了解决这种前端的数据验证问题，但是随着自身的发展，现在Js能做的事情已经越来越多了，也就成为了现在我们所认识的主流编程语言。</span></p><p data-lake-id=\"56127028f331154622e9b14c0ad665a7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>完整的JavaScript由3部分组成：</span></p><ol data-lake-id=\"a964df6372c645a54762644545f408a4\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"1d10196166fccccf0a3dc71385d75ca4\">ECMAScript</li><li data-lake-id=\"83d82654c6c24f8efbecbdcd75ab6b89\">DOM</li><li data-lake-id=\"4aa044576b60be9336f3650433d76752\">BOM</li></ol><h3 data-lake-id=\"c0b2b6420f3afc2369cbd44d8c3395d1\" id=\"2tI5X\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">那你能分别介绍一下这三部分吗？</h3><p data-lake-id=\"390d17f804e1571ae4018a696960fe66\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">ECMAScript：由国际标准化组织制定的一种标准，定义了这门语言的一些词法、语法和类型等一系列的标准</p><p data-lake-id=\"8af41d5e03e70cbd67638d0cfe8acbb5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">DOM：全称是Document Object Model，也就是文档对象模型，是用来让我们对HTML文档中的元素结构进行增删改查的</p><p data-lake-id=\"16eb0db5594f6146e115c32acbf3db8f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">BOM：Brower Object Model，浏览器对象模型，实现了一系列的浏览器API，以方便我们去操作浏览器相关的操作，常用的有window对象，navigator对象，XMLRequest，操作Cookie的等等</p><p data-lake-id=\"b3082d0af84d83c3c3d87d754885e312\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"05e653e6676c9657b4522a6151ee5c57\" id=\"oYbWt\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">思维导图</h3><p data-lake-id=\"772faebc93eb8848238e1038cb97f26d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2021/png/2705850/1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"425px\" style=\"visibility: visible; width: 1219px;\"></span></p><h2 data-lake-id=\"63bdbc771eed6409dd6b6c9319a2fd45\" id=\"ERTEX\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">第二章</h2><h3 data-lake-id=\"d427e31ee085f805bcb3456057161668\" id=\"eCk0O\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">能说一下script标签的defer和async属性吗？</h3><p data-lake-id=\"a2967cba46163b2841bcf5c4665ce538\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"ab7337371e6eee2876aeaa12ed150d1b\" id=\"ItByg\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">上面你提到的load和DOMContentLoad事件能解释一下吗？</h3><p data-lake-id=\"2a510f54750c8b57f5203817a77aa858\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"e69126ecb0ff03d9fb2ba9d773190253\" id=\"jhwrf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">思维导图</h3></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。</p><p data-lake-id=\"ade722222248818d7f08f7a3b09dad2f\"><br /></p><p data-lake-id=\"d9e6427166884fe37761eaf37fcac5b2\">本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何</p><p data-lake-id=\"c9e88b60636bbc947a65512c4014ae2d\"><br /></p><h2 data-lake-id=\"cf278af5db8dd2bdeb67e9c89f6b1e6f\" id=\"90b62752\">第一章</h2><h3 data-lake-id=\"756e41029c6d99ddaa9083cfb6959d02\" id=\"0rhlJ\">你眼里的JavaScript是什么？</h3><p data-lake-id=\"8401815ab9fe432e5f52a0db734f8020\">在前端的远古时代（95年之前）为了验证一个输入字段是否有效，就需要与服务器进行一次往返的通信，极其浪费时间。<span>而JavaScript当时的出现就是为了解决这种前端的数据验证问题，但是随着自身的发展，现在Js能做的事情已经越来越多了，也就成为了现在我们所认识的主流编程语言。</span></p><p data-lake-id=\"56127028f331154622e9b14c0ad665a7\"><span>完整的JavaScript由3部分组成：</span></p><ol data-lake-id=\"a964df6372c645a54762644545f408a4\" start=\"1\"><li data-lake-id=\"1d10196166fccccf0a3dc71385d75ca4\">ECMAScript</li><li data-lake-id=\"83d82654c6c24f8efbecbdcd75ab6b89\">DOM</li><li data-lake-id=\"4aa044576b60be9336f3650433d76752\">BOM</li></ol><h3 data-lake-id=\"c0b2b6420f3afc2369cbd44d8c3395d1\" id=\"2tI5X\">那你能分别介绍一下这三部分吗？</h3><p data-lake-id=\"390d17f804e1571ae4018a696960fe66\">ECMAScript：由国际标准化组织制定的一种标准，定义了这门语言的一些词法、语法和类型等一系列的标准</p><p data-lake-id=\"8af41d5e03e70cbd67638d0cfe8acbb5\">DOM：全称是Document Object Model，也就是文档对象模型，是用来让我们对HTML文档中的元素结构进行增删改查的</p><p data-lake-id=\"16eb0db5594f6146e115c32acbf3db8f\">BOM：Brower Object Model，浏览器对象模型，实现了一系列的浏览器API，以方便我们去操作浏览器相关的操作，常用的有window对象，navigator对象，XMLRequest，操作Cookie的等等</p><p data-lake-id=\"b3082d0af84d83c3c3d87d754885e312\"><br /></p><h3 data-lake-id=\"05e653e6676c9657b4522a6151ee5c57\" id=\"oYbWt\">思维导图</h3><p data-lake-id=\"772faebc93eb8848238e1038cb97f26d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png%22%2C%22originWidth%22%3A2438%2C%22originHeight%22%3A850%2C%22name%22%3A%22image.png%22%2C%22size%22%3A361309%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1761.6993%2C%22y%22%3A197.9573%2C%22width%22%3A452.1326999999999%2C%22height%22%3A26.417460000000005%2C%22text%22%3A%22%E6%9C%89%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E7%BB%84%E7%BB%87%E5%92%8C%E6%AC%A7%E6%B4%B2%E7%94%B5%E6%B0%94%E7%BB%84%E7%BB%87%E6%8C%87%E5%AE%9A%E7%9A%84%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%22%7D%2C%7B%22x%22%3A1468.5966%2C%22y%22%3A207.69469%2C%22width%22%3A175.5094999999999%2C%22height%22%3A28.815399999999983%2C%22text%22%3A%22ECMAScript%22%7D%2C%7B%22x%22%3A85.995575%2C%22y%22%3A246.8209%2C%22width%22%3A457.22872499999994%2C%22height%22%3A25.79525000000001%2C%22text%22%3A%221995%E5%B9%B4%E6%97%B6%E8%AE%BE%E8%AE%A1%2C%E5%BD%93%E6%97%B6%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81%E4%BA%A7%E7%94%9F%E7%9A%84%22%7D%2C%7B%22x%22%3A1759.5648%2C%22y%22%3A247.75244%2C%22width%22%3A408.43219999999974%2C%22height%22%3A30.07505999999998%2C%22text%22%3A%22%E5%AE%9A%E4%B9%89%E4%BA%86%E8%BF%99%E9%97%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E6%96%87%E6%B3%95%2C%E8%AF%AD%E4%B9%89%E7%AD%89%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A0%87%E5%87%86%22%7D%2C%7B%22x%22%3A87.000824%2C%22y%22%3A275.22504%2C%22width%22%3A455.120276%2C%22height%22%3A25.906030000000044%2C%22text%22%3A%22%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%A2%91%E6%9D%A1%E7%9A%84%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82%2C%E8%BF%9B%E8%80%8C%E5%AF%BC%E8%87%B4%E7%9A%84%E9%A1%B5%E9%9D%A2%22%7D%2C%7B%22x%22%3A665.03455%2C%22y%22%3A284.5056%2C%22width%22%3A110.23705000000007%2C%22height%22%3A31.64835999999997%2C%22text%22%3A%22%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84%22%7D%2C%7B%22x%22%3A87.19543%2C%22y%22%3A302.70218%2C%22width%22%3A183.73261000000002%2C%22height%22%3A22.92410000000001%2C%22text%22%3A%22%E4%BA%A4%E4%BA%92%E8%83%BD%E5%8A%9B%E5%B7%AE%E7%9A%84%E9%97%AE%E9%A2%98%22%7D%2C%7B%22x%22%3A1709.0195%2C%22y%22%3A346.93698%2C%22width%22%3A130.01099999999997%2C%22height%22%3A27.300779999999975%2C%22text%22%3A%22%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B7%8C%E6%A7%9F%E5%9E%8B%22%7D%2C%7B%22x%22%3A1473.2596%2C%22y%22%3A358.07068%2C%22width%22%3A82.20659999999998%2C%22height%22%3A26.676270000000045%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A1707.2963%2C%22y%22%3A399.78345%2C%22width%22%3A358.02329999999984%2C%22height%22%3A25.50414999999998%2C%22text%22%3A%22%E6%8F%90%E4%BE%9B%E5%AF%B9DOM%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E5%9F%B9%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9A%84%E8%83%BD%E5%8A%9B%22%7D%2C%7B%22x%22%3A924.6946%2C%22y%22%3A407.02588%2C%22width%22%3A381.98239999999987%2C%22height%22%3A52.026670000000024%2C%22text%22%3A%22%E4%BB%80%E4%B9%88%E6%98%AFJavascript%3F%22%7D%2C%7B%22x%22%3A661.78046%2C%22y%22%3A478.15244%2C%22width%22%3A114.89854000000003%2C%22height%22%3A28.553459999999973%2C%22text%22%3A%22%E5%8E%86%E5%8F%B2%E8%84%89%E7%BB%9C%22%7D%2C%7B%22x%22%3A1707.3702%2C%22y%22%3A492.77478%2C%22width%22%3A154.8098%2C%22height%22%3A23.762819999999977%2C%22text%22%3A%22%E6%B5%8F%E5%AE%BD%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%22%7D%2C%7B%22x%22%3A2101.9194%2C%22y%22%3A545.46484%2C%22width%22%3A130.3427999999999%2C%22height%22%3A20.98621000000003%2C%22text%22%3A%22window%E5%AF%B9%E4%B9%90%22%7D%2C%7B%22x%22%3A1469.9442%2C%22y%22%3A554.99963%2C%22width%22%3A110.2487000000001%2C%22height%22%3A30.664969999999926%2C%22text%22%3A%22BOMS%22%7D%2C%7B%22x%22%3A2102.7666%2C%22y%22%3A599.9788%2C%22width%22%3A145.36990000000014%2C%22height%22%3A24.632040000000075%2C%22text%22%3A%22navigator%E5%AF%B9%E8%B1%A1%22%7D%2C%7B%22x%22%3A1709.2125%2C%22y%22%3A653.2446%2C%22width%22%3A295.5833%2C%22height%22%3A22.8202%2C%22text%22%3A%22%E6%8F%90%E4%BE%9B%E5%8F%AF%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84APL%22%7D%2C%7B%22x%22%3A2102.4583%2C%22y%22%3A653.79517%2C%22width%22%3A118.1840000000002%2C%22height%22%3A24.14679000000001%2C%22text%22%3A%22%E6%93%8D%E4%BD%9CCookle%22%7D%2C%7B%22x%22%3A2103.636%2C%22y%22%3A709.82416%2C%22width%22%3A215.04759999999987%2C%22height%22%3A21.945979999999963%2C%22text%22%3A%22XMLRequest%2Cfetch%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%9C%89%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E7%BB%84%E7%BB%87%E5%92%8C%E6%AC%A7%E6%B4%B2%E7%94%B5%E6%B0%94%E7%BB%84%E7%BB%87%E6%8C%87%E5%AE%9A%E7%9A%84%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%20ECMAScript%201995%E5%B9%B4%E6%97%B6%E8%AE%BE%E8%AE%A1%2C%E5%BD%93%E6%97%B6%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81%E4%BA%A7%E7%94%9F%E7%9A%84%20%E5%AE%9A%E4%B9%89%E4%BA%86%E8%BF%99%E9%97%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E6%96%87%E6%B3%95%2C%E8%AF%AD%E4%B9%89%E7%AD%89%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A0%87%E5%87%86%20%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%A2%91%E6%9D%A1%E7%9A%84%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82%2C%E8%BF%9B%E8%80%8C%E5%AF%BC%E8%87%B4%E7%9A%84%E9%A1%B5%E9%9D%A2%20%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84%20%E4%BA%A4%E4%BA%92%E8%83%BD%E5%8A%9B%E5%B7%AE%E7%9A%84%E9%97%AE%E9%A2%98%20%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B7%8C%E6%A7%9F%E5%9E%8B%20DOM%20%E6%8F%90%E4%BE%9B%E5%AF%B9DOM%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E5%9F%B9%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9A%84%E8%83%BD%E5%8A%9B%20%E4%BB%80%E4%B9%88%E6%98%AFJavascript%3F%20%E5%8E%86%E5%8F%B2%E8%84%89%E7%BB%9C%20%E6%B5%8F%E5%AE%BD%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%20window%E5%AF%B9%E4%B9%90%20BOMS%20navigator%E5%AF%B9%E8%B1%A1%20%E6%8F%90%E4%BE%9B%E5%8F%AF%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84APL%20%E6%93%8D%E4%BD%9CCookle%20XMLRequest%2Cfetch%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1219%2C%22height%22%3A425%7D\"></card></p><h2 data-lake-id=\"63bdbc771eed6409dd6b6c9319a2fd45\" id=\"ERTEX\">第二章</h2><h3 data-lake-id=\"d427e31ee085f805bcb3456057161668\" id=\"eCk0O\">能说一下script标签的defer和async属性吗？</h3><p data-lake-id=\"a2967cba46163b2841bcf5c4665ce538\"><br /></p><h3 data-lake-id=\"ab7337371e6eee2876aeaa12ed150d1b\" id=\"ItByg\">上面你提到的load和DOMContentLoad事件能解释一下吗？</h3><p data-lake-id=\"2a510f54750c8b57f5203817a77aa858\"><br /></p><h3 data-lake-id=\"e69126ecb0ff03d9fb2ba9d773190253\" id=\"jhwrf\">思维导图</h3>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。</p><p data-lake-id=\"ade722222248818d7f08f7a3b09dad2f\"><br /></p><p data-lake-id=\"d9e6427166884fe37761eaf37fcac5b2\">本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何</p><p data-lake-id=\"c9e88b60636bbc947a65512c4014ae2d\"><br /></p><h2 data-lake-id=\"cf278af5db8dd2bdeb67e9c89f6b1e6f\" id=\"90b62752\">第一章</h2><h3 data-lake-id=\"756e41029c6d99ddaa9083cfb6959d02\" id=\"0rhlJ\">你眼里的JavaScript是什么？</h3><p data-lake-id=\"8401815ab9fe432e5f52a0db734f8020\">在前端的远古时代（95年之前）为了验证一个输入字段是否有效，就需要与服务器进行一次往返的通信，极其浪费时间。<span>而JavaScript当时的出现就是为了解决这种前端的数据验证问题，但是随着自身的发展，现在Js能做的事情已经越来越多了，也就成为了现在我们所认识的主流编程语言。</span></p><p data-lake-id=\"56127028f331154622e9b14c0ad665a7\"><span>完整的JavaScript由3部分组成：</span></p><ol data-lake-id=\"a964df6372c645a54762644545f408a4\" start=\"1\"><li data-lake-id=\"1d10196166fccccf0a3dc71385d75ca4\">ECMAScript</li><li data-lake-id=\"83d82654c6c24f8efbecbdcd75ab6b89\">DOM</li><li data-lake-id=\"4aa044576b60be9336f3650433d76752\">BOM</li></ol><h3 data-lake-id=\"c0b2b6420f3afc2369cbd44d8c3395d1\" id=\"2tI5X\">那你能分别介绍一下这三部分吗？</h3><p data-lake-id=\"390d17f804e1571ae4018a696960fe66\">ECMAScript：由国际标准化组织制定的一种标准，定义了这门语言的一些词法、语法和类型等一系列的标准</p><p data-lake-id=\"8af41d5e03e70cbd67638d0cfe8acbb5\">DOM：全称是Document Object Model，也就是文档对象模型，是用来让我们对HTML文档中的元素结构进行增删改查的</p><p data-lake-id=\"16eb0db5594f6146e115c32acbf3db8f\">BOM：Brower Object Model，浏览器对象模型，实现了一系列的浏览器API，以方便我们去操作浏览器相关的操作，常用的有window对象，navigator对象，XMLRequest，操作Cookie的等等</p><p data-lake-id=\"b3082d0af84d83c3c3d87d754885e312\"><br /></p><h3 data-lake-id=\"05e653e6676c9657b4522a6151ee5c57\" id=\"oYbWt\">思维导图</h3><p data-lake-id=\"772faebc93eb8848238e1038cb97f26d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F2705850%2F1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png%22%2C%22originWidth%22%3A2438%2C%22originHeight%22%3A850%2C%22name%22%3A%22image.png%22%2C%22size%22%3A361309%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1761.6993%2C%22y%22%3A197.9573%2C%22width%22%3A452.1326999999999%2C%22height%22%3A26.417460000000005%2C%22text%22%3A%22%E6%9C%89%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E7%BB%84%E7%BB%87%E5%92%8C%E6%AC%A7%E6%B4%B2%E7%94%B5%E6%B0%94%E7%BB%84%E7%BB%87%E6%8C%87%E5%AE%9A%E7%9A%84%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%22%7D%2C%7B%22x%22%3A1468.5966%2C%22y%22%3A207.69469%2C%22width%22%3A175.5094999999999%2C%22height%22%3A28.815399999999983%2C%22text%22%3A%22ECMAScript%22%7D%2C%7B%22x%22%3A85.995575%2C%22y%22%3A246.8209%2C%22width%22%3A457.22872499999994%2C%22height%22%3A25.79525000000001%2C%22text%22%3A%221995%E5%B9%B4%E6%97%B6%E8%AE%BE%E8%AE%A1%2C%E5%BD%93%E6%97%B6%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81%E4%BA%A7%E7%94%9F%E7%9A%84%22%7D%2C%7B%22x%22%3A1759.5648%2C%22y%22%3A247.75244%2C%22width%22%3A408.43219999999974%2C%22height%22%3A30.07505999999998%2C%22text%22%3A%22%E5%AE%9A%E4%B9%89%E4%BA%86%E8%BF%99%E9%97%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E6%96%87%E6%B3%95%2C%E8%AF%AD%E4%B9%89%E7%AD%89%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A0%87%E5%87%86%22%7D%2C%7B%22x%22%3A87.000824%2C%22y%22%3A275.22504%2C%22width%22%3A455.120276%2C%22height%22%3A25.906030000000044%2C%22text%22%3A%22%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%A2%91%E6%9D%A1%E7%9A%84%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82%2C%E8%BF%9B%E8%80%8C%E5%AF%BC%E8%87%B4%E7%9A%84%E9%A1%B5%E9%9D%A2%22%7D%2C%7B%22x%22%3A665.03455%2C%22y%22%3A284.5056%2C%22width%22%3A110.23705000000007%2C%22height%22%3A31.64835999999997%2C%22text%22%3A%22%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84%22%7D%2C%7B%22x%22%3A87.19543%2C%22y%22%3A302.70218%2C%22width%22%3A183.73261000000002%2C%22height%22%3A22.92410000000001%2C%22text%22%3A%22%E4%BA%A4%E4%BA%92%E8%83%BD%E5%8A%9B%E5%B7%AE%E7%9A%84%E9%97%AE%E9%A2%98%22%7D%2C%7B%22x%22%3A1709.0195%2C%22y%22%3A346.93698%2C%22width%22%3A130.01099999999997%2C%22height%22%3A27.300779999999975%2C%22text%22%3A%22%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B7%8C%E6%A7%9F%E5%9E%8B%22%7D%2C%7B%22x%22%3A1473.2596%2C%22y%22%3A358.07068%2C%22width%22%3A82.20659999999998%2C%22height%22%3A26.676270000000045%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A1707.2963%2C%22y%22%3A399.78345%2C%22width%22%3A358.02329999999984%2C%22height%22%3A25.50414999999998%2C%22text%22%3A%22%E6%8F%90%E4%BE%9B%E5%AF%B9DOM%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E5%9F%B9%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9A%84%E8%83%BD%E5%8A%9B%22%7D%2C%7B%22x%22%3A924.6946%2C%22y%22%3A407.02588%2C%22width%22%3A381.98239999999987%2C%22height%22%3A52.026670000000024%2C%22text%22%3A%22%E4%BB%80%E4%B9%88%E6%98%AFJavascript%3F%22%7D%2C%7B%22x%22%3A661.78046%2C%22y%22%3A478.15244%2C%22width%22%3A114.89854000000003%2C%22height%22%3A28.553459999999973%2C%22text%22%3A%22%E5%8E%86%E5%8F%B2%E8%84%89%E7%BB%9C%22%7D%2C%7B%22x%22%3A1707.3702%2C%22y%22%3A492.77478%2C%22width%22%3A154.8098%2C%22height%22%3A23.762819999999977%2C%22text%22%3A%22%E6%B5%8F%E5%AE%BD%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%22%7D%2C%7B%22x%22%3A2101.9194%2C%22y%22%3A545.46484%2C%22width%22%3A130.3427999999999%2C%22height%22%3A20.98621000000003%2C%22text%22%3A%22window%E5%AF%B9%E4%B9%90%22%7D%2C%7B%22x%22%3A1469.9442%2C%22y%22%3A554.99963%2C%22width%22%3A110.2487000000001%2C%22height%22%3A30.664969999999926%2C%22text%22%3A%22BOMS%22%7D%2C%7B%22x%22%3A2102.7666%2C%22y%22%3A599.9788%2C%22width%22%3A145.36990000000014%2C%22height%22%3A24.632040000000075%2C%22text%22%3A%22navigator%E5%AF%B9%E8%B1%A1%22%7D%2C%7B%22x%22%3A1709.2125%2C%22y%22%3A653.2446%2C%22width%22%3A295.5833%2C%22height%22%3A22.8202%2C%22text%22%3A%22%E6%8F%90%E4%BE%9B%E5%8F%AF%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84APL%22%7D%2C%7B%22x%22%3A2102.4583%2C%22y%22%3A653.79517%2C%22width%22%3A118.1840000000002%2C%22height%22%3A24.14679000000001%2C%22text%22%3A%22%E6%93%8D%E4%BD%9CCookle%22%7D%2C%7B%22x%22%3A2103.636%2C%22y%22%3A709.82416%2C%22width%22%3A215.04759999999987%2C%22height%22%3A21.945979999999963%2C%22text%22%3A%22XMLRequest%2Cfetch%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%9C%89%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E7%BB%84%E7%BB%87%E5%92%8C%E6%AC%A7%E6%B4%B2%E7%94%B5%E6%B0%94%E7%BB%84%E7%BB%87%E6%8C%87%E5%AE%9A%E7%9A%84%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%20ECMAScript%201995%E5%B9%B4%E6%97%B6%E8%AE%BE%E8%AE%A1%2C%E5%BD%93%E6%97%B6%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81%E4%BA%A7%E7%94%9F%E7%9A%84%20%E5%AE%9A%E4%B9%89%E4%BA%86%E8%BF%99%E9%97%A8%E8%AF%AD%E8%A8%80%E7%9A%84%E6%96%87%E6%B3%95%2C%E8%AF%AD%E4%B9%89%E7%AD%89%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A0%87%E5%87%86%20%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%A2%91%E6%9D%A1%E7%9A%84%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82%2C%E8%BF%9B%E8%80%8C%E5%AF%BC%E8%87%B4%E7%9A%84%E9%A1%B5%E9%9D%A2%20%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84%20%E4%BA%A4%E4%BA%92%E8%83%BD%E5%8A%9B%E5%B7%AE%E7%9A%84%E9%97%AE%E9%A2%98%20%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B7%8C%E6%A7%9F%E5%9E%8B%20DOM%20%E6%8F%90%E4%BE%9B%E5%AF%B9DOM%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E5%9F%B9%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9A%84%E8%83%BD%E5%8A%9B%20%E4%BB%80%E4%B9%88%E6%98%AFJavascript%3F%20%E5%8E%86%E5%8F%B2%E8%84%89%E7%BB%9C%20%E6%B5%8F%E5%AE%BD%E5%99%A8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%20window%E5%AF%B9%E4%B9%90%20BOMS%20navigator%E5%AF%B9%E8%B1%A1%20%E6%8F%90%E4%BE%9B%E5%8F%AF%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84APL%20%E6%93%8D%E4%BD%9CCookle%20XMLRequest%2Cfetch%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1219%2C%22height%22%3A425%7D\"></card></p><h2 data-lake-id=\"63bdbc771eed6409dd6b6c9319a2fd45\" id=\"ERTEX\">第二章</h2><h3 data-lake-id=\"d427e31ee085f805bcb3456057161668\" id=\"eCk0O\">能说一下script标签的defer和async属性吗？</h3><p data-lake-id=\"a2967cba46163b2841bcf5c4665ce538\"><br /></p><h3 data-lake-id=\"ab7337371e6eee2876aeaa12ed150d1b\" id=\"ItByg\">上面你提到的load和DOMContentLoad事件能解释一下吗？</h3><p data-lake-id=\"2a510f54750c8b57f5203817a77aa858\"><br /></p><h3 data-lake-id=\"e69126ecb0ff03d9fb2ba9d773190253\" id=\"jhwrf\">思维导图</h3>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-01-26T23:39:40.000Z",
    "deleted_at": null,
    "created_at": "2021-01-25T23:20:11.000Z",
    "updated_at": "2021-01-26T23:39:40.000Z",
    "published_at": "2021-01-26T23:39:40.000Z",
    "first_published_at": "2021-01-26T23:39:40.000Z",
    "word_count": 485,
    "cover": "https://cdn.nlark.com/yuque/0/2021/png/2705850/1611704341145-747ae015-7564-441d-bef2-7f8cb22d0b1c.png?x-oss-process=image%2Fresize%2Cw_1500",
    "description": "对于技术类的书籍，我认为我们在阅读的时候应该是带着问题又目的性的阅读，当我们读完一个章节或者一部分之后就回头问问自己是否了解或者掌握了这其中的知识点，以问题的形式来回顾和检查自己的理解程度。本篇文章我就以这种角度来带大家检查一下自己阅读红宝书的质量到底如何第一章你眼里的JavaScript是什...",
    "custom_description": null,
    "hits": 2,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 26635674,
    "slug": "rbbbms",
    "title": "标签语义化",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n",
    "body_draft": "\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional show-placeholder\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-29T23:25:24.000Z",
    "deleted_at": null,
    "created_at": "2020-12-29T23:25:07.000Z",
    "updated_at": "2020-12-29T23:25:26.000Z",
    "published_at": "2020-12-29T23:25:24.000Z",
    "first_published_at": "2020-12-29T23:25:24.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 2,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 26635672,
    "slug": "lv32np",
    "title": "无标题",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "body_draft_lake": "",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-29T23:24:55.000Z",
    "deleted_at": null,
    "created_at": "2020-12-29T23:24:55.000Z",
    "updated_at": "2020-12-29T23:24:55.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": null,
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 26511072,
    "slug": "myylta",
    "title": "动画与绘制",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"Xhnnk\"></a>\n## Animation\n\n\n- @keyframes 定义\n   - 可以使用百分比表示进度\n   - 也可以使用from、to\n```css\n@keyframes mykf{\n\tform{\n  \tbackground: red\n  }\n  to{\n    background: blue\n  }\n```\n\n- animation：使用\n   - animation-name    动画名称\n   - animation-duration    动画的时长\n   - animation-timing-function    动画的时间曲线\n      - 贝塞尔曲线：[https://cubic-bezier.com/#.17,.67,.83,.67](https://cubic-bezier.com/#.17,.67,.83,.67)\n      - 一次贝塞尔曲线（直线）\n      - 二次贝塞尔曲线\n      - 三次贝塞尔曲线（常用）\n   - animation-delay    动画开始前的延迟\n   - animation-iteration-count    动画的播放次数\n   - animation-rirection    动画的方向\n\n\n\n- transition\n   - transition-property 需要变换的属性\n   - transition-duration 变换的时长\n   - transition-timing-function 时间曲线\n   - transition-delay 延迟\n\n\n\n<a name=\"9DGEW\"></a>\n## 颜色\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png#align=left&display=inline&height=298&margin=%5Bobject%20Object%5D&name=image.png&originHeight=596&originWidth=742&size=98359&status=done&style=none&width=371)<br />在自然界中我们看到的光都是混色光，极少有纯色光（激光笔可以达到纯色光）<br />正常人类看到的光的波长在 400~760nm。<br />\n<br />人眼内有三种视锥细胞，这三种细胞分别用来识别三种颜色：红绿蓝（RGB）<br />\n\n<a name=\"ykMB1\"></a>\n### HSL 和 HSV\n\n- Hue： 色相（将颜色分成一个色盘，然后我们通过制定一个色盘中的角度，来决定他的颜色）\n- Ssturation：纯度\n- Lightness： 亮度（到达100是白色，到达0是黑色，中间的才是纯色）\n- Value：明度 （value到达100%时，就相当于是一个纯色）\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1609075457053-ef9ba5ca-8060-40bf-a17b-f4a2c5f4f7ce.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=250&originWidth=640&size=189658&status=done&style=none&width=607)<br />（HSL： W3C采用的标准）<br />\n\n<a name=\"AcVAZ\"></a>\n## 绘制\n<a name=\"DIK7I\"></a>\n### 几何图形\n\n- border\n- box-shadow\n- border-radius\n<a name=\"4VjLk\"></a>\n### 文字\n\n- font\n- text-decoration\n<a name=\"DWufZ\"></a>\n### 位图\n\n- background-image\n",
    "body_draft": "<a name=\"Xhnnk\"></a>\n## Animation\n\n\n- @keyframes 定义\n   - 可以使用百分比表示进度\n   - 也可以使用from、to\n```css\n@keyframes mykf{\n\tform{\n  \tbackground: red\n  }\n  to{\n    background: blue\n  }\n```\n\n- animation：使用\n   - animation-name    动画名称\n   - animation-duration    动画的时长\n   - animation-timing-function    动画的时间曲线\n      - 贝塞尔曲线：[https://cubic-bezier.com/#.17,.67,.83,.67](https://cubic-bezier.com/#.17,.67,.83,.67)\n      - 一次贝塞尔曲线（直线）\n      - 二次贝塞尔曲线\n      - 三次贝塞尔曲线（常用）\n   - animation-delay    动画开始前的延迟\n   - animation-iteration-count    动画的播放次数\n   - animation-rirection    动画的方向\n\n\n\n- transition\n   - transition-property 需要变换的属性\n   - transition-duration 变换的时长\n   - transition-timing-function 时间曲线\n   - transition-delay 延迟\n\n\n\n<a name=\"9DGEW\"></a>\n## 颜色\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png#align=left&display=inline&height=298&margin=%5Bobject%20Object%5D&name=image.png&originHeight=596&originWidth=742&size=98359&status=done&style=none&width=371)<br />在自然界中我们看到的光都是混色光，极少有纯色光（激光笔可以达到纯色光）<br />正常人类看到的光的波长在 400~760nm。<br />\n<br />人眼内有三种视锥细胞，这三种细胞分别用来识别三种颜色：红绿蓝（RGB）<br />\n\n<a name=\"ykMB1\"></a>\n### HSL 和 HSV\n\n- Hue： 色相（将颜色分成一个色盘，然后我们通过制定一个色盘中的角度，来决定他的颜色）\n- Ssturation：纯度\n- Lightness： 亮度（到达100是白色，到达0是黑色，中间的才是纯色）\n- Value：明度 （value到达100%时，就相当于是一个纯色）\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1609075457053-ef9ba5ca-8060-40bf-a17b-f4a2c5f4f7ce.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=250&originWidth=640&size=189658&status=done&style=none&width=607)<br />（HSL： W3C采用的标准）<br />\n\n<a name=\"AcVAZ\"></a>\n## 绘制\n<a name=\"DIK7I\"></a>\n### 几何图形\n\n- border\n- box-shadow\n- border-radius\n<a name=\"4VjLk\"></a>\n### 文字\n\n- font\n- text-decoration\n<a name=\"DWufZ\"></a>\n### 位图\n\n- background-image\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B27%2C2%2C0%2C0%5D%2C%5B27%2C2%2C0%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"950a0f16bbf1370a25a4e1d973f61595\" id=\"Xhnnk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Animation</h2><p data-lake-id=\"e491563a33ed2135de37ab2c3625c0fc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"db70054c16d275b0f902d9af904c4bbf\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c9685f8519bf5046a0945d8cc423dbb0\">@keyframes 定义</li></ul><ul data-lake-id=\"bc1d64b15522bc6da95157ce22e422bb\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"17cff57f32f22f411325e7d8872b02bc\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"b5a24dd7827cc410213ec0b0e862be65\">可以使用百分比表示进度</li><li data-lake-id=\"73762b4e8ddfcbe60c1bac8508789ec2\">也可以使用from、to</li></ul></ul><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"wYxNK\" class=\"lake-card-margin\" data-language=\"css\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">@keyframes</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mykf</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">form</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">background</span>: <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">red</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">to</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">background</span>: <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">blue</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }</span></span></pre></div></div></div><ul data-lake-id=\"77d06b9caf2f45a7bb7b834bf02b23f2\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"08d57865e5166d93051cfd9b2381c2a5\">animation：使用</li></ul><ul data-lake-id=\"46ffc5f475cb4b2ba39404632d1d97a9\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"aa9a98c7ebda0c03f737f95707a4c4e1\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"3c4c4d042136515816394e119c3ca466\">animation-name&nbsp; &nbsp;&nbsp;动画名称</li><li data-lake-id=\"a00ff2e6c5caf1884a96b4737dfbc268\">animation-duration&nbsp; &nbsp;&nbsp;动画的时长</li><li data-lake-id=\"370a8e4d4bb06454deb3d0be602dfb76\">animation-timing-function&nbsp; &nbsp;&nbsp;动画的时间曲线</li></ul></ul><ul data-lake-id=\"3f28b9c7ba5af479fc6a41b358eb3501\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"25f3acb65d1533b15eaa000133cb1f2a\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ul data-lake-id=\"240437948d3bc24e61f1b5b65cd00c0d\" lake-indent=\"0\" style=\"list-style-type: square; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"fd574dffdc061a0626709c588fdbf9e7\">贝塞尔曲线：<a href=\"https://cubic-bezier.com/#.17,.67,.83,.67\" target=\"_blank\">https://cubic-bezier.com/#.17,.67,.83,.67</a></li><li data-lake-id=\"14246a2a6d360d0a7ebe1aae47cab4fd\">一次贝塞尔曲线（直线）</li><li data-lake-id=\"713253c146238443a4fdb1a4e65be910\">二次贝塞尔曲线</li><li data-lake-id=\"da365557e60fe795f60adb52d06d56e9\">三次贝塞尔曲线（常用）</li></ul></ul></ul><ul data-lake-id=\"c5cdbddaf87d921cfee98aeaf29bd913\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"7b2cdf8e0ec0f7592921272f35757041\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"c981792b9237e1bb7dfab84730a008df\">animation-delay&nbsp; &nbsp;&nbsp;动画开始前的延迟</li><li data-lake-id=\"e60a0cf901dd7a30e79312b2b941c4c5\">animation-iteration-count&nbsp; &nbsp;&nbsp;动画的播放次数</li><li data-lake-id=\"1b05b4997946b79a960c4577dc99b1af\">animation-rirection&nbsp; &nbsp;&nbsp;动画的方向</li></ul></ul><p data-lake-id=\"807e53242f3f68428af15aae406b8816\" style=\"padding-left: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"dc8249f6eaf43f9df567c6a375edea31\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e10c91c3d3c26aad84cacaef5d775c83\">transition</li></ul><ul data-lake-id=\"dcfda1b87acb2002b6af67ae02ee0739\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"6b090391f1ced16df7932dab808720ab\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"5236757fef7c56694556c6fde0b3f676\">transition-property 需要变换的属性</li><li data-lake-id=\"5492dd63474768d22b5bab8f9a0bb0b1\">transition-duration 变换的时长</li><li data-lake-id=\"3536631185fcf8f3baabc11077abbfc0\">transition-timing-function 时间曲线</li><li data-lake-id=\"575794f7d4684f6259c29206ccedabf6\">transition-delay 延迟</li></ul></ul><p data-lake-id=\"612211629e85b98609d90826ea20325a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"06a9445aab7028fb1f12efd2578d6151\" id=\"9DGEW\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">颜色</h2><p data-lake-id=\"1f8225303b66ff5cc7e2916481970c2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"298px\" style=\"visibility: visible; width: 371px;\"></span></p><p data-lake-id=\"0699c730173f887f3282fba28d87c692\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在自然界中我们看到的光都是混色光，极少有纯色光（激光笔可以达到纯色光）</p><p data-lake-id=\"e034abc8398102787617629e3a5a0e04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">正常人类看到的光的波长在 400~760nm。</p><p data-lake-id=\"e310fcc76af351eb9bd9bb3b4071b92c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"15881631abfa4a3c2f52da8e8c966327\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">人眼内有三种<span style=\"background-color: #FADB14;\">视锥细胞</span>，这三种细胞分别用来识别三种颜色：红绿蓝（RGB）</p><p data-lake-id=\"70fc2950733033eceef7959c2fc524f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"70ad7b21fc3d1be47148e0c3653a1024\" id=\"ykMB1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">HSL 和 HSV</h3><ul data-lake-id=\"59a793bc2925199c5a64789e5b7a68d3\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"4bb1c3efc0e0b7c9f828e538e390daf2\">Hue： 色相（将颜色分成一个色盘，然后我们通过制定一个色盘中的角度，来决定他的颜色）</li><li data-lake-id=\"80963e4ec549aff505f5e2642db0f7af\">Ssturation：纯度</li><li data-lake-id=\"bb14e6c0b2c8ab993bea75dc715af443\">Lightness： 亮度（到达100是白色，到达0是黑色，中间的才是纯色）</li><li data-lake-id=\"111d0127810eb3b332520f12d33faef0\">Value：明度 （value到达100%时，就相当于是一个纯色）</li></ul><p data-lake-id=\"1a68b101ce30e4a1a6bd21d155df9813\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1609075457053-ef9ba5ca-8060-40bf-a17b-f4a2c5f4f7ce.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"237px\" style=\"visibility: visible; width: 607px;\"></span></p><p data-lake-id=\"bac57e61863afd46b8dc37c4ab517f60\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">（HSL： W3C采用的标准）</p><p data-lake-id=\"7073225ff867cf2ade73fe2621dbfe66\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"27ad5e50fee1e1ce38fad39e8945d964\" id=\"AcVAZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">绘制</h2><h3 data-lake-id=\"062ad7c37df2fcea1187d9cdc26b646e\" id=\"DIK7I\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">几何图形</h3><ul data-lake-id=\"de26c4253d547a7f4fde8f280bb35bbf\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"432153cf23ce6f37cd9afdd8b5678e60\">border</li><li data-lake-id=\"f1cacbd5c87fb827f299ad833d2f5295\">box-shadow</li><li data-lake-id=\"e2e5621cf3b3d2b067ddaf693fc0083a\">border-radius</li></ul><h3 data-lake-id=\"ac9537d64da31c135aaf32e2607b6c5f\" id=\"4VjLk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">文字</h3><ul data-lake-id=\"bbac33545b5b0a0fe321a5be294f2810\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"9f939d8f626d9eae91eb941d872fe00b\">font</li><li data-lake-id=\"0fc342028b2635920a6cf183f29247c0\">text-decoration</li></ul><h3 data-lake-id=\"d30a0cf91104dd2f5d6883f8a5d09f95\" id=\"DWufZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">位图</h3><ul data-lake-id=\"231b9a2d0e510b49f712711181c1354f\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ca3290dcc5ab38bfebe8f81e8bc321d3\">background-image</li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"950a0f16bbf1370a25a4e1d973f61595\" id=\"Xhnnk\">Animation</h2><p data-lake-id=\"e491563a33ed2135de37ab2c3625c0fc\"><br /></p><ul data-lake-id=\"db70054c16d275b0f902d9af904c4bbf\"><li data-lake-id=\"c9685f8519bf5046a0945d8cc423dbb0\">@keyframes 定义</li></ul><ul data-lake-id=\"17cff57f32f22f411325e7d8872b02bc\" data-lake-indent=\"1\"><li data-lake-id=\"b5a24dd7827cc410213ec0b0e862be65\">可以使用百分比表示进度</li><li data-lake-id=\"73762b4e8ddfcbe60c1bac8508789ec2\">也可以使用from、to</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22%40keyframes%20mykf%7B%5Cn%5Ctform%7B%5Cn%20%20%5Ctbackground%3A%20red%5Cn%20%20%7D%5Cn%20%20to%7B%5Cn%20%20%20%20background%3A%20blue%5Cn%20%20%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22wYxNK%22%7D\"></card><ul data-lake-id=\"77d06b9caf2f45a7bb7b834bf02b23f2\"><li data-lake-id=\"08d57865e5166d93051cfd9b2381c2a5\">animation：使用</li></ul><ul data-lake-id=\"aa9a98c7ebda0c03f737f95707a4c4e1\" data-lake-indent=\"1\"><li data-lake-id=\"3c4c4d042136515816394e119c3ca466\">animation-name    动画名称</li><li data-lake-id=\"a00ff2e6c5caf1884a96b4737dfbc268\">animation-duration    动画的时长</li><li data-lake-id=\"370a8e4d4bb06454deb3d0be602dfb76\">animation-timing-function    动画的时间曲线</li></ul><ul data-lake-id=\"240437948d3bc24e61f1b5b65cd00c0d\" data-lake-indent=\"2\"><li data-lake-id=\"fd574dffdc061a0626709c588fdbf9e7\">贝塞尔曲线：<a href=\"https://cubic-bezier.com/#.17,.67,.83,.67\" target=\"_blank\">https://cubic-bezier.com/#.17,.67,.83,.67</a></li><li data-lake-id=\"14246a2a6d360d0a7ebe1aae47cab4fd\">一次贝塞尔曲线（直线）</li><li data-lake-id=\"713253c146238443a4fdb1a4e65be910\">二次贝塞尔曲线</li><li data-lake-id=\"da365557e60fe795f60adb52d06d56e9\">三次贝塞尔曲线（常用）</li></ul><ul data-lake-id=\"7b2cdf8e0ec0f7592921272f35757041\" data-lake-indent=\"1\"><li data-lake-id=\"c981792b9237e1bb7dfab84730a008df\">animation-delay    动画开始前的延迟</li><li data-lake-id=\"e60a0cf901dd7a30e79312b2b941c4c5\">animation-iteration-count    动画的播放次数</li><li data-lake-id=\"1b05b4997946b79a960c4577dc99b1af\">animation-rirection    动画的方向</li></ul><p data-lake-id=\"807e53242f3f68428af15aae406b8816\" style=\"padding-left: 2em;\"><br /></p><ul data-lake-id=\"dc8249f6eaf43f9df567c6a375edea31\"><li data-lake-id=\"e10c91c3d3c26aad84cacaef5d775c83\">transition</li></ul><ul data-lake-id=\"6b090391f1ced16df7932dab808720ab\" data-lake-indent=\"1\"><li data-lake-id=\"5236757fef7c56694556c6fde0b3f676\">transition-property 需要变换的属性</li><li data-lake-id=\"5492dd63474768d22b5bab8f9a0bb0b1\">transition-duration 变换的时长</li><li data-lake-id=\"3536631185fcf8f3baabc11077abbfc0\">transition-timing-function 时间曲线</li><li data-lake-id=\"575794f7d4684f6259c29206ccedabf6\">transition-delay 延迟</li></ul><p data-lake-id=\"612211629e85b98609d90826ea20325a\"><br /></p><h2 data-lake-id=\"06a9445aab7028fb1f12efd2578d6151\" id=\"9DGEW\">颜色</h2><p data-lake-id=\"1f8225303b66ff5cc7e2916481970c2d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png%22%2C%22originWidth%22%3A742%2C%22originHeight%22%3A596%2C%22name%22%3A%22image.png%22%2C%22size%22%3A98359%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A26.683645%2C%22y%22%3A14.646871%2C%22width%22%3A129.66880500000002%2C%22height%22%3A70.125959%2C%22text%22%3A%22%E9%A2%9C%E8%89%B2%22%7D%2C%7B%22x%22%3A101.35174%2C%22y%22%3A204.58398%2C%22width%22%3A59.087699999999984%2C%22height%22%3A20.12769%2C%22text%22%3A%22100%25%22%7D%2C%7B%22x%22%3A100.902214%2C%22y%22%3A483.64798%2C%22width%22%3A33.893536%2C%22height%22%3A20.178470000000004%2C%22text%22%3A%220%25%22%7D%2C%7B%22x%22%3A594.42596%2C%22y%22%3A554.78265%2C%22width%22%3A72.63037999999995%2C%22height%22%3A20.115120000000047%2C%22text%22%3A%22760nm%22%7D%2C%7B%22x%22%3A181.47874%2C%22y%22%3A555.2976%2C%22width%22%3A72.01172000000003%2C%22height%22%3A19.8519%2C%22text%22%3A%22400nm%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E9%A2%9C%E8%89%B2%20100%25%200%25%20760nm%20400nm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A371%2C%22height%22%3A298%7D\"></card></p><p data-lake-id=\"0699c730173f887f3282fba28d87c692\">在自然界中我们看到的光都是混色光，极少有纯色光（激光笔可以达到纯色光）</p><p data-lake-id=\"e034abc8398102787617629e3a5a0e04\">正常人类看到的光的波长在 400~760nm。</p><p data-lake-id=\"e310fcc76af351eb9bd9bb3b4071b92c\"><br /></p><p data-lake-id=\"15881631abfa4a3c2f52da8e8c966327\">人眼内有三种<span style=\"background-color: #FADB14;\">视锥细胞</span>，这三种细胞分别用来识别三种颜色：红绿蓝（RGB）</p><p data-lake-id=\"70fc2950733033eceef7959c2fc524f2\"><br /></p><h3 data-lake-id=\"70ad7b21fc3d1be47148e0c3653a1024\" id=\"ykMB1\">HSL 和 HSV</h3><ul data-lake-id=\"59a793bc2925199c5a64789e5b7a68d3\"><li data-lake-id=\"4bb1c3efc0e0b7c9f828e538e390daf2\">Hue： 色相（将颜色分成一个色盘，然后我们通过制定一个色盘中的角度，来决定他的颜色）</li><li data-lake-id=\"80963e4ec549aff505f5e2642db0f7af\">Ssturation：纯度</li><li data-lake-id=\"bb14e6c0b2c8ab993bea75dc715af443\">Lightness： 亮度（到达100是白色，到达0是黑色，中间的才是纯色）</li><li data-lake-id=\"111d0127810eb3b332520f12d33faef0\">Value：明度 （value到达100%时，就相当于是一个纯色）</li></ul><p data-lake-id=\"1a68b101ce30e4a1a6bd21d155df9813\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1609075457053-ef9ba5ca-8060-40bf-a17b-f4a2c5f4f7ce.png%22%2C%22originWidth%22%3A640%2C%22originHeight%22%3A250%2C%22name%22%3A%22image.png%22%2C%22size%22%3A189658%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A266.12677%2C%22y%22%3A90.45693%2C%22width%22%3A26.657429999999977%2C%22height%22%3A26.657429999999977%2C%22text%22%3A%22Lightness%22%7D%2C%7B%22x%22%3A161.0741%2C%22y%22%3A106.33126%2C%22width%22%3A92.52864000000002%2C%22height%22%3A40.9979%2C%22text%22%3A%22Saturation%22%7D%2C%7B%22x%22%3A481.15048%2C%22y%22%3A106.48167%2C%22width%22%3A94.77782000000002%2C%22height%22%3A41.87201%2C%22text%22%3A%22Saturation%22%7D%2C%7B%22x%22%3A589.8894%2C%22y%22%3A114.9932%2C%22width%22%3A23.74804999999992%2C%22height%22%3A23.74804999999992%2C%22text%22%3A%22Value%22%7D%2C%7B%22x%22%3A348.35%2C%22y%22%3A120.81153%2C%22width%22%3A29.401129999999966%2C%22height%22%3A29.401129999999966%2C%22text%22%3A%22%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Lightness%20Saturation%20Saturation%20Value%20%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A607%2C%22height%22%3A237%7D\"></card></p><p data-lake-id=\"bac57e61863afd46b8dc37c4ab517f60\">（HSL： W3C采用的标准）</p><p data-lake-id=\"7073225ff867cf2ade73fe2621dbfe66\"><br /></p><h2 data-lake-id=\"27ad5e50fee1e1ce38fad39e8945d964\" id=\"AcVAZ\">绘制</h2><h3 data-lake-id=\"062ad7c37df2fcea1187d9cdc26b646e\" id=\"DIK7I\">几何图形</h3><ul data-lake-id=\"de26c4253d547a7f4fde8f280bb35bbf\"><li data-lake-id=\"432153cf23ce6f37cd9afdd8b5678e60\">border</li><li data-lake-id=\"f1cacbd5c87fb827f299ad833d2f5295\">box-shadow</li><li data-lake-id=\"e2e5621cf3b3d2b067ddaf693fc0083a\">border-radius</li></ul><h3 data-lake-id=\"ac9537d64da31c135aaf32e2607b6c5f\" id=\"4VjLk\">文字</h3><ul data-lake-id=\"bbac33545b5b0a0fe321a5be294f2810\"><li data-lake-id=\"9f939d8f626d9eae91eb941d872fe00b\">font</li><li data-lake-id=\"0fc342028b2635920a6cf183f29247c0\">text-decoration</li></ul><h3 data-lake-id=\"d30a0cf91104dd2f5d6883f8a5d09f95\" id=\"DWufZ\">位图</h3><ul data-lake-id=\"231b9a2d0e510b49f712711181c1354f\"><li data-lake-id=\"ca3290dcc5ab38bfebe8f81e8bc321d3\">background-image</li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"950a0f16bbf1370a25a4e1d973f61595\" id=\"Xhnnk\">Animation</h2><p data-lake-id=\"e491563a33ed2135de37ab2c3625c0fc\"><br /></p><ul data-lake-id=\"db70054c16d275b0f902d9af904c4bbf\"><li data-lake-id=\"c9685f8519bf5046a0945d8cc423dbb0\">@keyframes 定义</li></ul><ul data-lake-id=\"17cff57f32f22f411325e7d8872b02bc\" data-lake-indent=\"1\"><li data-lake-id=\"b5a24dd7827cc410213ec0b0e862be65\">可以使用百分比表示进度</li><li data-lake-id=\"73762b4e8ddfcbe60c1bac8508789ec2\">也可以使用from、to</li></ul><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22%40keyframes%20mykf%7B%5Cn%5Ctform%7B%5Cn%20%20%5Ctbackground%3A%20red%5Cn%20%20%7D%5Cn%20%20to%7B%5Cn%20%20%20%20background%3A%20blue%5Cn%20%20%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22wYxNK%22%7D\"></card><ul data-lake-id=\"77d06b9caf2f45a7bb7b834bf02b23f2\"><li data-lake-id=\"08d57865e5166d93051cfd9b2381c2a5\">animation：使用</li></ul><ul data-lake-id=\"aa9a98c7ebda0c03f737f95707a4c4e1\" data-lake-indent=\"1\"><li data-lake-id=\"3c4c4d042136515816394e119c3ca466\">animation-name    动画名称</li><li data-lake-id=\"a00ff2e6c5caf1884a96b4737dfbc268\">animation-duration    动画的时长</li><li data-lake-id=\"370a8e4d4bb06454deb3d0be602dfb76\">animation-timing-function    动画的时间曲线</li></ul><ul data-lake-id=\"240437948d3bc24e61f1b5b65cd00c0d\" data-lake-indent=\"2\"><li data-lake-id=\"fd574dffdc061a0626709c588fdbf9e7\">贝塞尔曲线：<a href=\"https://cubic-bezier.com/#.17,.67,.83,.67\" target=\"_blank\">https://cubic-bezier.com/#.17,.67,.83,.67</a></li><li data-lake-id=\"14246a2a6d360d0a7ebe1aae47cab4fd\">一次贝塞尔曲线（直线）</li><li data-lake-id=\"713253c146238443a4fdb1a4e65be910\">二次贝塞尔曲线</li><li data-lake-id=\"da365557e60fe795f60adb52d06d56e9\">三次贝塞尔曲线（常用）</li></ul><ul data-lake-id=\"7b2cdf8e0ec0f7592921272f35757041\" data-lake-indent=\"1\"><li data-lake-id=\"c981792b9237e1bb7dfab84730a008df\">animation-delay    动画开始前的延迟</li><li data-lake-id=\"e60a0cf901dd7a30e79312b2b941c4c5\">animation-iteration-count    动画的播放次数</li><li data-lake-id=\"1b05b4997946b79a960c4577dc99b1af\">animation-rirection    动画的方向</li></ul><p data-lake-id=\"807e53242f3f68428af15aae406b8816\" style=\"padding-left: 2em;\"><br /></p><ul data-lake-id=\"dc8249f6eaf43f9df567c6a375edea31\"><li data-lake-id=\"e10c91c3d3c26aad84cacaef5d775c83\">transition</li></ul><ul data-lake-id=\"6b090391f1ced16df7932dab808720ab\" data-lake-indent=\"1\"><li data-lake-id=\"5236757fef7c56694556c6fde0b3f676\">transition-property 需要变换的属性</li><li data-lake-id=\"5492dd63474768d22b5bab8f9a0bb0b1\">transition-duration 变换的时长</li><li data-lake-id=\"3536631185fcf8f3baabc11077abbfc0\">transition-timing-function 时间曲线</li><li data-lake-id=\"575794f7d4684f6259c29206ccedabf6\">transition-delay 延迟</li></ul><p data-lake-id=\"612211629e85b98609d90826ea20325a\"><br /></p><h2 data-lake-id=\"06a9445aab7028fb1f12efd2578d6151\" id=\"9DGEW\">颜色</h2><p data-lake-id=\"1f8225303b66ff5cc7e2916481970c2d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png%22%2C%22originWidth%22%3A742%2C%22originHeight%22%3A596%2C%22name%22%3A%22image.png%22%2C%22size%22%3A98359%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A26.683645%2C%22y%22%3A14.646871%2C%22width%22%3A129.66880500000002%2C%22height%22%3A70.125959%2C%22text%22%3A%22%E9%A2%9C%E8%89%B2%22%7D%2C%7B%22x%22%3A101.35174%2C%22y%22%3A204.58398%2C%22width%22%3A59.087699999999984%2C%22height%22%3A20.12769%2C%22text%22%3A%22100%25%22%7D%2C%7B%22x%22%3A100.902214%2C%22y%22%3A483.64798%2C%22width%22%3A33.893536%2C%22height%22%3A20.178470000000004%2C%22text%22%3A%220%25%22%7D%2C%7B%22x%22%3A594.42596%2C%22y%22%3A554.78265%2C%22width%22%3A72.63037999999995%2C%22height%22%3A20.115120000000047%2C%22text%22%3A%22760nm%22%7D%2C%7B%22x%22%3A181.47874%2C%22y%22%3A555.2976%2C%22width%22%3A72.01172000000003%2C%22height%22%3A19.8519%2C%22text%22%3A%22400nm%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E9%A2%9C%E8%89%B2%20100%25%200%25%20760nm%20400nm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A371%2C%22height%22%3A298%7D\"></card></p><p data-lake-id=\"0699c730173f887f3282fba28d87c692\">在自然界中我们看到的光都是混色光，极少有纯色光（激光笔可以达到纯色光）</p><p data-lake-id=\"e034abc8398102787617629e3a5a0e04\">正常人类看到的光的波长在 400~760nm。</p><p data-lake-id=\"e310fcc76af351eb9bd9bb3b4071b92c\"><br /></p><p data-lake-id=\"15881631abfa4a3c2f52da8e8c966327\">人眼内有三种<span style=\"background-color: #FADB14;\">视锥细胞</span>，这三种细胞分别用来识别三种颜色：红绿蓝（RGB）</p><p data-lake-id=\"70fc2950733033eceef7959c2fc524f2\"><br /></p><h3 data-lake-id=\"70ad7b21fc3d1be47148e0c3653a1024\" id=\"ykMB1\">HSL 和 HSV</h3><ul data-lake-id=\"59a793bc2925199c5a64789e5b7a68d3\"><li data-lake-id=\"4bb1c3efc0e0b7c9f828e538e390daf2\">Hue： 色相（将颜色分成一个色盘，然后我们通过制定一个色盘中的角度，来决定他的颜色）</li><li data-lake-id=\"80963e4ec549aff505f5e2642db0f7af\">Ssturation：纯度</li><li data-lake-id=\"bb14e6c0b2c8ab993bea75dc715af443\">Lightness： 亮度（到达100是白色，到达0是黑色，中间的才是纯色）</li><li data-lake-id=\"111d0127810eb3b332520f12d33faef0\">Value：明度 （value到达100%时，就相当于是一个纯色）</li></ul><p data-lake-id=\"1a68b101ce30e4a1a6bd21d155df9813\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1609075457053-ef9ba5ca-8060-40bf-a17b-f4a2c5f4f7ce.png%22%2C%22originWidth%22%3A640%2C%22originHeight%22%3A250%2C%22name%22%3A%22image.png%22%2C%22size%22%3A189658%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A266.12677%2C%22y%22%3A90.45693%2C%22width%22%3A26.657429999999977%2C%22height%22%3A26.657429999999977%2C%22text%22%3A%22Lightness%22%7D%2C%7B%22x%22%3A161.0741%2C%22y%22%3A106.33126%2C%22width%22%3A92.52864000000002%2C%22height%22%3A40.9979%2C%22text%22%3A%22Saturation%22%7D%2C%7B%22x%22%3A481.15048%2C%22y%22%3A106.48167%2C%22width%22%3A94.77782000000002%2C%22height%22%3A41.87201%2C%22text%22%3A%22Saturation%22%7D%2C%7B%22x%22%3A589.8894%2C%22y%22%3A114.9932%2C%22width%22%3A23.74804999999992%2C%22height%22%3A23.74804999999992%2C%22text%22%3A%22Value%22%7D%2C%7B%22x%22%3A348.35%2C%22y%22%3A120.81153%2C%22width%22%3A29.401129999999966%2C%22height%22%3A29.401129999999966%2C%22text%22%3A%22%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Lightness%20Saturation%20Saturation%20Value%20%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A607%2C%22height%22%3A237%7D\"></card></p><p data-lake-id=\"bac57e61863afd46b8dc37c4ab517f60\">（HSL： W3C采用的标准）</p><p data-lake-id=\"7073225ff867cf2ade73fe2621dbfe66\"><br /></p><h2 data-lake-id=\"27ad5e50fee1e1ce38fad39e8945d964\" id=\"AcVAZ\">绘制</h2><h3 data-lake-id=\"062ad7c37df2fcea1187d9cdc26b646e\" id=\"DIK7I\">几何图形</h3><ul data-lake-id=\"de26c4253d547a7f4fde8f280bb35bbf\"><li data-lake-id=\"432153cf23ce6f37cd9afdd8b5678e60\">border</li><li data-lake-id=\"f1cacbd5c87fb827f299ad833d2f5295\">box-shadow</li><li data-lake-id=\"e2e5621cf3b3d2b067ddaf693fc0083a\">border-radius</li></ul><h3 data-lake-id=\"ac9537d64da31c135aaf32e2607b6c5f\" id=\"4VjLk\">文字</h3><ul data-lake-id=\"bbac33545b5b0a0fe321a5be294f2810\"><li data-lake-id=\"9f939d8f626d9eae91eb941d872fe00b\">font</li><li data-lake-id=\"0fc342028b2635920a6cf183f29247c0\">text-decoration</li></ul><h3 data-lake-id=\"d30a0cf91104dd2f5d6883f8a5d09f95\" id=\"DWufZ\">位图</h3><ul data-lake-id=\"231b9a2d0e510b49f712711181c1354f\"><li data-lake-id=\"ca3290dcc5ab38bfebe8f81e8bc321d3\">background-image</li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-27T13:33:51.000Z",
    "deleted_at": null,
    "created_at": "2020-12-27T13:02:11.000Z",
    "updated_at": "2020-12-27T13:33:53.000Z",
    "published_at": "2020-12-27T13:33:51.000Z",
    "first_published_at": "2020-12-27T13:33:51.000Z",
    "word_count": 354,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1609074986965-f439f290-534a-4e1c-ab66-5c49265301b7.png",
    "description": "Animation@keyframes 定义可以使用百分比表示进度也可以使用from、to@keyframes mykf{     form{     background: red   }   to{     background: blue   }animation：使用animation...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23847780,
    "slug": "hn2asq",
    "title": "CSS排版",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"HLdXA\"></a>\n## 盒（Box)\n> HTML代码中可以书写开始标签，结束标签，和自封闭标签\n> 一对起止标签，表示一个元素\n> DOM树中存储的是元素和其他类型的节点（Node)\n> CSS选择器选中的是元素\n> CSS选择器选中的元素，在排版时可能产生多个盒\n> 排版和渲染的基本单位是盒\n\n<a name=\"2pcYl\"></a>\n### 盒模型\n![IMG_F9E013A8321B-1.jpeg](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg#align=left&display=inline&height=316&margin=%5Bobject%20Object%5D&name=IMG_F9E013A8321B-1.jpeg&originHeight=962&originWidth=1195&size=1274496&status=done&style=none&width=393)<br />盒模型分为两种：\n> 可以通过box-sizing来设置不同的盒模型\n> box-sizing默认值是content-box\n\n1. 怪异盒模型（border-box)： `box-width = content + padding + border` \n1. 标准盒模型 (content-box)： `box-width = content` \n> 标准盒模型在增加padding和border的宽度时，会保持原有的box-width而去对应减少content的width的所占空间\n\n<a name=\"l60lN\"></a>\n## 正常流\n正常流的排版：\n\n1. 收集盒和文字进行计算\n1. 计算盒和文字在行中的排布\n1. 计算行的排布\n\nIFC：行内级格式化上下文（从左到右排列）<br />BFC：块级格式化上下（从上到下排列）<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608591685793-2521eba0-5803-466b-89a6-763608883ac7.png#align=left&display=inline&height=960&margin=%5Bobject%20Object%5D&name=image.png&originHeight=960&originWidth=2226&size=303741&status=done&style=none&width=2226)<br />\n\n<a name=\"cZ32k\"></a>\n## 正常流的行级排布（IFC）\n<a name=\"8QoBa\"></a>\n### Baseline\n下图中黄色的线就是基线，文字是基于**基线**来对齐的。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592017818-80fa1342-32b6-4329-8d26-f87285f9454b.png#align=left&display=inline&height=62&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=738&size=149484&status=done&style=none&width=185)\n<a name=\"5GopP\"></a>\n### Text\n底层软件定义的文字<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592161826-fb417db4-a214-46c9-a569-a667cbf53176.png#align=left&display=inline&height=169&margin=%5Bobject%20Object%5D&name=image.png&originHeight=676&originWidth=1034&size=367041&status=done&style=none&width=259)\n\n- origin：基线的原点\n- advance：排版中文字占据的空间\n- bearingX：文字之间的间距\n- yMin：文字基线距离文字底部的距离\n\n\n\n<a name=\"imnex\"></a>\n### 行模型\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592669392-5b688eca-283f-4dcb-a9c6-e2d8b49d9a05.png#align=left&display=inline&height=210&margin=%5Bobject%20Object%5D&name=image.png&originHeight=838&originWidth=1276&size=241489&status=done&style=none&width=319)\n\n- base-line：基线，文字默认对齐的线\n- text-top、text-bottom：文字的上下边缘线\n> 只要字体的大小不变，text-top和text-bottom就是不变的\n> 如果用了多种字体混排的话，那么这个文字的上下边缘就是有font-size最大的字体决定的。\n> 我们基本可以认为这两条线是固定不变的\n\n- line-top、line-bottom：行的上下边缘线\n> 这两条线的产生是因为行高大于文字的高度\n\n<a name=\"fq556\"></a>\n### 文字和盒混排时产生的问题\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608593084262-c9db1a4c-cc9d-4337-a842-b06660122bd6.png#align=left&display=inline&height=238&margin=%5Bobject%20Object%5D&name=image.png&originHeight=950&originWidth=1854&size=397540&status=done&style=none&width=464)<br />当一个行内盒是按照text-bottom来对齐的话，它就会撑开该行的高度，造成偏移的情况。\n> 当没有蓝色的行内盒的时候，只有文字那么该盒是只有text-top和text-bottom的高度时，文字看起来排版就比较正常，但是当蓝色盒子出现的时候撑开了line-top，导致该行整体高度都被撑开了，那么文字相较之前的就会看起来偏下了许多。\n\nEg：\n```html\n<div style=\"font-size: 50px; line-height: 100px; background-color: bisque\">\n      <span>Hello good 国</span>\n      <div\n        style=\"\n          display: inline-block;\n          line-height: 70px;\n          width: 100px;\n          height: 150px;\n          background-color: cadetblue;\n        \">\n  \t\t</div>\n</div>\n```\n效果如下：<br />文字正常情况按照基线对齐：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594613929-d627e469-a14d-43ac-8262-8bf03832cfc2.png#align=left&display=inline&height=121&margin=%5Bobject%20Object%5D&name=image.png&originHeight=242&originWidth=722&size=51691&status=done&style=none&width=361)<br />当我们添加一个行内盒的时候：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594091726-0caea8c5-9407-453f-b4b4-e5c209ff6a65.png#align=left&display=inline&height=93&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=1092&size=82717&status=done&style=none&width=273)<br />蓝色的线是line-top，就被撑开了（该行的整体高度被撑开）。绿色的线是text-top，行内盒不会影响text的边缘线高度。<br />当我们在行内盒添加上一个文字时：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594403003-766b921d-5f40-4926-abfc-4ecfbc4da80c.png#align=left&display=inline&height=90&margin=%5Bobject%20Object%5D&name=image.png&originHeight=358&originWidth=1006&size=87363&status=done&style=none&width=252)<br />这种情况就相当于，当一个行内盒中有了文字之后，那么对齐的时候就会按照文字的基线去对齐<br />当我们呢在行内盒再添加一个换行和文字时：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594527028-d79e9601-b55a-46f6-bf8c-42d524096579.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=354&originWidth=964&size=94340&status=done&style=none&width=241)<br />会按照最下面文字的基线去进行对齐<br />上面的演示代码：\n```html\n <div style=\"font-size: 50px; line-height: 100px; background-color: bisque\">\n      <!-- line-top -->\n      <div\n        style=\"\n          vertical-align: top;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: blue\"></div>\n      </div>\n      <!-- text-top -->\n      <div\n        style=\"\n          vertical-align: text-top;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: green\"></div>\n      </div>\n      <!-- 基线 -->\n      <div\n        style=\"\n          vertical-align: baseline;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: red\"></div>\n      </div>\n      <!-- text-bottom -->\n      <div\n        style=\"\n          vertical-align: text-bottom;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: green\"></div>\n      </div>\n      <!-- line-bottom -->\n      <div\n        style=\"\n          vertical-align: bottom;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: blue\"></div>\n      </div>\n      <span>Hello good 国</span>\n      <div\n        style=\"\n          display: inline-block;\n          line-height: 70px;\n          width: 100px;\n          height: 150px;\n          background-color: cadetblue;\n        \"\n      >\n        M\n        <br />\n        N\n      </div>\n    </div>\n```\n<a name=\"kcqXf\"></a>\n## 正常流的块级排布（BFC)\n<a name=\"60JPT\"></a>\n### float 和clear\nfloat：\n\n- 严格来说是已经脱离文档流的，他在排列时可以完成图文环绕排的形式。\n- 多个float元素会依次排列，不会占据对方的空间\n- ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854033824-58eec322-5bd5-4d17-a5b4-c8d43b51202c.png#align=left&display=inline&height=66&margin=%5Bobject%20Object%5D&name=image.png&originHeight=264&originWidth=1400&size=15569&status=done&style=none&width=350)\n- float会造成重排的问题\n\n\n<br />clear：与其说是清除浮动，不如说是在某个方向上找个干净的地方去完成浮动的排列\n\n- 与上面同样的代码，只要给第二个float的红色div设置 `clear: right` 就可以实现下面这种效果\n- ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854110759-07d731d4-93c2-4726-97bf-81e708a9a0f3.png#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&name=image.png&originHeight=242&originWidth=1405&size=14317&status=done&style=none&width=351)\n- 所以说clear更像是在右面找了一个干净的地方进行浮动排列\n\n\n\n<a name=\"saUEj\"></a>\n### margin折叠\n这种现象只会发生在正常流中，在正常流中只有BFC才会有！\n\n上下两个块级元素都有margin的情况下，在排列的时候会选取一个margin的最大值作为其最终排版的结果<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854541877-e2831a64-ad81-4f32-a22f-9b377bd8495f.png#align=left&display=inline&height=188&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1212&originWidth=1650&size=172874&status=done&style=none&width=256)  =====>  ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854549792-733a8918-101f-4602-bcbf-2c216a5fe612.png#align=left&display=inline&height=188&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1098&originWidth=1714&size=173370&status=done&style=none&width=294)\n\n<a name=\"bVVTe\"></a>\n### BFC合并\n\n- Block Container： 里面有BFC\n   - 能容纳正常流的盒，里面就有BFC\n- BLock-level Box： 外面有BFC的\n- Block Box = Block container + Block-level Box：里外都有BFC的\n\n<br />\n\n",
    "body_draft": "<a name=\"HLdXA\"></a>\n## 盒（Box)\n> HTML代码中可以书写开始标签，结束标签，和自封闭标签\n> 一对起止标签，表示一个元素\n> DOM树中存储的是元素和其他类型的节点（Node)\n> CSS选择器选中的是元素\n> CSS选择器选中的元素，在排版时可能产生多个盒\n> 排版和渲染的基本单位是盒\n\n<a name=\"2pcYl\"></a>\n### 盒模型\n![IMG_F9E013A8321B-1.jpeg](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg#align=left&display=inline&height=316&margin=%5Bobject%20Object%5D&name=IMG_F9E013A8321B-1.jpeg&originHeight=962&originWidth=1195&size=1274496&status=done&style=none&width=393)<br />盒模型分为两种：\n> 可以通过box-sizing来设置不同的盒模型\n> box-sizing默认值是content-box\n\n1. 怪异盒模型（border-box)： `box-width = content + padding + border` \n1. 标准盒模型 (content-box)： `box-width = content` \n> 标准盒模型在增加padding和border的宽度时，会保持原有的box-width而去对应减少content的width的所占空间\n\n<a name=\"l60lN\"></a>\n## 正常流\n正常流的排版：\n\n1. 收集盒和文字进行计算\n1. 计算盒和文字在行中的排布\n1. 计算行的排布\n\nIFC：行内级格式化上下文（从左到右排列）<br />BFC：块级格式化上下（从上到下排列）<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608591685793-2521eba0-5803-466b-89a6-763608883ac7.png#align=left&display=inline&height=960&margin=%5Bobject%20Object%5D&name=image.png&originHeight=960&originWidth=2226&size=303741&status=done&style=none&width=2226)<br />\n\n<a name=\"cZ32k\"></a>\n## 正常流的行级排布（IFC）\n<a name=\"8QoBa\"></a>\n### Baseline\n下图中黄色的线就是基线，文字是基于**基线**来对齐的。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592017818-80fa1342-32b6-4329-8d26-f87285f9454b.png#align=left&display=inline&height=62&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=738&size=149484&status=done&style=none&width=185)\n<a name=\"5GopP\"></a>\n### Text\n底层软件定义的文字<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592161826-fb417db4-a214-46c9-a569-a667cbf53176.png#align=left&display=inline&height=169&margin=%5Bobject%20Object%5D&name=image.png&originHeight=676&originWidth=1034&size=367041&status=done&style=none&width=259)\n\n- origin：基线的原点\n- advance：排版中文字占据的空间\n- bearingX：文字之间的间距\n- yMin：文字基线距离文字底部的距离\n\n\n\n<a name=\"imnex\"></a>\n### 行模型\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592669392-5b688eca-283f-4dcb-a9c6-e2d8b49d9a05.png#align=left&display=inline&height=210&margin=%5Bobject%20Object%5D&name=image.png&originHeight=838&originWidth=1276&size=241489&status=done&style=none&width=319)\n\n- base-line：基线，文字默认对齐的线\n- text-top、text-bottom：文字的上下边缘线\n> 只要字体的大小不变，text-top和text-bottom就是不变的\n> 如果用了多种字体混排的话，那么这个文字的上下边缘就是有font-size最大的字体决定的。\n> 我们基本可以认为这两条线是固定不变的\n\n- line-top、line-bottom：行的上下边缘线\n> 这两条线的产生是因为行高大于文字的高度\n\n<a name=\"fq556\"></a>\n### 文字和盒混排时产生的问题\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608593084262-c9db1a4c-cc9d-4337-a842-b06660122bd6.png#align=left&display=inline&height=238&margin=%5Bobject%20Object%5D&name=image.png&originHeight=950&originWidth=1854&size=397540&status=done&style=none&width=464)<br />当一个行内盒是按照text-bottom来对齐的话，它就会撑开该行的高度，造成偏移的情况。\n> 当没有蓝色的行内盒的时候，只有文字那么该盒是只有text-top和text-bottom的高度时，文字看起来排版就比较正常，但是当蓝色盒子出现的时候撑开了line-top，导致该行整体高度都被撑开了，那么文字相较之前的就会看起来偏下了许多。\n\nEg：\n```html\n<div style=\"font-size: 50px; line-height: 100px; background-color: bisque\">\n      <span>Hello good 国</span>\n      <div\n        style=\"\n          display: inline-block;\n          line-height: 70px;\n          width: 100px;\n          height: 150px;\n          background-color: cadetblue;\n        \">\n  \t\t</div>\n</div>\n```\n效果如下：<br />文字正常情况按照基线对齐：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594613929-d627e469-a14d-43ac-8262-8bf03832cfc2.png#align=left&display=inline&height=121&margin=%5Bobject%20Object%5D&name=image.png&originHeight=242&originWidth=722&size=51691&status=done&style=none&width=361)<br />当我们添加一个行内盒的时候：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594091726-0caea8c5-9407-453f-b4b4-e5c209ff6a65.png#align=left&display=inline&height=93&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=1092&size=82717&status=done&style=none&width=273)<br />蓝色的线是line-top，就被撑开了（该行的整体高度被撑开）。绿色的线是text-top，行内盒不会影响text的边缘线高度。<br />当我们在行内盒添加上一个文字时：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594403003-766b921d-5f40-4926-abfc-4ecfbc4da80c.png#align=left&display=inline&height=90&margin=%5Bobject%20Object%5D&name=image.png&originHeight=358&originWidth=1006&size=87363&status=done&style=none&width=252)<br />这种情况就相当于，当一个行内盒中有了文字之后，那么对齐的时候就会按照文字的基线去对齐<br />当我们呢在行内盒再添加一个换行和文字时：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594527028-d79e9601-b55a-46f6-bf8c-42d524096579.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=354&originWidth=964&size=94340&status=done&style=none&width=241)<br />会按照最下面文字的基线去进行对齐<br />上面的演示代码：\n```html\n <div style=\"font-size: 50px; line-height: 100px; background-color: bisque\">\n      <!-- line-top -->\n      <div\n        style=\"\n          vertical-align: top;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: blue\"></div>\n      </div>\n      <!-- text-top -->\n      <div\n        style=\"\n          vertical-align: text-top;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: green\"></div>\n      </div>\n      <!-- 基线 -->\n      <div\n        style=\"\n          vertical-align: baseline;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: red\"></div>\n      </div>\n      <!-- text-bottom -->\n      <div\n        style=\"\n          vertical-align: text-bottom;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: green\"></div>\n      </div>\n      <!-- line-bottom -->\n      <div\n        style=\"\n          vertical-align: bottom;\n          width: 1px;\n          height: 1px;\n          display: inline-block;\n        \"\n      >\n        <div style=\"width: 100vw; height: 1px; background-color: blue\"></div>\n      </div>\n      <span>Hello good 国</span>\n      <div\n        style=\"\n          display: inline-block;\n          line-height: 70px;\n          width: 100px;\n          height: 150px;\n          background-color: cadetblue;\n        \"\n      >\n        M\n        <br />\n        N\n      </div>\n    </div>\n```\n<a name=\"kcqXf\"></a>\n## 正常流的块级排布（BFC)\n<a name=\"60JPT\"></a>\n### float 和clear\nfloat：\n\n- 严格来说是已经脱离文档流的，他在排列时可以完成图文环绕排的形式。\n- 多个float元素会依次排列，不会占据对方的空间\n- ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854033824-58eec322-5bd5-4d17-a5b4-c8d43b51202c.png#align=left&display=inline&height=66&margin=%5Bobject%20Object%5D&name=image.png&originHeight=264&originWidth=1400&size=15569&status=done&style=none&width=350)\n- float会造成重排的问题\n\n\n<br />clear：与其说是清除浮动，不如说是在某个方向上找个干净的地方去完成浮动的排列\n\n- 与上面同样的代码，只要给第二个float的红色div设置 `clear: right` 就可以实现下面这种效果\n- ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854110759-07d731d4-93c2-4726-97bf-81e708a9a0f3.png#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&name=image.png&originHeight=242&originWidth=1405&size=14317&status=done&style=none&width=351)\n- 所以说clear更像是在右面找了一个干净的地方进行浮动排列\n\n\n\n<a name=\"saUEj\"></a>\n### margin折叠\n这种现象只会发生在正常流中，在正常流中只有BFC才会有！\n\n上下两个块级元素都有margin的情况下，在排列的时候会选取一个margin的最大值作为其最终排版的结果<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854541877-e2831a64-ad81-4f32-a22f-9b377bd8495f.png#align=left&display=inline&height=188&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1212&originWidth=1650&size=172874&status=done&style=none&width=256)  =====>  ![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854549792-733a8918-101f-4602-bcbf-2c216a5fe612.png#align=left&display=inline&height=188&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1098&originWidth=1714&size=173370&status=done&style=none&width=294)\n\n<a name=\"bVVTe\"></a>\n### BFC合并\n\n- Block Container： 里面有BFC\n   - 能容纳正常流的盒，里面就有BFC\n- BLock-level Box： 外面有BFC的\n- Block Box = Block container + Block-level Box：里外都有BFC的\n\n<br />\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B69%2C0%2C1%5D%2C%5B69%2C0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"ee4fa24dc36265dabb5baa6d008ffe7a\" id=\"HLdXA\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">盒（Box)</h2><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"e3feebdb7a9d8cdaf478b33bf7ee8abb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">HTML代码中可以书写开始<span style=\"background-color: #FADB14;\">标签</span>，结束<span style=\"background-color: #FADB14;\">标签</span>，和自封闭<span style=\"background-color: #FADB14;\">标签</span></p><p data-lake-id=\"2d9bc18fea39d93c7c68b01a95f75b09\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一对起止标签，表示一个<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"c66530c1fc1e7bc4a539b3f4ad0e52f3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">DOM树中存储的是<span style=\"background-color: #FADB14;\">元素</span>和其他类型的<span style=\"background-color: #FADB14;\">节点（Node)</span></p><p data-lake-id=\"309cc2a6924f5b5c79c6d52967a1026b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">CSS选择器选中的是<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"773c5613e968aa25e3dadfb391786fff\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">CSS选择器选中的<span style=\"background-color: #FADB14;\">元素</span>，在排版时可能产生多个<span style=\"background-color: #FADB14;\">盒</span></p><p data-lake-id=\"a451f21ae50731b4f44f6b29a7930ae6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">排版和渲染的基本单位是<span style=\"background-color: #FADB14;\">盒</span></p></blockquote><h3 data-lake-id=\"d531ffa273805084632f8f75ea692dfe\" id=\"2pcYl\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">盒模型</h3><p data-lake-id=\"5f6be85b495dcd18499abf31722cccba\" style=\"text-align: center; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"IMG_F9E013A8321B-1.jpeg\" title=\"IMG_F9E013A8321B-1.jpeg\" data-height=\"316px\" style=\"visibility: visible; width: 393px;\"></span></p><p data-lake-id=\"76f6ceac7930e536f6393edad8f7ae7a\" style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">盒模型分为两种：</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"542d31b31f40fa63a940a6ea19a1d288\" style=\"text-align: left; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以通过box-sizing来设置不同的盒模型</p><p data-lake-id=\"70775e60f55cc3e48a11fc7650274a16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">box-sizing默认值是content-box</p></blockquote><ol data-lake-id=\"9826498f29ec772e969890bf13533295\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"33bcb43834aa24733c39f3e1fa1ff54c\">怪异盒模型（border-box)： <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">box-width = content + padding + border</code>&nbsp;</li><li data-lake-id=\"88ea1bfa0c550f8575ef13b424c41b24\">标准盒模型 (content-box)： <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">box-width = content</code>&nbsp;</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"111ad4cef9b30865ce5b18b2847c3ed3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">标准盒模型在增加padding和border的宽度时，会保持原有的box-width而去对应减少content的width的所占空间</p></blockquote><h2 data-lake-id=\"436902683f9e79cd309d1489eb1235f0\" id=\"l60lN\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">正常流</h2><p data-lake-id=\"31c5a56bce2a08f6dece5c8b35e532a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">正常流的排版：</p><ol data-lake-id=\"ad98ea1c72ed8e8c86450a10bcd6da36\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"89f4fdff4fdafc405be61bc58a946e02\">收集盒和文字进行计算</li><li data-lake-id=\"bcb4f8ca8a4e7c809f2b4489c112973b\">计算盒和文字在行中的排布</li><li data-lake-id=\"2d9017a07b89fe6b3e36f35bee4c9d68\">计算行的排布</li></ol><p data-lake-id=\"2a5cb81c0bee8cccb21953433a99a349\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">IFC</span>：行内级格式化上下文（从左到右排列）</p><p data-lake-id=\"497df7f543d70385d352e6881102bab7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">BFC</span>：块级格式化上下（从上到下排列）</p><p data-lake-id=\"c0bb66e0610088417d10a0b3e019bd43\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608591685793-2521eba0-5803-466b-89a6-763608883ac7.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"960px\" style=\"visibility: visible; width: 2226px;\"></span></p><p data-lake-id=\"b6ee918d26c7425401b7d6d43dd54906\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"90b2f6b02c7fc72478e5743e61bac4c4\" id=\"cZ32k\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">正常流的行级排布（IFC）</h2><h3 data-lake-id=\"990ff467348b6812cd26cdcca90d06f7\" id=\"8QoBa\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Baseline</h3><p data-lake-id=\"aeef5c79f47903f00c3b271d53332534\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下图中黄色的线就是基线，文字是基于<strong>基线</strong>来对齐的。</p><p data-lake-id=\"00d69c203026f3b48a1d95a1a418b3fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592017818-80fa1342-32b6-4329-8d26-f87285f9454b.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"62px\" style=\"visibility: visible; width: 185px;\"></span></p><h3 data-lake-id=\"f961b708b0e11037d2ac4d39308e1283\" id=\"5GopP\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Text</h3><p data-lake-id=\"104d53bbd2b6b62f011159186748a6e4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">底层软件定义的文字</p><p data-lake-id=\"81e880fa08c3872763487ca6fcc067c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592161826-fb417db4-a214-46c9-a569-a667cbf53176.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"169px\" style=\"visibility: visible; width: 259px;\"></span></p><ul data-lake-id=\"abec3d76eefe3a9a5a81d0377daefee0\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"d016ea295ee3c577a1730aea4f1f6615\">origin：基线的原点</li><li data-lake-id=\"2da428e0d58f9873b51d15e94fe0c28e\">advance：排版中文字占据的空间</li><li data-lake-id=\"a1ffab6faa547175ece8b351aaa8476d\">bearingX：文字之间的间距</li><li data-lake-id=\"07c19f4917f3d932da0401f01d540f6e\">yMin：文字基线距离文字底部的距离</li></ul><p data-lake-id=\"00a7d93735a74085217ccf89d785d203\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"4252b6ebbe95970c40c5711da2530a0d\" id=\"imnex\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">行模型</h3><p data-lake-id=\"aaa8836babff6796a2a145c18934bdfd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608592669392-5b688eca-283f-4dcb-a9c6-e2d8b49d9a05.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"210px\" style=\"visibility: visible; width: 319px;\"></span></p><ul data-lake-id=\"2899a490b28bba10d2a312856631eee0\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"47516b40ae813dbebaaf8ced1bbe451c\">base-line：基线，文字默认对齐的线</li><li data-lake-id=\"29a9db3329ba90b022efcbf44f07c0bd\">text-top、text-bottom：文字的上下边缘线</li></ul><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"17ceae016cfa3a91b473d3f73ea5dfbe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">只要字体的大小不变，text-top和text-bottom就是不变的</p><p data-lake-id=\"ac78a448c7bc007e209d9f6a15fb840d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果用了多种字体混排的话，那么这个文字的上下边缘就是有font-size最大的字体决定的。</p><p data-lake-id=\"5e3e33832f06cdc256542f009652286e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们基本可以认为这两条线是固定不变的</p></blockquote><ul data-lake-id=\"f488d4004c1b37cbe114507badb1c6bc\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"d0191076af18ab0ea3f536ec61f412a4\">line-top、line-bottom：行的上下边缘线</li></ul><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"5b07abf33c836dc7f6be9dd1a350d6e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这两条线的产生是因为行高大于文字的高度</p></blockquote><h3 data-lake-id=\"46447e35586e2e7a5acad36fe2caa7f8\" id=\"fq556\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">文字和盒混排时产生的问题</h3><p data-lake-id=\"ff4366c3d4ec220e767b773c50713771\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608593084262-c9db1a4c-cc9d-4337-a842-b06660122bd6.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"238px\" style=\"visibility: visible; width: 464px;\"></span></p><p data-lake-id=\"f07c55dec92498ce36a8b9c9b561a7e5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当一个行内盒是按照text-bottom来对齐的话，它就会撑开该行的高度，造成偏移的情况。</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"1c225f1f3b0aa8e4e467a0d34193ab80\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当没有蓝色的行内盒的时候，只有文字那么该盒是只有text-top和text-bottom的高度时，文字看起来排版就比较正常，但是当蓝色盒子出现的时候撑开了line-top，导致该行整体高度都被撑开了，那么文字相较之前的就会看起来偏下了许多。</p></blockquote><p data-lake-id=\"0b86a4d112d07d3621a63fd53098194d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Eg：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"SdkN0\" class=\"lake-card-margin\" data-language=\"html\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"font-size: 50px; line-height: 100px; background-color: bisque\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">span</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>Hello good 国<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">span</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">line-height: 70px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 100px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 150px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">background-color: cadetblue;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"12c398a7cc6c88f684a896355e5652cf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>效果如下：</span></p><p data-lake-id=\"9efda07c9fd175e684502aa834dcb41b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">文字正常情况按照基线对齐：</p><p data-lake-id=\"cfbe2e7516594b274b631a9d3e058b8c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594613929-d627e469-a14d-43ac-8262-8bf03832cfc2.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"121px\" style=\"visibility: visible; width: 361px;\"></span></span></p><p data-lake-id=\"a62520c479c1d20f128a092addb7e1b3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">当我们添加一个行内盒的时候：</span></p><p data-lake-id=\"84db3b90177bc0c9f0ff3c9cc45ddb4e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594091726-0caea8c5-9407-453f-b4b4-e5c209ff6a65.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"93px\" style=\"visibility: visible; width: 273px;\"></span></span></p><p data-lake-id=\"df369daf0ffa9f4619c9be9a29d58069\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>蓝色的线是line-top，就被撑开了（该行的整体高度被撑开）。绿色的线是text-top，行内盒不会影响text的边缘线高度。</span></p><p data-lake-id=\"8a6b74b2949c6a38898a368c124fdbb6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">当我们在行内盒添加上一个文字时：</span></p><p data-lake-id=\"0d720a0cd8158538b45c7530de8ee4cd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594403003-766b921d-5f40-4926-abfc-4ecfbc4da80c.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"90px\" style=\"visibility: visible; width: 252px;\"></span></span></p><p data-lake-id=\"6a3dad1882ec06101ab123f1eb237917\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种情况就相当于，当一个行内盒中有了文字之后，那么对齐的时候就会按照文字的基线去对齐</p><p data-lake-id=\"31264fc477bca0498f491f44969686f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">当我们呢在行内盒再添加一个换行和文字时：</span></p><p data-lake-id=\"3b33f1324320a8b4c0303d45d3ea4960\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608594527028-d79e9601-b55a-46f6-bf8c-42d524096579.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"89px\" style=\"visibility: visible; width: 241px;\"></span></span></p><p data-lake-id=\"79d94ba5e584b0c9830fd8fdb1e5a335\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">会按照最下面文字的基线去进行对齐</p><p data-lake-id=\"4cab90d438e454a3893cbe88840ec800\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上面的演示代码：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Qp1GI\" class=\"lake-card-margin\" data-language=\"html\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"font-size: 50px; line-height: 100px; background-color: bisque\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;!-- line-top --&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vertical-align: top;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"width: 100vw; height: 1px; background-color: blue\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;!-- text-top --&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vertical-align: text-top;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"width: 100vw; height: 1px; background-color: green\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;!-- 基线 --&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vertical-align: baseline;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"width: 100vw; height: 1px; background-color: red\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;!-- text-bottom --&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vertical-align: text-bottom;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"width: 100vw; height: 1px; background-color: green\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;!-- line-bottom --&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">vertical-align: bottom;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 1px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"width: 100vw; height: 1px; background-color: blue\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">span</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>Hello good 国<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">span</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">style</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">display: inline-block;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">line-height: 70px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">width: 100px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">height: 150px;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">          <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">background-color: cadetblue;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        M\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">br</span> <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        N\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><h2 data-lake-id=\"28ebe5b82533f718af9f3d5f722416c7\" id=\"kcqXf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">正常流的块级排布（BFC)</h2><h3 data-lake-id=\"77709b31fdbb87852ef13afc05ab1914\" id=\"60JPT\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">float 和clear</h3><p data-lake-id=\"311793ee46e26d4f0b1a3c2b8247da9d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">float</span>：</p><ul data-lake-id=\"00505bc7c85f8b9b1ec3e0de5704b0f7\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"0958c6d9aeb834e7568681bcae716198\">严格来说是已经脱离文档流的，他在排列时可以完成图文环绕排的形式。</li><li data-lake-id=\"e4a2dbee9e401c106007d6fdc6c6af97\">多个float元素会依次排列，不会占据对方的空间</li><li data-lake-id=\"330749b93be053d2a72febc5607ced05\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854033824-58eec322-5bd5-4d17-a5b4-c8d43b51202c.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"66px\" style=\"visibility: visible; width: 350px;\"></span></li><li data-lake-id=\"6c3f9014b92318b0c528b3c6f545e09d\">float会造成重排的问题</li></ul><p data-lake-id=\"20c9cd8f492d4b6b32bcf1ca4d6396f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"45fab0732fbdc995e31300d95f75989e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">clear：</span>与其说是清除浮动，不如说是在某个方向上找个干净的地方去完成浮动的排列</p><ul data-lake-id=\"edb795a9acab708540dba4f9a5da1aa9\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"79d213fec98ca5da5b3a8eff5821125b\">与上面同样的代码，只要给第二个float的红色div设置 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">clear: right</code>&nbsp;就可以实现下面这种效果</li><li data-lake-id=\"3bb292bcec03342d9dbfe694ab58405d\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854110759-07d731d4-93c2-4726-97bf-81e708a9a0f3.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"60px\" style=\"visibility: visible; width: 351px;\"></span></li><li data-lake-id=\"3577ac1f9104157893f90d99663ad0b4\">所以说clear更像是在右面找了一个干净的地方进行浮动排列</li></ul><p data-lake-id=\"944cf701035b8bc4df0a9c9d77b41e04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"0dd1e6177e4c1a3fbb865fbda8bd8127\" id=\"saUEj\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">margin折叠</h3><p data-lake-id=\"5e0b09db878ebad5facc05661d1933c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\">这种现象只会发生在正常流中，在正常流中只有BFC才会有！</span></p><p data-lake-id=\"f661d97057bb4f0350b7a199bc9a56aa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\"><br></span></p><p data-lake-id=\"56b1cd0cd234e97d9e695625fed5ffe0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上下两个块级元素都有margin的情况下，在排列的时候会选取一个margin的最大值作为其最终排版的结果</p><p data-lake-id=\"d55ce2953a338d43ac46d6555ce54aca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854541877-e2831a64-ad81-4f32-a22f-9b377bd8495f.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"188px\" style=\"visibility: visible; width: 256px;\"></span><span>&nbsp; =====&gt;  </span><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608854549792-733a8918-101f-4602-bcbf-2c216a5fe612.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"188px\" style=\"visibility: visible; width: 294px;\"></span></p><p data-lake-id=\"47d3d5e2ff236c5a3c0b31d5aea6c333\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><br></span></p><h3 data-lake-id=\"4606fc0695c168fd40c74f7a03d02085\" id=\"bVVTe\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">BFC合并</h3><ul data-lake-id=\"712395906bd111ca0580f01a2a763b31\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"4bbcf4d264fafaf79859cadcb02a83a1\">Block Container： 里面有BFC</li></ul><ul data-lake-id=\"90c86917a7380881380f58dd50e8b834\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"b31ac4e56ca3523a8f4e8df5d8e7dfaa\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"b0ef805b8cfb307a9cbe39fe61fe4131\">能容纳正常流的盒，里面就有BFC</li></ul></ul><ul data-lake-id=\"9a5b9024242283ed16e6cd31d11893d3\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"87b4cd912efdc034da20ce0a195b2a25\">BLock-level Box： 外面有BFC的</li><li data-lake-id=\"b7f869b813af671943f5e6e32037d973\">Block Box = Block container + Block-level Box：里外都有BFC的</li></ul><p data-lake-id=\"e108834f03621af259d5e12c7d05cfd1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">  </p><p data-lake-id=\"5fc4f4d230e5dd8621774dab2bec281a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"ee4fa24dc36265dabb5baa6d008ffe7a\" id=\"HLdXA\">盒（Box)</h2><blockquote><p data-lake-id=\"e3feebdb7a9d8cdaf478b33bf7ee8abb\">HTML代码中可以书写开始<span style=\"background-color: #FADB14;\">标签</span>，结束<span style=\"background-color: #FADB14;\">标签</span>，和自封闭<span style=\"background-color: #FADB14;\">标签</span></p><p data-lake-id=\"2d9bc18fea39d93c7c68b01a95f75b09\">一对起止标签，表示一个<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"c66530c1fc1e7bc4a539b3f4ad0e52f3\">DOM树中存储的是<span style=\"background-color: #FADB14;\">元素</span>和其他类型的<span style=\"background-color: #FADB14;\">节点（Node)</span></p><p data-lake-id=\"309cc2a6924f5b5c79c6d52967a1026b\">CSS选择器选中的是<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"773c5613e968aa25e3dadfb391786fff\">CSS选择器选中的<span style=\"background-color: #FADB14;\">元素</span>，在排版时可能产生多个<span style=\"background-color: #FADB14;\">盒</span></p><p data-lake-id=\"a451f21ae50731b4f44f6b29a7930ae6\">排版和渲染的基本单位是<span style=\"background-color: #FADB14;\">盒</span></p></blockquote><h3 data-lake-id=\"d531ffa273805084632f8f75ea692dfe\" id=\"2pcYl\">盒模型</h3><p data-lake-id=\"5f6be85b495dcd18499abf31722cccba\" style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg%22%2C%22originWidth%22%3A1195%2C%22originHeight%22%3A962%2C%22name%22%3A%22IMG_F9E013A8321B-1.jpeg%22%2C%22size%22%3A1274496%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A948.8776%2C%22y%22%3A20.419268%2C%22width%22%3A219.19090000000006%2C%22height%22%3A100.064132%2C%22text%22%3A%22blder%22%7D%2C%7B%22x%22%3A171.19661%2C%22y%22%3A218.71962%2C%22width%22%3A211.51399%2C%22height%22%3A91.39617999999999%2C%22text%22%3A%22magi%22%7D%2C%7B%22x%22%3A289.25253%2C%22y%22%3A332.4821%2C%22width%22%3A164.55100000000004%2C%22height%22%3A61.84068000000002%2C%22text%22%3A%22paadng%22%7D%2C%7B%22x%22%3A474.1389%2C%22y%22%3A457.9218%2C%22width%22%3A215.11899999999997%2C%22height%22%3A63.6542%2C%22text%22%3A%22content%22%7D%2C%7B%22x%22%3A496.30203%2C%22y%22%3A612.0768%2C%22width%22%3A274.12241%2C%22height%22%3A45.98969999999997%2C%22text%22%3A%22content-b%22%7D%2C%7B%22x%22%3A478.07825%2C%22y%22%3A713.8969%2C%22width%22%3A293.19597999999996%2C%22height%22%3A65.59376000000009%2C%22text%22%3A%22border%E4%B8%80BDX%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22blder%20magi%20paadng%20content%20content-b%20border%E4%B8%80BDX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A393%2C%22height%22%3A316%7D\"></card></p><p data-lake-id=\"76f6ceac7930e536f6393edad8f7ae7a\" style=\"text-align: left;\">盒模型分为两种：</p><blockquote><p data-lake-id=\"542d31b31f40fa63a940a6ea19a1d288\" style=\"text-align: left;\">可以通过box-sizing来设置不同的盒模型</p><p data-lake-id=\"70775e60f55cc3e48a11fc7650274a16\">box-sizing默认值是content-box</p></blockquote><ol data-lake-id=\"9826498f29ec772e969890bf13533295\" start=\"1\"><li data-lake-id=\"33bcb43834aa24733c39f3e1fa1ff54c\">怪异盒模型（border-box)： <code>box-width = content + padding + border</code> </li><li data-lake-id=\"88ea1bfa0c550f8575ef13b424c41b24\">标准盒模型 (content-box)： <code>box-width = content</code> </li></ol><blockquote><p data-lake-id=\"111ad4cef9b30865ce5b18b2847c3ed3\">标准盒模型在增加padding和border的宽度时，会保持原有的box-width而去对应减少content的width的所占空间</p></blockquote><h2 data-lake-id=\"436902683f9e79cd309d1489eb1235f0\" id=\"l60lN\">正常流</h2><p data-lake-id=\"31c5a56bce2a08f6dece5c8b35e532a8\">正常流的排版：</p><ol data-lake-id=\"ad98ea1c72ed8e8c86450a10bcd6da36\" start=\"1\"><li data-lake-id=\"89f4fdff4fdafc405be61bc58a946e02\">收集盒和文字进行计算</li><li data-lake-id=\"bcb4f8ca8a4e7c809f2b4489c112973b\">计算盒和文字在行中的排布</li><li data-lake-id=\"2d9017a07b89fe6b3e36f35bee4c9d68\">计算行的排布</li></ol><p data-lake-id=\"2a5cb81c0bee8cccb21953433a99a349\"><span style=\"background-color: #FADB14;\">IFC</span>：行内级格式化上下文（从左到右排列）</p><p data-lake-id=\"497df7f543d70385d352e6881102bab7\"><span style=\"background-color: #FADB14;\">BFC</span>：块级格式化上下（从上到下排列）</p><p data-lake-id=\"c0bb66e0610088417d10a0b3e019bd43\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608591685793-2521eba0-5803-466b-89a6-763608883ac7.png%22%2C%22originWidth%22%3A2226%2C%22originHeight%22%3A960%2C%22name%22%3A%22image.png%22%2C%22size%22%3A303741%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1425.4755%2C%22y%22%3A54.188698%2C%22width%22%3A81.52790000000005%2C%22height%22%3A39.686852%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A46.530132%2C%22y%22%3A54.428337%2C%22width%22%3A70.616938%2C%22height%22%3A41.64183800000001%2C%22text%22%3A%22IFC%22%7D%2C%7B%22x%22%3A205.49973%2C%22y%22%3A146.13678%2C%22width%22%3A220.42356999999998%2C%22height%22%3A38.954830000000015%2C%22text%22%3A%22inline-box%22%7D%2C%7B%22x%22%3A1704.2778%2C%22y%22%3A159.60632%2C%22width%22%3A176.481%2C%22height%22%3A37.29617999999999%2C%22text%22%3A%22line-box%22%7D%2C%7B%22x%22%3A504.2681%2C%22y%22%3A185.98535%2C%22width%22%3A218.98465%2C%22height%22%3A43.94253999999998%2C%22text%22%3A%22inline-box%22%7D%2C%7B%22x%22%3A40.155968%2C%22y%22%3A198.59433%2C%22width%22%3A103.149472%2C%22height%22%3A45.63201999999998%2C%22text%22%3A%22Te%22%7D%2C%7B%22x%22%3A1578.0784%2C%22y%22%3A353.94073%2C%22width%22%3A324.5175999999999%2C%22height%22%3A39.435220000000015%2C%22text%22%3A%22block-leveli-box%22%7D%2C%7B%22x%22%3A1629.9038%2C%22y%22%3A607.0068%2C%22width%22%3A324.2518%2C%22height%22%3A42.553499999999985%2C%22text%22%3A%22block-level-box%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22BFC%20IFC%20inline-box%20line-box%20inline-box%20Te%20block-leveli-box%20block-level-box%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A2226%2C%22height%22%3A960%7D\"></card></p><p data-lake-id=\"b6ee918d26c7425401b7d6d43dd54906\"><br /></p><h2 data-lake-id=\"90b2f6b02c7fc72478e5743e61bac4c4\" id=\"cZ32k\">正常流的行级排布（IFC）</h2><h3 data-lake-id=\"990ff467348b6812cd26cdcca90d06f7\" id=\"8QoBa\">Baseline</h3><p data-lake-id=\"aeef5c79f47903f00c3b271d53332534\">下图中黄色的线就是基线，文字是基于<strong>基线</strong>来对齐的。</p><p data-lake-id=\"00d69c203026f3b48a1d95a1a418b3fe\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592017818-80fa1342-32b6-4329-8d26-f87285f9454b.png%22%2C%22originWidth%22%3A738%2C%22originHeight%22%3A248%2C%22name%22%3A%22image.png%22%2C%22size%22%3A149484%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A122.846115%2C%22y%22%3A64.451035%2C%22width%22%3A350.961505%2C%22height%22%3A73.808195%2C%22text%22%3A%22example%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22example%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A185%2C%22height%22%3A62%7D\"></card></p><h3 data-lake-id=\"f961b708b0e11037d2ac4d39308e1283\" id=\"5GopP\">Text</h3><p data-lake-id=\"104d53bbd2b6b62f011159186748a6e4\">底层软件定义的文字</p><p data-lake-id=\"81e880fa08c3872763487ca6fcc067c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592161826-fb417db4-a214-46c9-a569-a667cbf53176.png%22%2C%22originWidth%22%3A1034%2C%22originHeight%22%3A676%2C%22name%22%3A%22image.png%22%2C%22size%22%3A367041%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A443.77377%2C%22y%22%3A48.672325%2C%22width%22%3A117.93337999999994%2C%22height%22%3A38.552565%2C%22text%22%3A%22xiax%22%7D%2C%7B%22x%22%3A242.84276%2C%22y%22%3A49.17341%2C%22width%22%3A106.52677999999997%2C%22height%22%3A39.058569999999996%2C%22text%22%3A%22xMin%22%7D%2C%7B%22x%22%3A596.9195%2C%22y%22%3A60.261654%2C%22width%22%3A389.08410000000003%2C%22height%22%3A64.061642%2C%22text%22%3A%22GlyphMetrics%22%7D%2C%7B%22x%22%3A354.77435%2C%22y%22%3A130.47412%2C%22width%22%3A98.13836999999995%2C%22height%22%3A36.606570000000005%2C%22text%22%3A%22widty%22%7D%2C%7B%22x%22%3A485.25183%2C%22y%22%3A169.59126%2C%22width%22%3A31.464869999999962%2C%22height%22%3A31.464869999999962%2C%22text%22%3A%22%3E%22%7D%2C%7B%22x%22%3A786.845%2C%22y%22%3A190.3871%2C%22width%22%3A185.64350000000002%2C%22height%22%3A67.65556000000001%2C%22text%22%3A%22F..yMax%22%7D%2C%7B%22x%22%3A39.193455%2C%22y%22%3A256.67133%2C%22width%22%3A164.745065%2C%22height%22%3A52.74032%2C%22text%22%3A%22BearingX%22%7D%2C%7B%22x%22%3A567.19324%2C%22y%22%3A263.677%2C%22width%22%3A137.33206000000007%2C%22height%22%3A52.967799999999954%2C%22text%22%3A%22bearzng%22%7D%2C%7B%22x%22%3A676.88605%2C%22y%22%3A344.1106%2C%22width%22%3A112.78935000000001%2C%22height%22%3A53.50164000000001%2C%22text%22%3A%22height%22%7D%2C%7B%22x%22%3A82.62039%2C%22y%22%3A490.71323%2C%22width%22%3A105.15311999999999%2C%22height%22%3A45.15977000000004%2C%22text%22%3A%22orgin%22%7D%2C%7B%22x%22%3A255.32391%2C%22y%22%3A508.07214%2C%22width%22%3A703.0893900000001%2C%22height%22%3A43.477730000000065%2C%22text%22%3A%22G1...------xM%22%7D%2C%7B%22x%22%3A354.68832%2C%22y%22%3A597.377%2C%22width%22%3A131.81684%2C%22height%22%3A36.186500000000024%2C%22text%22%3A%22aazuan.ce%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22xiax%20xMin%20GlyphMetrics%20widty%20%3E%20F..yMax%20BearingX%20bearzng%20height%20orgin%20G1...------xM%20aazuan.ce%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A259%2C%22height%22%3A169%7D\"></card></p><ul data-lake-id=\"abec3d76eefe3a9a5a81d0377daefee0\"><li data-lake-id=\"d016ea295ee3c577a1730aea4f1f6615\">origin：基线的原点</li><li data-lake-id=\"2da428e0d58f9873b51d15e94fe0c28e\">advance：排版中文字占据的空间</li><li data-lake-id=\"a1ffab6faa547175ece8b351aaa8476d\">bearingX：文字之间的间距</li><li data-lake-id=\"07c19f4917f3d932da0401f01d540f6e\">yMin：文字基线距离文字底部的距离</li></ul><p data-lake-id=\"00a7d93735a74085217ccf89d785d203\"><br /></p><h3 data-lake-id=\"4252b6ebbe95970c40c5711da2530a0d\" id=\"imnex\">行模型</h3><p data-lake-id=\"aaa8836babff6796a2a145c18934bdfd\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592669392-5b688eca-283f-4dcb-a9c6-e2d8b49d9a05.png%22%2C%22originWidth%22%3A1276%2C%22originHeight%22%3A838%2C%22name%22%3A%22image.png%22%2C%22size%22%3A241489%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A33.99841%2C%22y%22%3A24.112051%2C%22width%22%3A168.70928%2C%22height%22%3A49.315233%2C%22text%22%3A%22line-top%22%7D%2C%7B%22x%22%3A19.899237%2C%22y%22%3A225.01888%2C%22width%22%3A173.384563%2C%22height%22%3A45.60859000000002%2C%22text%22%3A%22text-top%22%7D%2C%7B%22x%22%3A454.28955%2C%22y%22%3A307.68552%2C%22width%22%3A560.4414099999999%2C%22height%22%3A265.71658%2C%22text%22%3A%22Ae%E5%9B%BD%22%7D%2C%7B%22x%22%3A32.80071%2C%22y%22%3A461.6155%2C%22width%22%3A196.00415999999998%2C%22height%22%3A42.982219999999984%2C%22text%22%3A%22base-line%22%7D%2C%7B%22x%22%3A27.88786%2C%22y%22%3A546.2942%2C%22width%22%3A263.10324%2C%22height%22%3A42.760599999999954%2C%22text%22%3A%22text-bottom%22%7D%2C%7B%22x%22%3A33.79855%2C%22y%22%3A780.8579%2C%22width%22%3A255.70985%2C%22height%22%3A40.27625999999998%2C%22text%22%3A%22line-bottom%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22line-top%20text-top%20Ae%E5%9B%BD%20base-line%20text-bottom%20line-bottom%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A319%2C%22height%22%3A210%7D\"></card></p><ul data-lake-id=\"2899a490b28bba10d2a312856631eee0\"><li data-lake-id=\"47516b40ae813dbebaaf8ced1bbe451c\">base-line：基线，文字默认对齐的线</li><li data-lake-id=\"29a9db3329ba90b022efcbf44f07c0bd\">text-top、text-bottom：文字的上下边缘线</li></ul><blockquote><p data-lake-id=\"17ceae016cfa3a91b473d3f73ea5dfbe\">只要字体的大小不变，text-top和text-bottom就是不变的</p><p data-lake-id=\"ac78a448c7bc007e209d9f6a15fb840d\">如果用了多种字体混排的话，那么这个文字的上下边缘就是有font-size最大的字体决定的。</p><p data-lake-id=\"5e3e33832f06cdc256542f009652286e\">我们基本可以认为这两条线是固定不变的</p></blockquote><ul data-lake-id=\"f488d4004c1b37cbe114507badb1c6bc\"><li data-lake-id=\"d0191076af18ab0ea3f536ec61f412a4\">line-top、line-bottom：行的上下边缘线</li></ul><blockquote><p data-lake-id=\"5b07abf33c836dc7f6be9dd1a350d6e1\">这两条线的产生是因为行高大于文字的高度</p></blockquote><h3 data-lake-id=\"46447e35586e2e7a5acad36fe2caa7f8\" id=\"fq556\">文字和盒混排时产生的问题</h3><p data-lake-id=\"ff4366c3d4ec220e767b773c50713771\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608593084262-c9db1a4c-cc9d-4337-a842-b06660122bd6.png%22%2C%22originWidth%22%3A1854%2C%22originHeight%22%3A950%2C%22name%22%3A%22image.png%22%2C%22size%22%3A397540%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A68.47099%2C%22y%22%3A102.27226%2C%22width%22%3A172.35672%2C%22height%22%3A47.93593%2C%22text%22%3A%22line-top%22%7D%2C%7B%22x%22%3A54.960278%2C%22y%22%3A307.34464%2C%22width%22%3A174.265472%2C%22height%22%3A40.85925999999995%2C%22text%22%3A%22text-top%22%7D%2C%7B%22x%22%3A485.71964%2C%22y%22%3A389.18164%2C%22width%22%3A563.8494599999999%2C%22height%22%3A265.3770099999999%2C%22text%22%3A%22Ae%E5%9B%BD%22%7D%2C%7B%22x%22%3A68.08933%2C%22y%22%3A544.0809%2C%22width%22%3A197.97258999999997%2C%22height%22%3A42.15634%2C%22text%22%3A%22base-line%22%7D%2C%7B%22x%22%3A60.850014%2C%22y%22%3A625.24445%2C%22width%22%3A268.272606%2C%22height%22%3A48.03734999999995%2C%22text%22%3A%22text-bottom%22%7D%2C%7B%22x%22%3A68.304565%2C%22y%22%3A858.8897%2C%22width%22%3A259.125235%2C%22height%22%3A43.209100000000035%2C%22text%22%3A%22line-bottom%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22line-top%20text-top%20Ae%E5%9B%BD%20base-line%20text-bottom%20line-bottom%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A464%2C%22height%22%3A238%7D\"></card></p><p data-lake-id=\"f07c55dec92498ce36a8b9c9b561a7e5\">当一个行内盒是按照text-bottom来对齐的话，它就会撑开该行的高度，造成偏移的情况。</p><blockquote><p data-lake-id=\"1c225f1f3b0aa8e4e467a0d34193ab80\">当没有蓝色的行内盒的时候，只有文字那么该盒是只有text-top和text-bottom的高度时，文字看起来排版就比较正常，但是当蓝色盒子出现的时候撑开了line-top，导致该行整体高度都被撑开了，那么文字相较之前的就会看起来偏下了许多。</p></blockquote><p data-lake-id=\"0b86a4d112d07d3621a63fd53098194d\">Eg：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%20style%3D%5C%22font-size%3A%2050px%3B%20line-height%3A%20100px%3B%20background-color%3A%20bisque%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%3EHello%20good%20%E5%9B%BD%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%20%20line-height%3A%2070px%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%20100px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%20150px%3B%5Cn%20%20%20%20%20%20%20%20%20%20background-color%3A%20cadetblue%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%3E%5Cn%20%20%5Ct%5Ct%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22SdkN0%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"12c398a7cc6c88f684a896355e5652cf\"><span>效果如下：</span></p><p data-lake-id=\"9efda07c9fd175e684502aa834dcb41b\">文字正常情况按照基线对齐：</p><p data-lake-id=\"cfbe2e7516594b274b631a9d3e058b8c\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594613929-d627e469-a14d-43ac-8262-8bf03832cfc2.png%22%2C%22originWidth%22%3A722%2C%22originHeight%22%3A242%2C%22name%22%3A%22image.png%22%2C%22size%22%3A51691%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0.09134801%2C%22y%22%3A65.45552%2C%22width%22%3A627.36565199%2C%22height%22%3A108.13385%2C%22text%22%3A%22Hellogood%E5%9B%BD%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hellogood%E5%9B%BD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A361%2C%22height%22%3A121%7D\"></card></span></p><p data-lake-id=\"a62520c479c1d20f128a092addb7e1b3\"><span style=\"background-color: #FADB14;\">当我们添加一个行内盒的时候：</span></p><p data-lake-id=\"84db3b90177bc0c9f0ff3c9cc45ddb4e\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594091726-0caea8c5-9407-453f-b4b4-e5c209ff6a65.png%22%2C%22originWidth%22%3A1092%2C%22originHeight%22%3A372%2C%22name%22%3A%22image.png%22%2C%22size%22%3A82717%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A69.05408%2C%22y%22%3A223.5073%2C%22width%22%3A635.58899%2C%22height%22%3A113.28989999999999%2C%22text%22%3A%22Hellogood%E5%9B%BD%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hellogood%E5%9B%BD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A273%2C%22height%22%3A93%7D\"></card></span></p><p data-lake-id=\"df369daf0ffa9f4619c9be9a29d58069\"><span>蓝色的线是line-top，就被撑开了（该行的整体高度被撑开）。绿色的线是text-top，行内盒不会影响text的边缘线高度。</span></p><p data-lake-id=\"8a6b74b2949c6a38898a368c124fdbb6\"><span style=\"background-color: #FADB14;\">当我们在行内盒添加上一个文字时：</span></p><p data-lake-id=\"0d720a0cd8158538b45c7530de8ee4cd\"><span style=\"background-color: #FADB14;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594403003-766b921d-5f40-4926-abfc-4ecfbc4da80c.png%22%2C%22originWidth%22%3A1006%2C%22originHeight%22%3A358%2C%22name%22%3A%22image.png%22%2C%22size%22%3A87363%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A44.278477%2C%22y%22%3A66.64555%2C%22width%22%3A759.051963%2C%22height%22%3A111.12935%2C%22text%22%3A%22Hello_goOd%E5%9B%BDM%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hello_goOd%E5%9B%BDM%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A252%2C%22height%22%3A90%7D\"></card></span></p><p data-lake-id=\"6a3dad1882ec06101ab123f1eb237917\">这种情况就相当于，当一个行内盒中有了文字之后，那么对齐的时候就会按照文字的基线去对齐</p><p data-lake-id=\"31264fc477bca0498f491f44969686f2\"><span style=\"background-color: #FADB14;\">当我们呢在行内盒再添加一个换行和文字时：</span></p><p data-lake-id=\"3b33f1324320a8b4c0303d45d3ea4960\"><span style=\"background-color: #FADB14;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594527028-d79e9601-b55a-46f6-bf8c-42d524096579.png%22%2C%22originWidth%22%3A964%2C%22originHeight%22%3A354%2C%22name%22%3A%22image.png%22%2C%22size%22%3A94340%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A678.17615%2C%22y%22%3A46.891823%2C%22width%22%3A88.68584999999996%2C%22height%22%3A80.691017%2C%22text%22%3A%22M%22%7D%2C%7B%22x%22%3A7.3894663%2C%22y%22%3A183.56671%2C%22width%22%3A746.7904337%2C%22height%22%3A110.25229000000002%2C%22text%22%3A%22Hellogooc%E5%9B%BDN%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22M%20Hellogooc%E5%9B%BDN%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A241%2C%22height%22%3A89%7D\"></card></span></p><p data-lake-id=\"79d94ba5e584b0c9830fd8fdb1e5a335\">会按照最下面文字的基线去进行对齐</p><p data-lake-id=\"4cab90d438e454a3893cbe88840ec800\">上面的演示代码：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%20%3Cdiv%20style%3D%5C%22font-size%3A%2050px%3B%20line-height%3A%20100px%3B%20background-color%3A%20bisque%5C%22%3E%5Cn%20%20%20%20%20%20%3C!--%20line-top%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20top%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20blue%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20text-top%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20text-top%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20green%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20%E5%9F%BA%E7%BA%BF%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20baseline%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20red%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20text-bottom%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20text-bottom%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20green%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20line-bottom%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20bottom%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20blue%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3Cspan%3EHello%20good%20%E5%9B%BD%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%20%20line-height%3A%2070px%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%20100px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%20150px%3B%5Cn%20%20%20%20%20%20%20%20%20%20background-color%3A%20cadetblue%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20M%5Cn%20%20%20%20%20%20%20%20%3Cbr%20%2F%3E%5Cn%20%20%20%20%20%20%20%20N%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Qp1GI%22%2C%22autoWrap%22%3Atrue%7D\"></card><h2 data-lake-id=\"28ebe5b82533f718af9f3d5f722416c7\" id=\"kcqXf\">正常流的块级排布（BFC)</h2><h3 data-lake-id=\"77709b31fdbb87852ef13afc05ab1914\" id=\"60JPT\">float 和clear</h3><p data-lake-id=\"311793ee46e26d4f0b1a3c2b8247da9d\"><span style=\"background-color: #FADB14;\">float</span>：</p><ul data-lake-id=\"00505bc7c85f8b9b1ec3e0de5704b0f7\"><li data-lake-id=\"0958c6d9aeb834e7568681bcae716198\">严格来说是已经脱离文档流的，他在排列时可以完成图文环绕排的形式。</li><li data-lake-id=\"e4a2dbee9e401c106007d6fdc6c6af97\">多个float元素会依次排列，不会占据对方的空间</li><li data-lake-id=\"330749b93be053d2a72febc5607ced05\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854033824-58eec322-5bd5-4d17-a5b4-c8d43b51202c.png%22%2C%22originWidth%22%3A1400%2C%22originHeight%22%3A264%2C%22name%22%3A%22image.png%22%2C%22size%22%3A15569%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0.12760974%2C%22y%22%3A3.4164624%2C%22width%22%3A1288.03759026%2C%22height%22%3A20.3351276%2C%22text%22%3A%2233%E4%B9%89%E4%B9%89%E5%8F%8A%E6%B1%89%E6%B1%89%E6%B1%89%E6%B1%89%E6%88%8F%E5%BB%BA%E5%8F%8A%E4%B9%89%E5%8F%8A%E5%8F%8A%E4%BA%A4%E5%8F%8A%E5%A5%BD%E5%A5%BD%E4%BA%A4%22%7D%2C%7B%22x%22%3A0.9680707%2C%22y%22%3A25.83593%2C%22width%22%3A1288.6258293%2C%22height%22%3A18.989049999999995%2C%22text%22%3A%22%E6%B1%89%E5%B9%B6%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E4%BA%A4%E4%BA%A4%E5%8F%8A%E7%90%86%E5%A5%BD%E5%A5%BD%22%7D%2C%7B%22x%22%3A0.09399414%2C%22y%22%3A48.741432%2C%22width%22%3A1288.7599058600001%2C%22height%22%3A18.611288000000002%2C%22text%22%3A%22%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%AD%A6%E5%BB%BA%E5%A9%B7%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E7%BE%A4%E6%95%99%22%7D%2C%7B%22x%22%3A0.25661469%2C%22y%22%3A71.16191%2C%22width%22%3A898.24228531%2C%22height%22%3A19.045845999999997%2C%22text%22%3A%22%E5%AD%95%E4%BA%89%E4%BA%89%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E6%96%87%E5%AD%97%E5%AD%A6%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E8%BF%99%E5%AD%97%E6%96%87%E6%88%8F%E6%89%8B%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%2233%E4%B9%89%E4%B9%89%E5%8F%8A%E6%B1%89%E6%B1%89%E6%B1%89%E6%B1%89%E6%88%8F%E5%BB%BA%E5%8F%8A%E4%B9%89%E5%8F%8A%E5%8F%8A%E4%BA%A4%E5%8F%8A%E5%A5%BD%E5%A5%BD%E4%BA%A4%20%E6%B1%89%E5%B9%B6%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E4%BA%A4%E4%BA%A4%E5%8F%8A%E7%90%86%E5%A5%BD%E5%A5%BD%20%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%AD%A6%E5%BB%BA%E5%A9%B7%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E7%BE%A4%E6%95%99%20%E5%AD%95%E4%BA%89%E4%BA%89%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E6%96%87%E5%AD%97%E5%AD%A6%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E8%BF%99%E5%AD%97%E6%96%87%E6%88%8F%E6%89%8B%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A350%2C%22height%22%3A66%7D\"></card></li><li data-lake-id=\"6c3f9014b92318b0c528b3c6f545e09d\">float会造成重排的问题</li></ul><p data-lake-id=\"20c9cd8f492d4b6b32bcf1ca4d6396f2\"><br /></p><p data-lake-id=\"45fab0732fbdc995e31300d95f75989e\"><span style=\"background-color: #FADB14;\">clear：</span>与其说是清除浮动，不如说是在某个方向上找个干净的地方去完成浮动的排列</p><ul data-lake-id=\"edb795a9acab708540dba4f9a5da1aa9\"><li data-lake-id=\"79d213fec98ca5da5b3a8eff5821125b\">与上面同样的代码，只要给第二个float的红色div设置 <code>clear: right</code> 就可以实现下面这种效果</li><li data-lake-id=\"3bb292bcec03342d9dbfe694ab58405d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854110759-07d731d4-93c2-4726-97bf-81e708a9a0f3.png%22%2C%22originWidth%22%3A1405%2C%22originHeight%22%3A242%2C%22name%22%3A%22image.png%22%2C%22size%22%3A14317%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A2.9274025%2C%22y%22%3A3.2911284%2C%22width%22%3A1288.8486975%2C%22height%22%3A19.6389086%2C%22text%22%3A%22%E6%B1%89%E4%BA%A4%E4%BA%A4%E4%BA%A4%E6%88%91%E7%90%86%E5%8F%8A%E5%BB%BA%E5%BB%BA%E5%BB%BA%E7%90%86%E7%90%86%E7%90%86%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E5%AD%97%E5%A5%BD%E5%A5%BD%E5%BB%BA%22%7D%2C%7B%22x%22%3A3.1316736%2C%22y%22%3A25.28882%2C%22width%22%3A1288.4142264%2C%22height%22%3A19.966009999999997%2C%22text%22%3A%22%E9%A3%8E%E7%90%86%E5%BB%BA%E5%BB%BA%E7%BE%A4%E4%BA%A4%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E4%BA%89%E4%BA%89%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%A5%BD%E5%A5%BD%22%7D%2C%7B%22x%22%3A2.5727088%2C%22y%22%3A47.885204%2C%22width%22%3A1288.1477911999998%2C%22height%22%3A18.718835999999996%2C%22text%22%3A%22%E5%9C%B0%E5%A0%82%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%BB%BA%22%7D%2C%7B%22x%22%3A2.922349%2C%22y%22%3A69.93793%2C%22width%22%3A901.750151%2C%22height%22%3A19.30207%2C%22text%22%3A%22%E5%AD%95%E5%B0%B9%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%B0%B9%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E4%BA%89%E5%AD%95%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E5%AD%97%E4%B9%89%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%B1%89%E4%BA%A4%E4%BA%A4%E4%BA%A4%E6%88%91%E7%90%86%E5%8F%8A%E5%BB%BA%E5%BB%BA%E5%BB%BA%E7%90%86%E7%90%86%E7%90%86%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E5%AD%97%E5%A5%BD%E5%A5%BD%E5%BB%BA%20%E9%A3%8E%E7%90%86%E5%BB%BA%E5%BB%BA%E7%BE%A4%E4%BA%A4%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E4%BA%89%E4%BA%89%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%A5%BD%E5%A5%BD%20%E5%9C%B0%E5%A0%82%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%BB%BA%20%E5%AD%95%E5%B0%B9%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%B0%B9%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E4%BA%89%E5%AD%95%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E5%AD%97%E4%B9%89%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A351%2C%22height%22%3A60%7D\"></card></li><li data-lake-id=\"3577ac1f9104157893f90d99663ad0b4\">所以说clear更像是在右面找了一个干净的地方进行浮动排列</li></ul><p data-lake-id=\"944cf701035b8bc4df0a9c9d77b41e04\"><br /></p><h3 data-lake-id=\"0dd1e6177e4c1a3fbb865fbda8bd8127\" id=\"saUEj\">margin折叠</h3><p data-lake-id=\"5e0b09db878ebad5facc05661d1933c3\"><span style=\"color: #F5222D;\">这种现象只会发生在正常流中，在正常流中只有BFC才会有！</span></p><p data-lake-id=\"f661d97057bb4f0350b7a199bc9a56aa\"><span style=\"color: #F5222D;\"><br /></span></p><p data-lake-id=\"56b1cd0cd234e97d9e695625fed5ffe0\">上下两个块级元素都有margin的情况下，在排列的时候会选取一个margin的最大值作为其最终排版的结果</p><p data-lake-id=\"d55ce2953a338d43ac46d6555ce54aca\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854541877-e2831a64-ad81-4f32-a22f-9b377bd8495f.png%22%2C%22originWidth%22%3A1650%2C%22originHeight%22%3A1212%2C%22name%22%3A%22image.png%22%2C%22size%22%3A172874%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A109.81636%2C%22y%22%3A130.56981%2C%22width%22%3A152.57480999999999%2C%22height%22%3A42.21204%2C%22text%22%3A%22margin%22%7D%2C%7B%22x%22%3A1483.8938%2C%22y%22%3A142.57977%2C%22width%22%3A141.24579999999992%2C%22height%22%3A68.19286%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A109.51606%2C%22y%22%3A1132.9824%2C%22width%22%3A149.58361000000002%2C%22height%22%3A43.73759999999993%2C%22text%22%3A%22margin%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22margin%20BFC%20margin%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A256%2C%22height%22%3A188%7D\"></card><span>  =====&gt;  </span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854549792-733a8918-101f-4602-bcbf-2c216a5fe612.png%22%2C%22originWidth%22%3A1714%2C%22originHeight%22%3A1098%2C%22name%22%3A%22image.png%22%2C%22size%22%3A173370%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A103.939224%2C%22y%22%3A114.79585%2C%22width%22%3A151.10952600000002%2C%22height%22%3A46.17642000000001%2C%22text%22%3A%22margin%22%7D%2C%7B%22x%22%3A1477.8066%2C%22y%22%3A132.05066%2C%22width%22%3A137.81850000000009%2C%22height%22%3A63.28827000000001%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A105.14836%2C%22y%22%3A921.3244%2C%22width%22%3A146.49756%2C%22height%22%3A41.708560000000034%2C%22text%22%3A%22margin%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22margin%20BFC%20margin%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A294%2C%22height%22%3A188%7D\"></card></p><p data-lake-id=\"47d3d5e2ff236c5a3c0b31d5aea6c333\"><span><br /></span></p><h3 data-lake-id=\"4606fc0695c168fd40c74f7a03d02085\" id=\"bVVTe\">BFC合并</h3><ul data-lake-id=\"712395906bd111ca0580f01a2a763b31\"><li data-lake-id=\"4bbcf4d264fafaf79859cadcb02a83a1\">Block Container： 里面有BFC</li></ul><ul data-lake-id=\"b31ac4e56ca3523a8f4e8df5d8e7dfaa\" data-lake-indent=\"1\"><li data-lake-id=\"b0ef805b8cfb307a9cbe39fe61fe4131\">能容纳正常流的盒，里面就有BFC</li></ul><ul data-lake-id=\"9a5b9024242283ed16e6cd31d11893d3\"><li data-lake-id=\"87b4cd912efdc034da20ce0a195b2a25\">BLock-level Box： 外面有BFC的</li><li data-lake-id=\"b7f869b813af671943f5e6e32037d973\">Block Box = Block container + Block-level Box：里外都有BFC的</li></ul><p data-lake-id=\"e108834f03621af259d5e12c7d05cfd1\"></p><p data-lake-id=\"5fc4f4d230e5dd8621774dab2bec281a\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"ee4fa24dc36265dabb5baa6d008ffe7a\" id=\"HLdXA\">盒（Box)</h2><blockquote><p data-lake-id=\"e3feebdb7a9d8cdaf478b33bf7ee8abb\">HTML代码中可以书写开始<span style=\"background-color: #FADB14;\">标签</span>，结束<span style=\"background-color: #FADB14;\">标签</span>，和自封闭<span style=\"background-color: #FADB14;\">标签</span></p><p data-lake-id=\"2d9bc18fea39d93c7c68b01a95f75b09\">一对起止标签，表示一个<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"c66530c1fc1e7bc4a539b3f4ad0e52f3\">DOM树中存储的是<span style=\"background-color: #FADB14;\">元素</span>和其他类型的<span style=\"background-color: #FADB14;\">节点（Node)</span></p><p data-lake-id=\"309cc2a6924f5b5c79c6d52967a1026b\">CSS选择器选中的是<span style=\"background-color: #FADB14;\">元素</span></p><p data-lake-id=\"773c5613e968aa25e3dadfb391786fff\">CSS选择器选中的<span style=\"background-color: #FADB14;\">元素</span>，在排版时可能产生多个<span style=\"background-color: #FADB14;\">盒</span></p><p data-lake-id=\"a451f21ae50731b4f44f6b29a7930ae6\">排版和渲染的基本单位是<span style=\"background-color: #FADB14;\">盒</span></p></blockquote><h3 data-lake-id=\"d531ffa273805084632f8f75ea692dfe\" id=\"2pcYl\">盒模型</h3><p data-lake-id=\"5f6be85b495dcd18499abf31722cccba\" style=\"text-align: center;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg%22%2C%22originWidth%22%3A1195%2C%22originHeight%22%3A962%2C%22name%22%3A%22IMG_F9E013A8321B-1.jpeg%22%2C%22size%22%3A1274496%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A948.8776%2C%22y%22%3A20.419268%2C%22width%22%3A219.19090000000006%2C%22height%22%3A100.064132%2C%22text%22%3A%22blder%22%7D%2C%7B%22x%22%3A171.19661%2C%22y%22%3A218.71962%2C%22width%22%3A211.51399%2C%22height%22%3A91.39617999999999%2C%22text%22%3A%22magi%22%7D%2C%7B%22x%22%3A289.25253%2C%22y%22%3A332.4821%2C%22width%22%3A164.55100000000004%2C%22height%22%3A61.84068000000002%2C%22text%22%3A%22paadng%22%7D%2C%7B%22x%22%3A474.1389%2C%22y%22%3A457.9218%2C%22width%22%3A215.11899999999997%2C%22height%22%3A63.6542%2C%22text%22%3A%22content%22%7D%2C%7B%22x%22%3A496.30203%2C%22y%22%3A612.0768%2C%22width%22%3A274.12241%2C%22height%22%3A45.98969999999997%2C%22text%22%3A%22content-b%22%7D%2C%7B%22x%22%3A478.07825%2C%22y%22%3A713.8969%2C%22width%22%3A293.19597999999996%2C%22height%22%3A65.59376000000009%2C%22text%22%3A%22border%E4%B8%80BDX%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22blder%20magi%20paadng%20content%20content-b%20border%E4%B8%80BDX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A393%2C%22height%22%3A316%7D\"></card></p><p data-lake-id=\"76f6ceac7930e536f6393edad8f7ae7a\" style=\"text-align: left;\">盒模型分为两种：</p><blockquote><p data-lake-id=\"542d31b31f40fa63a940a6ea19a1d288\" style=\"text-align: left;\">可以通过box-sizing来设置不同的盒模型</p><p data-lake-id=\"70775e60f55cc3e48a11fc7650274a16\">box-sizing默认值是content-box</p></blockquote><ol data-lake-id=\"9826498f29ec772e969890bf13533295\" start=\"1\"><li data-lake-id=\"33bcb43834aa24733c39f3e1fa1ff54c\">怪异盒模型（border-box)： <code>box-width = content + padding + border</code> </li><li data-lake-id=\"88ea1bfa0c550f8575ef13b424c41b24\">标准盒模型 (content-box)： <code>box-width = content</code> </li></ol><blockquote><p data-lake-id=\"111ad4cef9b30865ce5b18b2847c3ed3\">标准盒模型在增加padding和border的宽度时，会保持原有的box-width而去对应减少content的width的所占空间</p></blockquote><h2 data-lake-id=\"436902683f9e79cd309d1489eb1235f0\" id=\"l60lN\">正常流</h2><p data-lake-id=\"31c5a56bce2a08f6dece5c8b35e532a8\">正常流的排版：</p><ol data-lake-id=\"ad98ea1c72ed8e8c86450a10bcd6da36\" start=\"1\"><li data-lake-id=\"89f4fdff4fdafc405be61bc58a946e02\">收集盒和文字进行计算</li><li data-lake-id=\"bcb4f8ca8a4e7c809f2b4489c112973b\">计算盒和文字在行中的排布</li><li data-lake-id=\"2d9017a07b89fe6b3e36f35bee4c9d68\">计算行的排布</li></ol><p data-lake-id=\"2a5cb81c0bee8cccb21953433a99a349\"><span style=\"background-color: #FADB14;\">IFC</span>：行内级格式化上下文（从左到右排列）</p><p data-lake-id=\"497df7f543d70385d352e6881102bab7\"><span style=\"background-color: #FADB14;\">BFC</span>：块级格式化上下（从上到下排列）</p><p data-lake-id=\"c0bb66e0610088417d10a0b3e019bd43\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608591685793-2521eba0-5803-466b-89a6-763608883ac7.png%22%2C%22originWidth%22%3A2226%2C%22originHeight%22%3A960%2C%22name%22%3A%22image.png%22%2C%22size%22%3A303741%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1425.4755%2C%22y%22%3A54.188698%2C%22width%22%3A81.52790000000005%2C%22height%22%3A39.686852%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A46.530132%2C%22y%22%3A54.428337%2C%22width%22%3A70.616938%2C%22height%22%3A41.64183800000001%2C%22text%22%3A%22IFC%22%7D%2C%7B%22x%22%3A205.49973%2C%22y%22%3A146.13678%2C%22width%22%3A220.42356999999998%2C%22height%22%3A38.954830000000015%2C%22text%22%3A%22inline-box%22%7D%2C%7B%22x%22%3A1704.2778%2C%22y%22%3A159.60632%2C%22width%22%3A176.481%2C%22height%22%3A37.29617999999999%2C%22text%22%3A%22line-box%22%7D%2C%7B%22x%22%3A504.2681%2C%22y%22%3A185.98535%2C%22width%22%3A218.98465%2C%22height%22%3A43.94253999999998%2C%22text%22%3A%22inline-box%22%7D%2C%7B%22x%22%3A40.155968%2C%22y%22%3A198.59433%2C%22width%22%3A103.149472%2C%22height%22%3A45.63201999999998%2C%22text%22%3A%22Te%22%7D%2C%7B%22x%22%3A1578.0784%2C%22y%22%3A353.94073%2C%22width%22%3A324.5175999999999%2C%22height%22%3A39.435220000000015%2C%22text%22%3A%22block-leveli-box%22%7D%2C%7B%22x%22%3A1629.9038%2C%22y%22%3A607.0068%2C%22width%22%3A324.2518%2C%22height%22%3A42.553499999999985%2C%22text%22%3A%22block-level-box%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22BFC%20IFC%20inline-box%20line-box%20inline-box%20Te%20block-leveli-box%20block-level-box%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A2226%2C%22height%22%3A960%7D\"></card></p><p data-lake-id=\"b6ee918d26c7425401b7d6d43dd54906\"><br /></p><h2 data-lake-id=\"90b2f6b02c7fc72478e5743e61bac4c4\" id=\"cZ32k\">正常流的行级排布（IFC）</h2><h3 data-lake-id=\"990ff467348b6812cd26cdcca90d06f7\" id=\"8QoBa\">Baseline</h3><p data-lake-id=\"aeef5c79f47903f00c3b271d53332534\">下图中黄色的线就是基线，文字是基于<strong>基线</strong>来对齐的。</p><p data-lake-id=\"00d69c203026f3b48a1d95a1a418b3fe\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592017818-80fa1342-32b6-4329-8d26-f87285f9454b.png%22%2C%22originWidth%22%3A738%2C%22originHeight%22%3A248%2C%22name%22%3A%22image.png%22%2C%22size%22%3A149484%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A122.846115%2C%22y%22%3A64.451035%2C%22width%22%3A350.961505%2C%22height%22%3A73.808195%2C%22text%22%3A%22example%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22example%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A185%2C%22height%22%3A62%7D\"></card></p><h3 data-lake-id=\"f961b708b0e11037d2ac4d39308e1283\" id=\"5GopP\">Text</h3><p data-lake-id=\"104d53bbd2b6b62f011159186748a6e4\">底层软件定义的文字</p><p data-lake-id=\"81e880fa08c3872763487ca6fcc067c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592161826-fb417db4-a214-46c9-a569-a667cbf53176.png%22%2C%22originWidth%22%3A1034%2C%22originHeight%22%3A676%2C%22name%22%3A%22image.png%22%2C%22size%22%3A367041%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A443.77377%2C%22y%22%3A48.672325%2C%22width%22%3A117.93337999999994%2C%22height%22%3A38.552565%2C%22text%22%3A%22xiax%22%7D%2C%7B%22x%22%3A242.84276%2C%22y%22%3A49.17341%2C%22width%22%3A106.52677999999997%2C%22height%22%3A39.058569999999996%2C%22text%22%3A%22xMin%22%7D%2C%7B%22x%22%3A596.9195%2C%22y%22%3A60.261654%2C%22width%22%3A389.08410000000003%2C%22height%22%3A64.061642%2C%22text%22%3A%22GlyphMetrics%22%7D%2C%7B%22x%22%3A354.77435%2C%22y%22%3A130.47412%2C%22width%22%3A98.13836999999995%2C%22height%22%3A36.606570000000005%2C%22text%22%3A%22widty%22%7D%2C%7B%22x%22%3A485.25183%2C%22y%22%3A169.59126%2C%22width%22%3A31.464869999999962%2C%22height%22%3A31.464869999999962%2C%22text%22%3A%22%3E%22%7D%2C%7B%22x%22%3A786.845%2C%22y%22%3A190.3871%2C%22width%22%3A185.64350000000002%2C%22height%22%3A67.65556000000001%2C%22text%22%3A%22F..yMax%22%7D%2C%7B%22x%22%3A39.193455%2C%22y%22%3A256.67133%2C%22width%22%3A164.745065%2C%22height%22%3A52.74032%2C%22text%22%3A%22BearingX%22%7D%2C%7B%22x%22%3A567.19324%2C%22y%22%3A263.677%2C%22width%22%3A137.33206000000007%2C%22height%22%3A52.967799999999954%2C%22text%22%3A%22bearzng%22%7D%2C%7B%22x%22%3A676.88605%2C%22y%22%3A344.1106%2C%22width%22%3A112.78935000000001%2C%22height%22%3A53.50164000000001%2C%22text%22%3A%22height%22%7D%2C%7B%22x%22%3A82.62039%2C%22y%22%3A490.71323%2C%22width%22%3A105.15311999999999%2C%22height%22%3A45.15977000000004%2C%22text%22%3A%22orgin%22%7D%2C%7B%22x%22%3A255.32391%2C%22y%22%3A508.07214%2C%22width%22%3A703.0893900000001%2C%22height%22%3A43.477730000000065%2C%22text%22%3A%22G1...------xM%22%7D%2C%7B%22x%22%3A354.68832%2C%22y%22%3A597.377%2C%22width%22%3A131.81684%2C%22height%22%3A36.186500000000024%2C%22text%22%3A%22aazuan.ce%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22xiax%20xMin%20GlyphMetrics%20widty%20%3E%20F..yMax%20BearingX%20bearzng%20height%20orgin%20G1...------xM%20aazuan.ce%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A259%2C%22height%22%3A169%7D\"></card></p><ul data-lake-id=\"abec3d76eefe3a9a5a81d0377daefee0\"><li data-lake-id=\"d016ea295ee3c577a1730aea4f1f6615\">origin：基线的原点</li><li data-lake-id=\"2da428e0d58f9873b51d15e94fe0c28e\">advance：排版中文字占据的空间</li><li data-lake-id=\"a1ffab6faa547175ece8b351aaa8476d\">bearingX：文字之间的间距</li><li data-lake-id=\"07c19f4917f3d932da0401f01d540f6e\">yMin：文字基线距离文字底部的距离</li></ul><p data-lake-id=\"00a7d93735a74085217ccf89d785d203\"><br /></p><h3 data-lake-id=\"4252b6ebbe95970c40c5711da2530a0d\" id=\"imnex\">行模型</h3><p data-lake-id=\"aaa8836babff6796a2a145c18934bdfd\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608592669392-5b688eca-283f-4dcb-a9c6-e2d8b49d9a05.png%22%2C%22originWidth%22%3A1276%2C%22originHeight%22%3A838%2C%22name%22%3A%22image.png%22%2C%22size%22%3A241489%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A33.99841%2C%22y%22%3A24.112051%2C%22width%22%3A168.70928%2C%22height%22%3A49.315233%2C%22text%22%3A%22line-top%22%7D%2C%7B%22x%22%3A19.899237%2C%22y%22%3A225.01888%2C%22width%22%3A173.384563%2C%22height%22%3A45.60859000000002%2C%22text%22%3A%22text-top%22%7D%2C%7B%22x%22%3A454.28955%2C%22y%22%3A307.68552%2C%22width%22%3A560.4414099999999%2C%22height%22%3A265.71658%2C%22text%22%3A%22Ae%E5%9B%BD%22%7D%2C%7B%22x%22%3A32.80071%2C%22y%22%3A461.6155%2C%22width%22%3A196.00415999999998%2C%22height%22%3A42.982219999999984%2C%22text%22%3A%22base-line%22%7D%2C%7B%22x%22%3A27.88786%2C%22y%22%3A546.2942%2C%22width%22%3A263.10324%2C%22height%22%3A42.760599999999954%2C%22text%22%3A%22text-bottom%22%7D%2C%7B%22x%22%3A33.79855%2C%22y%22%3A780.8579%2C%22width%22%3A255.70985%2C%22height%22%3A40.27625999999998%2C%22text%22%3A%22line-bottom%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22line-top%20text-top%20Ae%E5%9B%BD%20base-line%20text-bottom%20line-bottom%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A319%2C%22height%22%3A210%7D\"></card></p><ul data-lake-id=\"2899a490b28bba10d2a312856631eee0\"><li data-lake-id=\"47516b40ae813dbebaaf8ced1bbe451c\">base-line：基线，文字默认对齐的线</li><li data-lake-id=\"29a9db3329ba90b022efcbf44f07c0bd\">text-top、text-bottom：文字的上下边缘线</li></ul><blockquote><p data-lake-id=\"17ceae016cfa3a91b473d3f73ea5dfbe\">只要字体的大小不变，text-top和text-bottom就是不变的</p><p data-lake-id=\"ac78a448c7bc007e209d9f6a15fb840d\">如果用了多种字体混排的话，那么这个文字的上下边缘就是有font-size最大的字体决定的。</p><p data-lake-id=\"5e3e33832f06cdc256542f009652286e\">我们基本可以认为这两条线是固定不变的</p></blockquote><ul data-lake-id=\"f488d4004c1b37cbe114507badb1c6bc\"><li data-lake-id=\"d0191076af18ab0ea3f536ec61f412a4\">line-top、line-bottom：行的上下边缘线</li></ul><blockquote><p data-lake-id=\"5b07abf33c836dc7f6be9dd1a350d6e1\">这两条线的产生是因为行高大于文字的高度</p></blockquote><h3 data-lake-id=\"46447e35586e2e7a5acad36fe2caa7f8\" id=\"fq556\">文字和盒混排时产生的问题</h3><p data-lake-id=\"ff4366c3d4ec220e767b773c50713771\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608593084262-c9db1a4c-cc9d-4337-a842-b06660122bd6.png%22%2C%22originWidth%22%3A1854%2C%22originHeight%22%3A950%2C%22name%22%3A%22image.png%22%2C%22size%22%3A397540%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A68.47099%2C%22y%22%3A102.27226%2C%22width%22%3A172.35672%2C%22height%22%3A47.93593%2C%22text%22%3A%22line-top%22%7D%2C%7B%22x%22%3A54.960278%2C%22y%22%3A307.34464%2C%22width%22%3A174.265472%2C%22height%22%3A40.85925999999995%2C%22text%22%3A%22text-top%22%7D%2C%7B%22x%22%3A485.71964%2C%22y%22%3A389.18164%2C%22width%22%3A563.8494599999999%2C%22height%22%3A265.3770099999999%2C%22text%22%3A%22Ae%E5%9B%BD%22%7D%2C%7B%22x%22%3A68.08933%2C%22y%22%3A544.0809%2C%22width%22%3A197.97258999999997%2C%22height%22%3A42.15634%2C%22text%22%3A%22base-line%22%7D%2C%7B%22x%22%3A60.850014%2C%22y%22%3A625.24445%2C%22width%22%3A268.272606%2C%22height%22%3A48.03734999999995%2C%22text%22%3A%22text-bottom%22%7D%2C%7B%22x%22%3A68.304565%2C%22y%22%3A858.8897%2C%22width%22%3A259.125235%2C%22height%22%3A43.209100000000035%2C%22text%22%3A%22line-bottom%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22line-top%20text-top%20Ae%E5%9B%BD%20base-line%20text-bottom%20line-bottom%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A464%2C%22height%22%3A238%7D\"></card></p><p data-lake-id=\"f07c55dec92498ce36a8b9c9b561a7e5\">当一个行内盒是按照text-bottom来对齐的话，它就会撑开该行的高度，造成偏移的情况。</p><blockquote><p data-lake-id=\"1c225f1f3b0aa8e4e467a0d34193ab80\">当没有蓝色的行内盒的时候，只有文字那么该盒是只有text-top和text-bottom的高度时，文字看起来排版就比较正常，但是当蓝色盒子出现的时候撑开了line-top，导致该行整体高度都被撑开了，那么文字相较之前的就会看起来偏下了许多。</p></blockquote><p data-lake-id=\"0b86a4d112d07d3621a63fd53098194d\">Eg：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%20style%3D%5C%22font-size%3A%2050px%3B%20line-height%3A%20100px%3B%20background-color%3A%20bisque%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%3EHello%20good%20%E5%9B%BD%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%20%20line-height%3A%2070px%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%20100px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%20150px%3B%5Cn%20%20%20%20%20%20%20%20%20%20background-color%3A%20cadetblue%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%3E%5Cn%20%20%5Ct%5Ct%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22SdkN0%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"12c398a7cc6c88f684a896355e5652cf\"><span>效果如下：</span></p><p data-lake-id=\"9efda07c9fd175e684502aa834dcb41b\">文字正常情况按照基线对齐：</p><p data-lake-id=\"cfbe2e7516594b274b631a9d3e058b8c\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594613929-d627e469-a14d-43ac-8262-8bf03832cfc2.png%22%2C%22originWidth%22%3A722%2C%22originHeight%22%3A242%2C%22name%22%3A%22image.png%22%2C%22size%22%3A51691%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0.09134801%2C%22y%22%3A65.45552%2C%22width%22%3A627.36565199%2C%22height%22%3A108.13385%2C%22text%22%3A%22Hellogood%E5%9B%BD%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hellogood%E5%9B%BD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A361%2C%22height%22%3A121%7D\"></card></span></p><p data-lake-id=\"a62520c479c1d20f128a092addb7e1b3\"><span style=\"background-color: #FADB14;\">当我们添加一个行内盒的时候：</span></p><p data-lake-id=\"84db3b90177bc0c9f0ff3c9cc45ddb4e\"><span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594091726-0caea8c5-9407-453f-b4b4-e5c209ff6a65.png%22%2C%22originWidth%22%3A1092%2C%22originHeight%22%3A372%2C%22name%22%3A%22image.png%22%2C%22size%22%3A82717%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A69.05408%2C%22y%22%3A223.5073%2C%22width%22%3A635.58899%2C%22height%22%3A113.28989999999999%2C%22text%22%3A%22Hellogood%E5%9B%BD%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hellogood%E5%9B%BD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A273%2C%22height%22%3A93%7D\"></card></span></p><p data-lake-id=\"df369daf0ffa9f4619c9be9a29d58069\"><span>蓝色的线是line-top，就被撑开了（该行的整体高度被撑开）。绿色的线是text-top，行内盒不会影响text的边缘线高度。</span></p><p data-lake-id=\"8a6b74b2949c6a38898a368c124fdbb6\"><span style=\"background-color: #FADB14;\">当我们在行内盒添加上一个文字时：</span></p><p data-lake-id=\"0d720a0cd8158538b45c7530de8ee4cd\"><span style=\"background-color: #FADB14;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594403003-766b921d-5f40-4926-abfc-4ecfbc4da80c.png%22%2C%22originWidth%22%3A1006%2C%22originHeight%22%3A358%2C%22name%22%3A%22image.png%22%2C%22size%22%3A87363%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A44.278477%2C%22y%22%3A66.64555%2C%22width%22%3A759.051963%2C%22height%22%3A111.12935%2C%22text%22%3A%22Hello_goOd%E5%9B%BDM%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Hello_goOd%E5%9B%BDM%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A252%2C%22height%22%3A90%7D\"></card></span></p><p data-lake-id=\"6a3dad1882ec06101ab123f1eb237917\">这种情况就相当于，当一个行内盒中有了文字之后，那么对齐的时候就会按照文字的基线去对齐</p><p data-lake-id=\"31264fc477bca0498f491f44969686f2\"><span style=\"background-color: #FADB14;\">当我们呢在行内盒再添加一个换行和文字时：</span></p><p data-lake-id=\"3b33f1324320a8b4c0303d45d3ea4960\"><span style=\"background-color: #FADB14;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608594527028-d79e9601-b55a-46f6-bf8c-42d524096579.png%22%2C%22originWidth%22%3A964%2C%22originHeight%22%3A354%2C%22name%22%3A%22image.png%22%2C%22size%22%3A94340%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A678.17615%2C%22y%22%3A46.891823%2C%22width%22%3A88.68584999999996%2C%22height%22%3A80.691017%2C%22text%22%3A%22M%22%7D%2C%7B%22x%22%3A7.3894663%2C%22y%22%3A183.56671%2C%22width%22%3A746.7904337%2C%22height%22%3A110.25229000000002%2C%22text%22%3A%22Hellogooc%E5%9B%BDN%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22M%20Hellogooc%E5%9B%BDN%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A241%2C%22height%22%3A89%7D\"></card></span></p><p data-lake-id=\"79d94ba5e584b0c9830fd8fdb1e5a335\">会按照最下面文字的基线去进行对齐</p><p data-lake-id=\"4cab90d438e454a3893cbe88840ec800\">上面的演示代码：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%20%3Cdiv%20style%3D%5C%22font-size%3A%2050px%3B%20line-height%3A%20100px%3B%20background-color%3A%20bisque%5C%22%3E%5Cn%20%20%20%20%20%20%3C!--%20line-top%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20top%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20blue%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20text-top%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20text-top%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20green%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20%E5%9F%BA%E7%BA%BF%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20baseline%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20red%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20text-bottom%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20text-bottom%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20green%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C!--%20line-bottom%20--%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20vertical-align%3A%20bottom%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%201px%3B%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%5C%22width%3A%20100vw%3B%20height%3A%201px%3B%20background-color%3A%20blue%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%3Cspan%3EHello%20good%20%E5%9B%BD%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3Cdiv%5Cn%20%20%20%20%20%20%20%20style%3D%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20display%3A%20inline-block%3B%5Cn%20%20%20%20%20%20%20%20%20%20line-height%3A%2070px%3B%5Cn%20%20%20%20%20%20%20%20%20%20width%3A%20100px%3B%5Cn%20%20%20%20%20%20%20%20%20%20height%3A%20150px%3B%5Cn%20%20%20%20%20%20%20%20%20%20background-color%3A%20cadetblue%3B%5Cn%20%20%20%20%20%20%20%20%5C%22%5Cn%20%20%20%20%20%20%3E%5Cn%20%20%20%20%20%20%20%20M%5Cn%20%20%20%20%20%20%20%20%3Cbr%20%2F%3E%5Cn%20%20%20%20%20%20%20%20N%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Qp1GI%22%2C%22autoWrap%22%3Atrue%7D\"></card><h2 data-lake-id=\"28ebe5b82533f718af9f3d5f722416c7\" id=\"kcqXf\">正常流的块级排布（BFC)</h2><h3 data-lake-id=\"77709b31fdbb87852ef13afc05ab1914\" id=\"60JPT\">float 和clear</h3><p data-lake-id=\"311793ee46e26d4f0b1a3c2b8247da9d\"><span style=\"background-color: #FADB14;\">float</span>：</p><ul data-lake-id=\"00505bc7c85f8b9b1ec3e0de5704b0f7\"><li data-lake-id=\"0958c6d9aeb834e7568681bcae716198\">严格来说是已经脱离文档流的，他在排列时可以完成图文环绕排的形式。</li><li data-lake-id=\"e4a2dbee9e401c106007d6fdc6c6af97\">多个float元素会依次排列，不会占据对方的空间</li><li data-lake-id=\"330749b93be053d2a72febc5607ced05\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854033824-58eec322-5bd5-4d17-a5b4-c8d43b51202c.png%22%2C%22originWidth%22%3A1400%2C%22originHeight%22%3A264%2C%22name%22%3A%22image.png%22%2C%22size%22%3A15569%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0.12760974%2C%22y%22%3A3.4164624%2C%22width%22%3A1288.03759026%2C%22height%22%3A20.3351276%2C%22text%22%3A%2233%E4%B9%89%E4%B9%89%E5%8F%8A%E6%B1%89%E6%B1%89%E6%B1%89%E6%B1%89%E6%88%8F%E5%BB%BA%E5%8F%8A%E4%B9%89%E5%8F%8A%E5%8F%8A%E4%BA%A4%E5%8F%8A%E5%A5%BD%E5%A5%BD%E4%BA%A4%22%7D%2C%7B%22x%22%3A0.9680707%2C%22y%22%3A25.83593%2C%22width%22%3A1288.6258293%2C%22height%22%3A18.989049999999995%2C%22text%22%3A%22%E6%B1%89%E5%B9%B6%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E4%BA%A4%E4%BA%A4%E5%8F%8A%E7%90%86%E5%A5%BD%E5%A5%BD%22%7D%2C%7B%22x%22%3A0.09399414%2C%22y%22%3A48.741432%2C%22width%22%3A1288.7599058600001%2C%22height%22%3A18.611288000000002%2C%22text%22%3A%22%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%AD%A6%E5%BB%BA%E5%A9%B7%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E7%BE%A4%E6%95%99%22%7D%2C%7B%22x%22%3A0.25661469%2C%22y%22%3A71.16191%2C%22width%22%3A898.24228531%2C%22height%22%3A19.045845999999997%2C%22text%22%3A%22%E5%AD%95%E4%BA%89%E4%BA%89%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E6%96%87%E5%AD%97%E5%AD%A6%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E8%BF%99%E5%AD%97%E6%96%87%E6%88%8F%E6%89%8B%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%2233%E4%B9%89%E4%B9%89%E5%8F%8A%E6%B1%89%E6%B1%89%E6%B1%89%E6%B1%89%E6%88%8F%E5%BB%BA%E5%8F%8A%E4%B9%89%E5%8F%8A%E5%8F%8A%E4%BA%A4%E5%8F%8A%E5%A5%BD%E5%A5%BD%E4%BA%A4%20%E6%B1%89%E5%B9%B6%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E4%BA%A4%E4%BA%A4%E5%8F%8A%E7%90%86%E5%A5%BD%E5%A5%BD%20%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%AD%A6%E5%BB%BA%E5%A9%B7%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E7%BE%A4%E6%95%99%20%E5%AD%95%E4%BA%89%E4%BA%89%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E6%96%87%E5%AD%97%E5%AD%A6%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E8%BF%99%E5%AD%97%E6%96%87%E6%88%8F%E6%89%8B%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A350%2C%22height%22%3A66%7D\"></card></li><li data-lake-id=\"6c3f9014b92318b0c528b3c6f545e09d\">float会造成重排的问题</li></ul><p data-lake-id=\"20c9cd8f492d4b6b32bcf1ca4d6396f2\"><br /></p><p data-lake-id=\"45fab0732fbdc995e31300d95f75989e\"><span style=\"background-color: #FADB14;\">clear：</span>与其说是清除浮动，不如说是在某个方向上找个干净的地方去完成浮动的排列</p><ul data-lake-id=\"edb795a9acab708540dba4f9a5da1aa9\"><li data-lake-id=\"79d213fec98ca5da5b3a8eff5821125b\">与上面同样的代码，只要给第二个float的红色div设置 <code>clear: right</code> 就可以实现下面这种效果</li><li data-lake-id=\"3bb292bcec03342d9dbfe694ab58405d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854110759-07d731d4-93c2-4726-97bf-81e708a9a0f3.png%22%2C%22originWidth%22%3A1405%2C%22originHeight%22%3A242%2C%22name%22%3A%22image.png%22%2C%22size%22%3A14317%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A2.9274025%2C%22y%22%3A3.2911284%2C%22width%22%3A1288.8486975%2C%22height%22%3A19.6389086%2C%22text%22%3A%22%E6%B1%89%E4%BA%A4%E4%BA%A4%E4%BA%A4%E6%88%91%E7%90%86%E5%8F%8A%E5%BB%BA%E5%BB%BA%E5%BB%BA%E7%90%86%E7%90%86%E7%90%86%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E5%AD%97%E5%A5%BD%E5%A5%BD%E5%BB%BA%22%7D%2C%7B%22x%22%3A3.1316736%2C%22y%22%3A25.28882%2C%22width%22%3A1288.4142264%2C%22height%22%3A19.966009999999997%2C%22text%22%3A%22%E9%A3%8E%E7%90%86%E5%BB%BA%E5%BB%BA%E7%BE%A4%E4%BA%A4%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E4%BA%89%E4%BA%89%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%A5%BD%E5%A5%BD%22%7D%2C%7B%22x%22%3A2.5727088%2C%22y%22%3A47.885204%2C%22width%22%3A1288.1477911999998%2C%22height%22%3A18.718835999999996%2C%22text%22%3A%22%E5%9C%B0%E5%A0%82%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%BB%BA%22%7D%2C%7B%22x%22%3A2.922349%2C%22y%22%3A69.93793%2C%22width%22%3A901.750151%2C%22height%22%3A19.30207%2C%22text%22%3A%22%E5%AD%95%E5%B0%B9%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%B0%B9%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E4%BA%89%E5%AD%95%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E5%AD%97%E4%B9%89%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%B1%89%E4%BA%A4%E4%BA%A4%E4%BA%A4%E6%88%91%E7%90%86%E5%8F%8A%E5%BB%BA%E5%BB%BA%E5%BB%BA%E7%90%86%E7%90%86%E7%90%86%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%A5%BD%E5%BB%BA%E5%AD%97%E5%A5%BD%E5%A5%BD%E5%BB%BA%20%E9%A3%8E%E7%90%86%E5%BB%BA%E5%BB%BA%E7%BE%A4%E4%BA%A4%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E4%BA%89%E4%BA%89%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%A5%BD%E5%A5%BD%20%E5%9C%B0%E5%A0%82%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%BB%BA%E5%BB%BA%E5%A5%BD%E5%A5%BD%E5%BB%BA%20%E5%AD%95%E5%B0%B9%E5%AD%97%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%AD%97%E5%B0%B9%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E4%BA%89%E5%AD%95%E6%96%87%E5%AD%97%E5%AD%97%E5%AD%A6%E5%AD%97%E4%B9%89%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%E6%96%87%E5%AD%97%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A351%2C%22height%22%3A60%7D\"></card></li><li data-lake-id=\"3577ac1f9104157893f90d99663ad0b4\">所以说clear更像是在右面找了一个干净的地方进行浮动排列</li></ul><p data-lake-id=\"944cf701035b8bc4df0a9c9d77b41e04\"><br /></p><h3 data-lake-id=\"0dd1e6177e4c1a3fbb865fbda8bd8127\" id=\"saUEj\">margin折叠</h3><p data-lake-id=\"5e0b09db878ebad5facc05661d1933c3\"><span style=\"color: #F5222D;\">这种现象只会发生在正常流中，在正常流中只有BFC才会有！</span></p><p data-lake-id=\"f661d97057bb4f0350b7a199bc9a56aa\"><span style=\"color: #F5222D;\"><br /></span></p><p data-lake-id=\"56b1cd0cd234e97d9e695625fed5ffe0\">上下两个块级元素都有margin的情况下，在排列的时候会选取一个margin的最大值作为其最终排版的结果</p><p data-lake-id=\"d55ce2953a338d43ac46d6555ce54aca\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854541877-e2831a64-ad81-4f32-a22f-9b377bd8495f.png%22%2C%22originWidth%22%3A1650%2C%22originHeight%22%3A1212%2C%22name%22%3A%22image.png%22%2C%22size%22%3A172874%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A109.81636%2C%22y%22%3A130.56981%2C%22width%22%3A152.57480999999999%2C%22height%22%3A42.21204%2C%22text%22%3A%22margin%22%7D%2C%7B%22x%22%3A1483.8938%2C%22y%22%3A142.57977%2C%22width%22%3A141.24579999999992%2C%22height%22%3A68.19286%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A109.51606%2C%22y%22%3A1132.9824%2C%22width%22%3A149.58361000000002%2C%22height%22%3A43.73759999999993%2C%22text%22%3A%22margin%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22margin%20BFC%20margin%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A256%2C%22height%22%3A188%7D\"></card><span>  =====&gt;  </span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608854549792-733a8918-101f-4602-bcbf-2c216a5fe612.png%22%2C%22originWidth%22%3A1714%2C%22originHeight%22%3A1098%2C%22name%22%3A%22image.png%22%2C%22size%22%3A173370%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A103.939224%2C%22y%22%3A114.79585%2C%22width%22%3A151.10952600000002%2C%22height%22%3A46.17642000000001%2C%22text%22%3A%22margin%22%7D%2C%7B%22x%22%3A1477.8066%2C%22y%22%3A132.05066%2C%22width%22%3A137.81850000000009%2C%22height%22%3A63.28827000000001%2C%22text%22%3A%22BFC%22%7D%2C%7B%22x%22%3A105.14836%2C%22y%22%3A921.3244%2C%22width%22%3A146.49756%2C%22height%22%3A41.708560000000034%2C%22text%22%3A%22margin%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22margin%20BFC%20margin%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A294%2C%22height%22%3A188%7D\"></card></p><p data-lake-id=\"47d3d5e2ff236c5a3c0b31d5aea6c333\"><span><br /></span></p><h3 data-lake-id=\"4606fc0695c168fd40c74f7a03d02085\" id=\"bVVTe\">BFC合并</h3><ul data-lake-id=\"712395906bd111ca0580f01a2a763b31\"><li data-lake-id=\"4bbcf4d264fafaf79859cadcb02a83a1\">Block Container： 里面有BFC</li></ul><ul data-lake-id=\"b31ac4e56ca3523a8f4e8df5d8e7dfaa\" data-lake-indent=\"1\"><li data-lake-id=\"b0ef805b8cfb307a9cbe39fe61fe4131\">能容纳正常流的盒，里面就有BFC</li></ul><ul data-lake-id=\"9a5b9024242283ed16e6cd31d11893d3\"><li data-lake-id=\"87b4cd912efdc034da20ce0a195b2a25\">BLock-level Box： 外面有BFC的</li><li data-lake-id=\"b7f869b813af671943f5e6e32037d973\">Block Box = Block container + Block-level Box：里外都有BFC的</li></ul><p data-lake-id=\"e108834f03621af259d5e12c7d05cfd1\"></p><p data-lake-id=\"5fc4f4d230e5dd8621774dab2bec281a\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 1,
    "comments_count": 0,
    "content_updated_at": "2020-12-25T23:29:27.000Z",
    "deleted_at": null,
    "created_at": "2020-12-20T23:28:21.000Z",
    "updated_at": "2020-12-25T23:29:27.000Z",
    "published_at": "2020-12-25T23:29:27.000Z",
    "first_published_at": "2020-12-21T00:17:41.000Z",
    "word_count": 1382,
    "cover": "https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608507917849-976f9a05-930c-4cd1-9ce0-3c9417f3bc20.jpeg",
    "description": "盒（Box)HTML代码中可以书写开始标签，结束标签，和自封闭标签一对起止标签，表示一个元素DOM树中存储的是元素和其他类型的节点（Node)CSS选择器选中的是元素CSS选择器选中的元素，在排版时可能产生多个盒排版和渲染的基本单位是盒盒模型盒模型分为两种：可以通过box-sizing来设置不...",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23836020,
    "slug": "sge22l",
    "title": "Pseudo-element: 伪元素",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n\n- ::before\n- ::after\n- ::first-line 选中第一行\n- ::first-letter 选中第一个字母\n\n\n<br />\n\n```html\n<div>\n  <::before/>\n  content content content content\n  content content content content\n  <::after/>\n</div>\n```\n\n\n```html\n<div>\n  <::first-letter>c</::first-letter>ontent content content content\n  content content content content\n</div>\n```\n\n<br />first-line 和first-letter支持的css属性设置：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png#align=left&display=inline&height=726&margin=%5Bobject%20Object%5D&name=image.png&originHeight=726&originWidth=1638&size=537528&status=done&style=none&width=1638)\n",
    "body_draft": "\n\n- ::before\n- ::after\n- ::first-line 选中第一行\n- ::first-letter 选中第一个字母\n\n\n<br />\n\n```html\n<div>\n  <::before/>\n  content content content content\n  content content content content\n  <::after/>\n</div>\n```\n\n\n```html\n<div>\n  <::first-letter>c</::first-letter>ontent content content content\n  content content content content\n</div>\n```\n\n<br />first-line 和first-letter支持的css属性设置：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png#align=left&display=inline&height=726&margin=%5Bobject%20Object%5D&name=image.png&originHeight=726&originWidth=1638&size=537528&status=done&style=none&width=1638)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B9%2C0%2C0%2C2%2C0%2C1%5D%2C%5B9%2C0%2C0%2C2%2C0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"5fc22a350270f34cb0f1b99d551ecb8f\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"5a43363ea8d899330d27598112b547c8\">::before</li><li data-lake-id=\"58960c8591c382d3f48447f231c4c02e\">::after</li><li data-lake-id=\"a80385f80f31cfb8656da26ea3d6cfab\">::first-line 选中第一行</li><li data-lake-id=\"dfba2db69723480b5a6ddfa53a3ab10c\">::first-letter 选中第一个字母</li></ul><p data-lake-id=\"06523544a70feeac6097aa70e804e6a3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cd3ddba15662d0787b73de8257081029\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"yd76t\" class=\"lake-card-margin\" data-language=\"html\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">::before</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  content content content content\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  content content content content\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">::after</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"6a203ddfea3fb96c580f8ad14c883981\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"KYTpq\" class=\"lake-card-margin\" data-language=\"html\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">::first-letter</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>c<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">::first-letter</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>ontent content content content\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  content content content content\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"c6b840718daa29b1839318d46e920665\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cb62ed6eef93991ecbb902ca783c42c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">first-line 和first-letter支持的css属性设置：</p><p data-lake-id=\"9e0b2022283264cff72c133d73bc037f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"726px\" style=\"visibility: visible; width: 1638px;\"></span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><br /></p><ul data-lake-id=\"5fc22a350270f34cb0f1b99d551ecb8f\"><li data-lake-id=\"5a43363ea8d899330d27598112b547c8\">::before</li><li data-lake-id=\"58960c8591c382d3f48447f231c4c02e\">::after</li><li data-lake-id=\"a80385f80f31cfb8656da26ea3d6cfab\">::first-line 选中第一行</li><li data-lake-id=\"dfba2db69723480b5a6ddfa53a3ab10c\">::first-letter 选中第一个字母</li></ul><p data-lake-id=\"06523544a70feeac6097aa70e804e6a3\"><br /></p><p data-lake-id=\"cd3ddba15662d0787b73de8257081029\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%3E%5Cn%20%20%3C%3A%3Abefore%2F%3E%5Cn%20%20content%20content%20content%20content%5Cn%20%20content%20content%20content%20content%5Cn%20%20%3C%3A%3Aafter%2F%3E%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22yd76t%22%7D\"></card><p data-lake-id=\"6a203ddfea3fb96c580f8ad14c883981\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%3E%5Cn%20%20%3C%3A%3Afirst-letter%3Ec%3C%2F%3A%3Afirst-letter%3Eontent%20content%20content%20content%5Cn%20%20content%20content%20content%20content%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22KYTpq%22%7D\"></card><p data-lake-id=\"c6b840718daa29b1839318d46e920665\"><br /></p><p data-lake-id=\"cb62ed6eef93991ecbb902ca783c42c2\">first-line 和first-letter支持的css属性设置：</p><p data-lake-id=\"9e0b2022283264cff72c133d73bc037f\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png%22%2C%22originWidth%22%3A1638%2C%22originHeight%22%3A726%2C%22name%22%3A%22image.png%22%2C%22size%22%3A537528%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1042.8158%2C%22y%22%3A60.120552%2C%22width%22%3A120.55619999999999%2C%22height%22%3A34.863118%2C%22text%22%3A%22font%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1039.526%2C%22y%22%3A119.43873%2C%22width%22%3A136.08979999999997%2C%22height%22%3A34.90420999999999%2C%22text%22%3A%22color%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A266.89853%2C%22y%22%3A166.58337%2C%22width%22%3A129.06781%2C%22height%22%3A37.34837999999999%2C%22text%22%3A%22font%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1038.4181%2C%22y%22%3A175.3281%2C%22width%22%3A242.50069999999982%2C%22height%22%3A38.64759999999998%2C%22text%22%3A%22background%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A267.6329%2C%22y%22%3A225.0428%2C%22width%22%3A136.34006%2C%22height%22%3A33.872149999999976%2C%22text%22%3A%22color%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1038.305%2C%22y%22%3A235.82811%2C%22width%22%3A228.1685%2C%22height%22%3A33.57392999999999%2C%22text%22%3A%22text-decoration%22%7D%2C%7B%22x%22%3A266.72635%2C%22y%22%3A282.35852%2C%22width%22%3A241.11782999999997%2C%22height%22%3A36.352660000000014%2C%22text%22%3A%22background%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1039.9164%2C%22y%22%3A294.4237%2C%22width%22%3A211.31359999999995%2C%22height%22%3A30.529200000000003%2C%22text%22%3A%22text-transfomm%22%7D%2C%7B%22x%22%3A264.725%2C%22y%22%3A340.9404%2C%22width%22%3A203.57864999999998%2C%22height%22%3A37.30286000000001%2C%22text%22%3A%22word-spacing%22%7D%2C%7B%22x%22%3A1040.2336%2C%22y%22%3A348.47632%2C%22width%22%3A202.96339999999987%2C%22height%22%3A40.082550000000026%2C%22text%22%3A%22letter-spacing%22%7D%2C%7B%22x%22%3A801.475%2C%22y%22%3A348.902%2C%22width%22%3A145.7727%2C%22height%22%3A32.51246000000003%2C%22text%22%3A%22first-letter%22%7D%2C%7B%22x%22%3A49.642776%2C%22y%22%3A369.80624%2C%22width%22%3A121.880934%2C%22height%22%3A28.139009999999985%2C%22text%22%3A%22first-line%22%7D%2C%7B%22x%22%3A266.95633%2C%22y%22%3A397.0053%2C%22width%22%3A205.99274000000003%2C%22height%22%3A38.58262000000002%2C%22text%22%3A%22letter-spacing%22%7D%2C%7B%22x%22%3A1040.4763%2C%22y%22%3A404.80484%2C%22width%22%3A198.80230000000006%2C%22height%22%3A36.356690000000015%2C%22text%22%3A%22word-spacing%22%7D%2C%7B%22x%22%3A266.34702%2C%22y%22%3A455.21033%2C%22width%22%3A225.87308000000002%2C%22height%22%3A34.25653%2C%22text%22%3A%22text-decoration%22%7D%2C%7B%22x%22%3A1040.7319%2C%22y%22%3A463.07367%2C%22width%22%3A164.5869%2C%22height%22%3A34.69549999999998%2C%22text%22%3A%22line-height%22%7D%2C%7B%22x%22%3A267.53824%2C%22y%22%3A512.5418%2C%22width%22%3A209.67004000000003%2C%22height%22%3A31.638000000000034%2C%22text%22%3A%22text-transfomm%22%7D%2C%7B%22x%22%3A1042.0607%2C%22y%22%3A521.7358%2C%22width%22%3A70.44560000000001%2C%22height%22%3A30.241499999999974%2C%22text%22%3A%22Float%22%7D%2C%7B%22x%22%3A268.5073%2C%22y%22%3A569.048%2C%22width%22%3A164.49987%2C%22height%22%3A35.41750000000002%2C%22text%22%3A%22line-height%22%7D%2C%7B%22x%22%3A1040.6978%2C%22y%22%3A580.32886%2C%22width%22%3A191.2119%2C%22height%22%3A35.23023999999998%2C%22text%22%3A%22vertical-align%22%7D%2C%7B%22x%22%3A1038.8503%2C%22y%22%3A631.3292%2C%22width%22%3A536.5138%2C%22height%22%3A39.66836000000001%2C%22text%22%3A%22%E7%9B%92%E6%A8%A1%E5%9E%8B%E7%B3%BB%E5%88%97%3Amargin%2Cpadding%2Cborde%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22font%E7%B3%BB%E5%88%97%20color%E7%B3%BB%E5%88%97%20font%E7%B3%BB%E5%88%97%20background%E7%B3%BB%E5%88%97%20color%E7%B3%BB%E5%88%97%20text-decoration%20background%E7%B3%BB%E5%88%97%20text-transfomm%20word-spacing%20letter-spacing%20first-letter%20first-line%20letter-spacing%20word-spacing%20text-decoration%20line-height%20text-transfomm%20Float%20line-height%20vertical-align%20%E7%9B%92%E6%A8%A1%E5%9E%8B%E7%B3%BB%E5%88%97%3Amargin%2Cpadding%2Cborde%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1638%2C%22height%22%3A726%7D\"></card></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\"><br /></p><ul data-lake-id=\"5fc22a350270f34cb0f1b99d551ecb8f\"><li data-lake-id=\"5a43363ea8d899330d27598112b547c8\">::before</li><li data-lake-id=\"58960c8591c382d3f48447f231c4c02e\">::after</li><li data-lake-id=\"a80385f80f31cfb8656da26ea3d6cfab\">::first-line 选中第一行</li><li data-lake-id=\"dfba2db69723480b5a6ddfa53a3ab10c\">::first-letter 选中第一个字母</li></ul><p data-lake-id=\"06523544a70feeac6097aa70e804e6a3\"><br /></p><p data-lake-id=\"cd3ddba15662d0787b73de8257081029\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%3E%5Cn%20%20%3C%3A%3Abefore%2F%3E%5Cn%20%20content%20content%20content%20content%5Cn%20%20content%20content%20content%20content%5Cn%20%20%3C%3A%3Aafter%2F%3E%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22yd76t%22%7D\"></card><p data-lake-id=\"6a203ddfea3fb96c580f8ad14c883981\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%3E%5Cn%20%20%3C%3A%3Afirst-letter%3Ec%3C%2F%3A%3Afirst-letter%3Eontent%20content%20content%20content%5Cn%20%20content%20content%20content%20content%5Cn%3C%2Fdiv%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22KYTpq%22%7D\"></card><p data-lake-id=\"c6b840718daa29b1839318d46e920665\"><br /></p><p data-lake-id=\"cb62ed6eef93991ecbb902ca783c42c2\">first-line 和first-letter支持的css属性设置：</p><p data-lake-id=\"9e0b2022283264cff72c133d73bc037f\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png%22%2C%22originWidth%22%3A1638%2C%22originHeight%22%3A726%2C%22name%22%3A%22image.png%22%2C%22size%22%3A537528%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1042.8158%2C%22y%22%3A60.120552%2C%22width%22%3A120.55619999999999%2C%22height%22%3A34.863118%2C%22text%22%3A%22font%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1039.526%2C%22y%22%3A119.43873%2C%22width%22%3A136.08979999999997%2C%22height%22%3A34.90420999999999%2C%22text%22%3A%22color%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A266.89853%2C%22y%22%3A166.58337%2C%22width%22%3A129.06781%2C%22height%22%3A37.34837999999999%2C%22text%22%3A%22font%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1038.4181%2C%22y%22%3A175.3281%2C%22width%22%3A242.50069999999982%2C%22height%22%3A38.64759999999998%2C%22text%22%3A%22background%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A267.6329%2C%22y%22%3A225.0428%2C%22width%22%3A136.34006%2C%22height%22%3A33.872149999999976%2C%22text%22%3A%22color%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1038.305%2C%22y%22%3A235.82811%2C%22width%22%3A228.1685%2C%22height%22%3A33.57392999999999%2C%22text%22%3A%22text-decoration%22%7D%2C%7B%22x%22%3A266.72635%2C%22y%22%3A282.35852%2C%22width%22%3A241.11782999999997%2C%22height%22%3A36.352660000000014%2C%22text%22%3A%22background%E7%B3%BB%E5%88%97%22%7D%2C%7B%22x%22%3A1039.9164%2C%22y%22%3A294.4237%2C%22width%22%3A211.31359999999995%2C%22height%22%3A30.529200000000003%2C%22text%22%3A%22text-transfomm%22%7D%2C%7B%22x%22%3A264.725%2C%22y%22%3A340.9404%2C%22width%22%3A203.57864999999998%2C%22height%22%3A37.30286000000001%2C%22text%22%3A%22word-spacing%22%7D%2C%7B%22x%22%3A1040.2336%2C%22y%22%3A348.47632%2C%22width%22%3A202.96339999999987%2C%22height%22%3A40.082550000000026%2C%22text%22%3A%22letter-spacing%22%7D%2C%7B%22x%22%3A801.475%2C%22y%22%3A348.902%2C%22width%22%3A145.7727%2C%22height%22%3A32.51246000000003%2C%22text%22%3A%22first-letter%22%7D%2C%7B%22x%22%3A49.642776%2C%22y%22%3A369.80624%2C%22width%22%3A121.880934%2C%22height%22%3A28.139009999999985%2C%22text%22%3A%22first-line%22%7D%2C%7B%22x%22%3A266.95633%2C%22y%22%3A397.0053%2C%22width%22%3A205.99274000000003%2C%22height%22%3A38.58262000000002%2C%22text%22%3A%22letter-spacing%22%7D%2C%7B%22x%22%3A1040.4763%2C%22y%22%3A404.80484%2C%22width%22%3A198.80230000000006%2C%22height%22%3A36.356690000000015%2C%22text%22%3A%22word-spacing%22%7D%2C%7B%22x%22%3A266.34702%2C%22y%22%3A455.21033%2C%22width%22%3A225.87308000000002%2C%22height%22%3A34.25653%2C%22text%22%3A%22text-decoration%22%7D%2C%7B%22x%22%3A1040.7319%2C%22y%22%3A463.07367%2C%22width%22%3A164.5869%2C%22height%22%3A34.69549999999998%2C%22text%22%3A%22line-height%22%7D%2C%7B%22x%22%3A267.53824%2C%22y%22%3A512.5418%2C%22width%22%3A209.67004000000003%2C%22height%22%3A31.638000000000034%2C%22text%22%3A%22text-transfomm%22%7D%2C%7B%22x%22%3A1042.0607%2C%22y%22%3A521.7358%2C%22width%22%3A70.44560000000001%2C%22height%22%3A30.241499999999974%2C%22text%22%3A%22Float%22%7D%2C%7B%22x%22%3A268.5073%2C%22y%22%3A569.048%2C%22width%22%3A164.49987%2C%22height%22%3A35.41750000000002%2C%22text%22%3A%22line-height%22%7D%2C%7B%22x%22%3A1040.6978%2C%22y%22%3A580.32886%2C%22width%22%3A191.2119%2C%22height%22%3A35.23023999999998%2C%22text%22%3A%22vertical-align%22%7D%2C%7B%22x%22%3A1038.8503%2C%22y%22%3A631.3292%2C%22width%22%3A536.5138%2C%22height%22%3A39.66836000000001%2C%22text%22%3A%22%E7%9B%92%E6%A8%A1%E5%9E%8B%E7%B3%BB%E5%88%97%3Amargin%2Cpadding%2Cborde%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22font%E7%B3%BB%E5%88%97%20color%E7%B3%BB%E5%88%97%20font%E7%B3%BB%E5%88%97%20background%E7%B3%BB%E5%88%97%20color%E7%B3%BB%E5%88%97%20text-decoration%20background%E7%B3%BB%E5%88%97%20text-transfomm%20word-spacing%20letter-spacing%20first-letter%20first-line%20letter-spacing%20word-spacing%20text-decoration%20line-height%20text-transfomm%20Float%20line-height%20vertical-align%20%E7%9B%92%E6%A8%A1%E5%9E%8B%E7%B3%BB%E5%88%97%3Amargin%2Cpadding%2Cborde%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1638%2C%22height%22%3A726%7D\"></card></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-20T11:14:10.000Z",
    "deleted_at": null,
    "created_at": "2020-12-20T11:07:45.000Z",
    "updated_at": "2020-12-20T11:14:11.000Z",
    "published_at": "2020-12-20T11:14:10.000Z",
    "first_published_at": "2020-12-20T11:14:10.000Z",
    "word_count": 69,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1608462752667-ab307525-ef39-4e99-a142-3fff7b41e87f.png?x-oss-process=image%2Fresize%2Cw_1500",
    "description": "::before::after::first-line 选中第一行::first-letter 选中第一个字母<div>   <::before/>   content content content content   content content content content   <:...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23821419,
    "slug": "xq2an5",
    "title": "Calculating specificity：计算优先级",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n\n<a name=\"XcycW\"></a>\n## 计算方法\n为给定元素计算它的优先级，遵循以下原则：\n\n- 计算ID选择器的值  A\n- 计算类选择、属性选择器、伪类选择器的值  B\n- 计算标签选择器和伪元素选择器的值  C\n- 忽略通用选择器*  \n\n\n\n1. :is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替\n> eg:\n> :is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替\n\n2. 类似的, :nth-child()、：nth-last-child()的计算值是一个伪类的值加上参数的计算值之和。\n> eg:\n> :nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值\n\n3. :where() 伪类的计算值为0\n> eg:\n> .item:where(em,#foo)  [0,1,0]  where伪类的值为0\n\n【A，B，C】\n> *                                       /* a=0 b=0 c=0 */\n> LI                                      /* a=0 b=0 c=1 */\n> UL LI                                  /* a=0 b=0 c=2 */\n> UL OL+LI                           /* a=0 b=0 c=3 */\n> H1 + *[REL=up]                  /* a=0 b=1 c=1 */\n> UL OL LI.red                      /* a=0 b=1 c=3 */\n> LI.red.level                        /* a=0 b=2 c=1 */\n> #x34y                               /* a=1 b=0 c=0 */\n> #s12:not(FOO)                   /* a=1 b=0 c=1 */\n> .foo :is(.bar, #baz)             /* a=1 b=1 c=0 */\n\n官方文档是按照3位来计算优先级的，就是上图中的：<br />[A, B, C]<br />还有一种计算方式是按照四位来计算的，最高位表示是否为行内样式：<br />[ L, A, B, C]\n\n<a name=\"7PN5y\"></a>\n## 练习\n```css\ndiv#a.b .c[id=x] \t\t[0, 1, 3, 1] \n#a:not(#b) \t\t\t\t\t[0, 2, 0, 0] \n*.a \t\t\t\t\t\t\t\t[0, 0, 1, 0] \ndiv.a \t\t\t\t\t\t\t[0, 0, 1, 1]\n```\n\n\n",
    "body_draft": "\n\n<a name=\"XcycW\"></a>\n## 计算方法\n为给定元素计算它的优先级，遵循以下原则：\n\n- 计算ID选择器的值  A\n- 计算类选择、属性选择器、伪类选择器的值  B\n- 计算标签选择器和伪元素选择器的值  C\n- 忽略通用选择器*  \n\n\n\n1. :is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替\n> eg:\n> :is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替\n\n2. 类似的, :nth-child()、：nth-last-child()的计算值是一个伪类的值加上参数的计算值之和。\n> eg:\n> :nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值\n\n3. :where() 伪类的计算值为0\n> eg:\n> .item:where(em,#foo)  [0,1,0]  where伪类的值为0\n\n【A，B，C】\n> *                                       /* a=0 b=0 c=0 */\n> LI                                      /* a=0 b=0 c=1 */\n> UL LI                                  /* a=0 b=0 c=2 */\n> UL OL+LI                           /* a=0 b=0 c=3 */\n> H1 + *[REL=up]                  /* a=0 b=1 c=1 */\n> UL OL LI.red                      /* a=0 b=1 c=3 */\n> LI.red.level                        /* a=0 b=2 c=1 */\n> #x34y                               /* a=1 b=0 c=0 */\n> #s12:not(FOO)                   /* a=1 b=0 c=1 */\n> .foo :is(.bar, #baz)             /* a=1 b=1 c=0 */\n\n官方文档是按照3位来计算优先级的，就是上图中的：<br />[A, B, C]<br />还有一种计算方式是按照四位来计算的，最高位表示是否为行内样式：<br />[ L, A, B, C]\n\n<a name=\"7PN5y\"></a>\n## 练习\n```css\ndiv#a.b .c[id=x] \t\t[0, 1, 3, 1] \n#a:not(#b) \t\t\t\t\t[0, 2, 0, 0] \n*.a \t\t\t\t\t\t\t\t[0, 0, 1, 0] \ndiv.a \t\t\t\t\t\t\t[0, 0, 1, 1]\n```\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B21%2C1%5D%2C%5B21%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"02777ae8055c6fd003a1e386d768854c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"013e7b2300896cc44c5e57299c6787cf\" id=\"XcycW\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">计算方法</h2><p data-lake-id=\"e3e71e53a1841ac431baf242d2fc5ae2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"7607028de0df5c24786b2dd125206693\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"cf13d5d9f975c3ba1ad85768fe8dcc8e\">计算ID选择器的值 &nbsp;A</li><li data-lake-id=\"845cede898d205725c9ee57970129da5\">计算类选择、属性选择器、伪类选择器的值 &nbsp;B</li><li data-lake-id=\"3163be7b5934cec0de1e6f5b895be2a8\">计算标签选择器和伪元素选择器的值 &nbsp;C</li><li data-lake-id=\"1a1f0ec9d9411e2757b9a9ce9eda765b\">忽略通用选择器* &nbsp;</li></ul><p data-lake-id=\"60558d28c532866b9a96032453eab678\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"4ca5d7f6dfd7683e2d3e4d7ed817ace9\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"4852658f4d2ce86605d13679779af9a6\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"3b89f8ac52a49a81d1d4d81fc5f591f2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"c7cbfccddce082009a350e6031bc3d85\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">:is(#id) &nbsp; [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"41d83972619a1a2d1c6b6a5f5ceb25fb\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"eaf2fcb7e61f67d77d38e83cd92216c6\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"02f018170e4355bfeb483dd3344cc3c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"538da71bbccddfa77b0737a64971a587\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">:nth-child(.item) &nbsp;[0,2,0] &nbsp;伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"bfd6a597351cbeed26200eb03100e186\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"db2359597607f85d1fdd38decc9e15c6\">:where() 伪类的计算值为0</li></ol><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"15bdc4bb40f18416cfd9dd9663505f1f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"429ab7f360f61f8a510d54096b911f4d\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">.item:where(em,#foo) &nbsp;[0,1,0] &nbsp;where伪类的值为0</p></blockquote><p data-lake-id=\"e5d371f0e0fd909af0f27919584449c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">【A，B，C】</p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"3278ae09387836bcd990f4466e53e1e4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* a=0 b=0 c=0 */</p><p data-lake-id=\"9485e43da70390a2112565014842f555\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">LI &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* a=0 b=0 c=1 */</p><p data-lake-id=\"82429a5349b5a8733ee563ea6586b9e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL LI &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* a=0 b=0 c=2 */</p><p data-lake-id=\"92538a3ce161ab96b16d8eefad30c859\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL OL+LI &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* a=0 b=0 c=3 */</p><p data-lake-id=\"46b3aa0fc3b1029d125d49b5178cbfd3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">H1 + *[REL=up] &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* a=0 b=1 c=1 */</p><p data-lake-id=\"1ee6525926c80e235253f58c4b272acd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL OL LI.red &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* a=0 b=1 c=3 */</p><p data-lake-id=\"afd7f4667068d8b22261ad9ac6e18c15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">LI.red.level &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* a=0 b=2 c=1 */</p><p data-lake-id=\"8a167839ded33dd47e684b3fcae004b3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">#x34y &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* a=1 b=0 c=0 */</p><p data-lake-id=\"f6595243de54d3bb14308ce5b8d542e3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">#s12:not(FOO) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* a=1 b=0 c=1 */</p><p data-lake-id=\"e30b6e8d56ebe9a87e22d167cff513a1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">.foo :is(.bar, #baz) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"f9a5d4ad8895734f9f1bf35b8b7c9520\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">官方文档是按照3位来计算优先级的，就是上图中的：</p><p data-lake-id=\"a1d535e91d0f62136ef4f1d12f5ab5e6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">[A, B, C]</span></p><p data-lake-id=\"8f75f7d9ffeb0e7ee5543b5c42f613ef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">还有一种计算方式是按照四位来计算的，<span style=\"color: #F5222D;\">最高位表示是否为行内样式</span>：</p><p data-lake-id=\"b34ac14365a22274e0bc0d091b950c19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">[ L, A, B, C]</span></p><p data-lake-id=\"03841f9e01e3ff6c73b5d64219199a86\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\"><br></span></p><p data-lake-id=\"eb4c14d0cea0162d9ea77b8847310468\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"0280b9c45d02a1491584d5eab9ecaf8d\" id=\"7PN5y\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">练习</h2><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"sc0yK\" class=\"lake-card-margin\" data-language=\"css\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#a</span><span class=\"cm-qualifier\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.b</span> <span class=\"cm-qualifier\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.c</span>[<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>=<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">x</span>]        [<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>] \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#a</span>:<span class=\"cm-variable-3\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">not</span>(<span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#b</span>)                  [<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>] \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">*<span class=\"cm-qualifier\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.a</span>                                 [<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>] \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-qualifier\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">.a</span>                           [<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>]</span></span></pre></div></div></div><p data-lake-id=\"fc299f62583d2f4697020707e2810d51\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"02777ae8055c6fd003a1e386d768854c\"><br /></p><h2 data-lake-id=\"013e7b2300896cc44c5e57299c6787cf\" id=\"XcycW\">计算方法</h2><p data-lake-id=\"e3e71e53a1841ac431baf242d2fc5ae2\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"7607028de0df5c24786b2dd125206693\"><li data-lake-id=\"cf13d5d9f975c3ba1ad85768fe8dcc8e\">计算ID选择器的值  A</li><li data-lake-id=\"845cede898d205725c9ee57970129da5\">计算类选择、属性选择器、伪类选择器的值  B</li><li data-lake-id=\"3163be7b5934cec0de1e6f5b895be2a8\">计算标签选择器和伪元素选择器的值  C</li><li data-lake-id=\"1a1f0ec9d9411e2757b9a9ce9eda765b\">忽略通用选择器*  </li></ul><p data-lake-id=\"60558d28c532866b9a96032453eab678\"><br /></p><ol data-lake-id=\"4ca5d7f6dfd7683e2d3e4d7ed817ace9\" start=\"1\"><li data-lake-id=\"4852658f4d2ce86605d13679779af9a6\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"3b89f8ac52a49a81d1d4d81fc5f591f2\">eg:</p><p data-lake-id=\"c7cbfccddce082009a350e6031bc3d85\" style=\"text-indent: 2em;\">:is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"41d83972619a1a2d1c6b6a5f5ceb25fb\" start=\"2\"><li data-lake-id=\"eaf2fcb7e61f67d77d38e83cd92216c6\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"02f018170e4355bfeb483dd3344cc3c2\">eg:</p><p data-lake-id=\"538da71bbccddfa77b0737a64971a587\" style=\"text-indent: 2em;\">:nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"bfd6a597351cbeed26200eb03100e186\" start=\"3\"><li data-lake-id=\"db2359597607f85d1fdd38decc9e15c6\">:where() 伪类的计算值为0</li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"15bdc4bb40f18416cfd9dd9663505f1f\">eg:</p><p data-lake-id=\"429ab7f360f61f8a510d54096b911f4d\" style=\"text-indent: 2em;\">.item:where(em,#foo)  [0,1,0]  where伪类的值为0</p></blockquote><p data-lake-id=\"e5d371f0e0fd909af0f27919584449c0\">【A，B，C】</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"3278ae09387836bcd990f4466e53e1e4\">*                                       /* a=0 b=0 c=0 */</p><p data-lake-id=\"9485e43da70390a2112565014842f555\">LI                                      /* a=0 b=0 c=1 */</p><p data-lake-id=\"82429a5349b5a8733ee563ea6586b9e1\">UL LI                                  /* a=0 b=0 c=2 */</p><p data-lake-id=\"92538a3ce161ab96b16d8eefad30c859\">UL OL+LI                           /* a=0 b=0 c=3 */</p><p data-lake-id=\"46b3aa0fc3b1029d125d49b5178cbfd3\">H1 + *[REL=up]                  /* a=0 b=1 c=1 */</p><p data-lake-id=\"1ee6525926c80e235253f58c4b272acd\">UL OL LI.red                      /* a=0 b=1 c=3 */</p><p data-lake-id=\"afd7f4667068d8b22261ad9ac6e18c15\">LI.red.level                        /* a=0 b=2 c=1 */</p><p data-lake-id=\"8a167839ded33dd47e684b3fcae004b3\">#x34y                               /* a=1 b=0 c=0 */</p><p data-lake-id=\"f6595243de54d3bb14308ce5b8d542e3\">#s12:not(FOO)                   /* a=1 b=0 c=1 */</p><p data-lake-id=\"e30b6e8d56ebe9a87e22d167cff513a1\">.foo :is(.bar, #baz)             <span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"f9a5d4ad8895734f9f1bf35b8b7c9520\">官方文档是按照3位来计算优先级的，就是上图中的：</p><p data-lake-id=\"a1d535e91d0f62136ef4f1d12f5ab5e6\"><span style=\"background-color: #FADB14;\">[A, B, C]</span></p><p data-lake-id=\"8f75f7d9ffeb0e7ee5543b5c42f613ef\">还有一种计算方式是按照四位来计算的，<span style=\"color: #F5222D;\">最高位表示是否为行内样式</span>：</p><p data-lake-id=\"b34ac14365a22274e0bc0d091b950c19\"><span style=\"background-color: #FADB14;\">[ L, A, B, C]</span></p><p data-lake-id=\"03841f9e01e3ff6c73b5d64219199a86\"><span style=\"background-color: #FADB14;\"><br /></span></p><p data-lake-id=\"eb4c14d0cea0162d9ea77b8847310468\"><br /></p><h2 data-lake-id=\"0280b9c45d02a1491584d5eab9ecaf8d\" id=\"7PN5y\">练习</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22div%23a.b%20.c%5Bid%3Dx%5D%20%5Ct%5Ct%5B0%2C%201%2C%203%2C%201%5D%20%5Cn%23a%3Anot(%23b)%20%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%202%2C%200%2C%200%5D%20%5Cn*.a%20%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%200%2C%201%2C%200%5D%20%5Cndiv.a%20%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%200%2C%201%2C%201%5D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22sc0yK%22%7D\"></card><p data-lake-id=\"fc299f62583d2f4697020707e2810d51\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"02777ae8055c6fd003a1e386d768854c\"><br /></p><h2 data-lake-id=\"013e7b2300896cc44c5e57299c6787cf\" id=\"XcycW\">计算方法</h2><p data-lake-id=\"e3e71e53a1841ac431baf242d2fc5ae2\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"7607028de0df5c24786b2dd125206693\"><li data-lake-id=\"cf13d5d9f975c3ba1ad85768fe8dcc8e\">计算ID选择器的值  A</li><li data-lake-id=\"845cede898d205725c9ee57970129da5\">计算类选择、属性选择器、伪类选择器的值  B</li><li data-lake-id=\"3163be7b5934cec0de1e6f5b895be2a8\">计算标签选择器和伪元素选择器的值  C</li><li data-lake-id=\"1a1f0ec9d9411e2757b9a9ce9eda765b\">忽略通用选择器*  </li></ul><p data-lake-id=\"60558d28c532866b9a96032453eab678\"><br /></p><ol data-lake-id=\"4ca5d7f6dfd7683e2d3e4d7ed817ace9\" start=\"1\"><li data-lake-id=\"4852658f4d2ce86605d13679779af9a6\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"3b89f8ac52a49a81d1d4d81fc5f591f2\">eg:</p><p data-lake-id=\"c7cbfccddce082009a350e6031bc3d85\" style=\"text-indent: 2em;\">:is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"41d83972619a1a2d1c6b6a5f5ceb25fb\" start=\"2\"><li data-lake-id=\"eaf2fcb7e61f67d77d38e83cd92216c6\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"02f018170e4355bfeb483dd3344cc3c2\">eg:</p><p data-lake-id=\"538da71bbccddfa77b0737a64971a587\" style=\"text-indent: 2em;\">:nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"bfd6a597351cbeed26200eb03100e186\" start=\"3\"><li data-lake-id=\"db2359597607f85d1fdd38decc9e15c6\">:where() 伪类的计算值为0</li></ol><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"15bdc4bb40f18416cfd9dd9663505f1f\">eg:</p><p data-lake-id=\"429ab7f360f61f8a510d54096b911f4d\" style=\"text-indent: 2em;\">.item:where(em,#foo)  [0,1,0]  where伪类的值为0</p></blockquote><p data-lake-id=\"e5d371f0e0fd909af0f27919584449c0\">【A，B，C】</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"3278ae09387836bcd990f4466e53e1e4\">*                                       /* a=0 b=0 c=0 */</p><p data-lake-id=\"9485e43da70390a2112565014842f555\">LI                                      /* a=0 b=0 c=1 */</p><p data-lake-id=\"82429a5349b5a8733ee563ea6586b9e1\">UL LI                                  /* a=0 b=0 c=2 */</p><p data-lake-id=\"92538a3ce161ab96b16d8eefad30c859\">UL OL+LI                           /* a=0 b=0 c=3 */</p><p data-lake-id=\"46b3aa0fc3b1029d125d49b5178cbfd3\">H1 + *[REL=up]                  /* a=0 b=1 c=1 */</p><p data-lake-id=\"1ee6525926c80e235253f58c4b272acd\">UL OL LI.red                      /* a=0 b=1 c=3 */</p><p data-lake-id=\"afd7f4667068d8b22261ad9ac6e18c15\">LI.red.level                        /* a=0 b=2 c=1 */</p><p data-lake-id=\"8a167839ded33dd47e684b3fcae004b3\">#x34y                               /* a=1 b=0 c=0 */</p><p data-lake-id=\"f6595243de54d3bb14308ce5b8d542e3\">#s12:not(FOO)                   /* a=1 b=0 c=1 */</p><p data-lake-id=\"e30b6e8d56ebe9a87e22d167cff513a1\">.foo :is(.bar, #baz)             <span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"f9a5d4ad8895734f9f1bf35b8b7c9520\">官方文档是按照3位来计算优先级的，就是上图中的：</p><p data-lake-id=\"a1d535e91d0f62136ef4f1d12f5ab5e6\"><span style=\"background-color: #FADB14;\">[A, B, C]</span></p><p data-lake-id=\"8f75f7d9ffeb0e7ee5543b5c42f613ef\">还有一种计算方式是按照四位来计算的，<span style=\"color: #F5222D;\">最高位表示是否为行内样式</span>：</p><p data-lake-id=\"b34ac14365a22274e0bc0d091b950c19\"><span style=\"background-color: #FADB14;\">[ L, A, B, C]</span></p><p data-lake-id=\"03841f9e01e3ff6c73b5d64219199a86\"><span style=\"background-color: #FADB14;\"><br /></span></p><p data-lake-id=\"eb4c14d0cea0162d9ea77b8847310468\"><br /></p><h2 data-lake-id=\"0280b9c45d02a1491584d5eab9ecaf8d\" id=\"7PN5y\">练习</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22div%23a.b%20.c%5Bid%3Dx%5D%20%5Ct%5Ct%5B0%2C%201%2C%203%2C%201%5D%20%5Cn%23a%3Anot(%23b)%20%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%202%2C%200%2C%200%5D%20%5Cn*.a%20%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%200%2C%201%2C%200%5D%20%5Cndiv.a%20%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5Ct%5B0%2C%200%2C%201%2C%201%5D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22sc0yK%22%7D\"></card><p data-lake-id=\"fc299f62583d2f4697020707e2810d51\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-20T00:37:55.000Z",
    "deleted_at": null,
    "created_at": "2020-12-20T00:34:25.000Z",
    "updated_at": "2020-12-20T00:37:55.000Z",
    "published_at": "2020-12-20T00:37:55.000Z",
    "first_published_at": "2020-12-20T00:35:20.000Z",
    "word_count": 516,
    "cover": null,
    "description": "计算方法为给定元素计算它的优先级，遵循以下原则：计算ID选择器的值  A计算类选择、属性选择器、伪类选择器的值  B计算标签选择器和伪元素选择器的值  C忽略通用选择器*  :is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替eg::is(#id)   ...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23821412,
    "slug": "ct385n",
    "title": "Pseudo-Class：伪类",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"Me9bp\"></a>\n## 链接/行为\n之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。<br />\n\n- :any-link  任何超链接\n- :link   没有访问过的超链接\n- :visited    已经访问过的超链接\n> any-link  可以看做是 link和visited的结合\n> Tips：\n> 一旦使用了link或者visited伪类之后，就没有办法去修改除了颜色以外的css属性了。\n> 这样做是为了浏览器安全考虑的。因为一旦你更改了像visited超链接的大小的时候，就可以让别人明显感受到你访问过哪些网站，这对于用户来说是不太容易接受的，就像泄漏了隐私一样，也不符合浏览器安全的相关策略。\n\n- :hover\n- :active\n- :focus\n- :target\n\n\n\n<a name=\"wy0RL\"></a>\n## 树结构\n\n- :empty\n- :nth-child()    从前让后数\n- :nth-last-child()  从后往前数\n- :first-child\n- :last-child\n- :only-child\n\n\n\n<a name=\"bAwmU\"></a>\n## 逻辑型\n\n- :not伪类\n- :where \n- :has   \n\n\n<br />在css书写过程中，我们不应该写过于复杂的选择器，这样一是对性能不好，二是可能自己HTML结构设计的有问题。\n",
    "body_draft": "<a name=\"Me9bp\"></a>\n## 链接/行为\n之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。<br />\n\n- :any-link  任何超链接\n- :link   没有访问过的超链接\n- :visited    已经访问过的超链接\n> any-link  可以看做是 link和visited的结合\n> Tips：\n> 一旦使用了link或者visited伪类之后，就没有办法去修改除了颜色以外的css属性了。\n> 这样做是为了浏览器安全考虑的。因为一旦你更改了像visited超链接的大小的时候，就可以让别人明显感受到你访问过哪些网站，这对于用户来说是不太容易接受的，就像泄漏了隐私一样，也不符合浏览器安全的相关策略。\n\n- :hover\n- :active\n- :focus\n- :target\n\n\n\n<a name=\"wy0RL\"></a>\n## 树结构\n\n- :empty\n- :nth-child()    从前让后数\n- :nth-last-child()  从后往前数\n- :first-child\n- :last-child\n- :only-child\n\n\n\n<a name=\"bAwmU\"></a>\n## 逻辑型\n\n- :not伪类\n- :where \n- :has   \n\n\n<br />在css书写过程中，我们不应该写过于复杂的选择器，这样一是对性能不好，二是可能自己HTML结构设计的有问题。\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B10%2C0%2C3%5D%2C%5B10%2C0%2C3%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"88650a7f1521cefbfa3483b8c17fee98\" id=\"Me9bp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">链接/行为</h2><p data-lake-id=\"0a2096f3c6498dae0aca53832f994308\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。</p><p data-lake-id=\"065de9cfad0ff07a495fe8ee92800365\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"e92f60ab718de2bc913e405efdedd7a5\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"180ba91c7e77d38125959630bf9247a3\">:any-link  任何超链接</li><li data-lake-id=\"12a1b96024760634f756dae189105c1e\">:link   没有访问过的超链接</li><li data-lake-id=\"c76a5b7972648cc7cbd3c75b6a5d1023\">:visited&nbsp; &nbsp;&nbsp;已经访问过的超链接</li></ul><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"d64f84754ccc2d1697a7a638067dbca0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">any-link  可以看做是 link和visited的结合</p><p data-lake-id=\"e24a8b7dd861ae65da962fd7f199ee8c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Tips：</p><p data-lake-id=\"75e8978377c487cb928147ad265c1b6d\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一旦使用了link或者visited伪类之后，就没有办法去修改除了颜色以外的css属性了。</p><p data-lake-id=\"1acddccea3c6cf23ea21e59f3d79f283\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样做是为了浏览器安全考虑的。因为一旦你更改了像visited超链接的大小的时候，就可以让别人明显感受到你访问过哪些网站，这对于用户来说是不太容易接受的，就像泄漏了隐私一样，也不符合浏览器安全的相关策略。</p></blockquote><ul data-lake-id=\"3e20abd1e392ea5c533faf80c4ad101d\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"b07ea4486eab412d8f7d42b1b928c6e8\">:hover</li><li data-lake-id=\"18a390a32ae7b025d4e304ce2a5267b2\">:active</li><li data-lake-id=\"17f45f9efca121e1be42e7ff910ffe9a\">:focus</li><li data-lake-id=\"e9c7160506ceff784feabbebe0e4be86\">:target</li></ul><p data-lake-id=\"dec75262145bc2750ec8064d0e4c455d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"54c4090f53037a5904d304f49bfb3a25\" id=\"wy0RL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">树结构</h2><ul data-lake-id=\"febaab4cf1e4cdc89cf203730cc5f478\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"642a7f0bc020f2ed0f49458c46abd761\">:empty</li><li data-lake-id=\"f5971f04a8afba36769f05c8074f6370\">:nth-child()&nbsp; &nbsp;&nbsp;从前让后数</li><li data-lake-id=\"079c666f4531dfb5b7d14151d65af180\">:nth-last-child()  从后往前数</li><li data-lake-id=\"5fab640217a7ea2bd47e75acaf29f759\">:first-child</li><li data-lake-id=\"df6ad8f92172f1bc4532e767692fc96d\">:last-child</li><li data-lake-id=\"d19efae249061e9a5a58538f3fb40819\">:only-child</li></ul><p data-lake-id=\"7668b09d0d03d17e0f5ca9efdf560ef2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"1b756a959a0fa34f25b9680a0274bdd2\" id=\"bAwmU\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">逻辑型</h2><ul data-lake-id=\"0cc1f7b1a59833188595e8fe64994317\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f0ed90843c35da1b7db89fd3f6333c9c\">:not伪类</li><li data-lake-id=\"094b9bd1828b8973616c88c8d050b6f0\">:where </li><li data-lake-id=\"8c5b30a428ef6c839aab1bc396fdb4b2\">:has   </li></ul><p data-lake-id=\"a3f7a1c167d6bfc76bd0cb2f5c55fb73\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"28bbdc572c1c8d578f619b31e1d6b6b1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在css书写过程中，我们不应该写过于复杂的选择器，这样一是对性能不好，二是可能自己HTML结构设计的有问题。</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"88650a7f1521cefbfa3483b8c17fee98\" id=\"Me9bp\">链接/行为</h2><p data-lake-id=\"0a2096f3c6498dae0aca53832f994308\">之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。</p><p data-lake-id=\"065de9cfad0ff07a495fe8ee92800365\"><br /></p><ul data-lake-id=\"e92f60ab718de2bc913e405efdedd7a5\"><li data-lake-id=\"180ba91c7e77d38125959630bf9247a3\">:any-link  任何超链接</li><li data-lake-id=\"12a1b96024760634f756dae189105c1e\">:link   没有访问过的超链接</li><li data-lake-id=\"c76a5b7972648cc7cbd3c75b6a5d1023\">:visited    已经访问过的超链接</li></ul><blockquote><p data-lake-id=\"d64f84754ccc2d1697a7a638067dbca0\">any-link  可以看做是 link和visited的结合</p><p data-lake-id=\"e24a8b7dd861ae65da962fd7f199ee8c\">Tips：</p><p data-lake-id=\"75e8978377c487cb928147ad265c1b6d\" style=\"text-indent: 2em;\">一旦使用了link或者visited伪类之后，就没有办法去修改除了颜色以外的css属性了。</p><p data-lake-id=\"1acddccea3c6cf23ea21e59f3d79f283\">这样做是为了浏览器安全考虑的。因为一旦你更改了像visited超链接的大小的时候，就可以让别人明显感受到你访问过哪些网站，这对于用户来说是不太容易接受的，就像泄漏了隐私一样，也不符合浏览器安全的相关策略。</p></blockquote><ul data-lake-id=\"3e20abd1e392ea5c533faf80c4ad101d\"><li data-lake-id=\"b07ea4486eab412d8f7d42b1b928c6e8\">:hover</li><li data-lake-id=\"18a390a32ae7b025d4e304ce2a5267b2\">:active</li><li data-lake-id=\"17f45f9efca121e1be42e7ff910ffe9a\">:focus</li><li data-lake-id=\"e9c7160506ceff784feabbebe0e4be86\">:target</li></ul><p data-lake-id=\"dec75262145bc2750ec8064d0e4c455d\"><br /></p><h2 data-lake-id=\"54c4090f53037a5904d304f49bfb3a25\" id=\"wy0RL\">树结构</h2><ul data-lake-id=\"febaab4cf1e4cdc89cf203730cc5f478\"><li data-lake-id=\"642a7f0bc020f2ed0f49458c46abd761\">:empty</li><li data-lake-id=\"f5971f04a8afba36769f05c8074f6370\">:nth-child()    从前让后数</li><li data-lake-id=\"079c666f4531dfb5b7d14151d65af180\">:nth-last-child()  从后往前数</li><li data-lake-id=\"5fab640217a7ea2bd47e75acaf29f759\">:first-child</li><li data-lake-id=\"df6ad8f92172f1bc4532e767692fc96d\">:last-child</li><li data-lake-id=\"d19efae249061e9a5a58538f3fb40819\">:only-child</li></ul><p data-lake-id=\"7668b09d0d03d17e0f5ca9efdf560ef2\"><br /></p><h2 data-lake-id=\"1b756a959a0fa34f25b9680a0274bdd2\" id=\"bAwmU\">逻辑型</h2><ul data-lake-id=\"0cc1f7b1a59833188595e8fe64994317\"><li data-lake-id=\"f0ed90843c35da1b7db89fd3f6333c9c\">:not伪类</li><li data-lake-id=\"094b9bd1828b8973616c88c8d050b6f0\">:where </li><li data-lake-id=\"8c5b30a428ef6c839aab1bc396fdb4b2\">:has   </li></ul><p data-lake-id=\"a3f7a1c167d6bfc76bd0cb2f5c55fb73\"><br /></p><p data-lake-id=\"28bbdc572c1c8d578f619b31e1d6b6b1\">在css书写过程中，我们不应该写过于复杂的选择器，这样一是对性能不好，二是可能自己HTML结构设计的有问题。</p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"88650a7f1521cefbfa3483b8c17fee98\" id=\"Me9bp\">链接/行为</h2><p data-lake-id=\"0a2096f3c6498dae0aca53832f994308\">之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。</p><p data-lake-id=\"065de9cfad0ff07a495fe8ee92800365\"><br /></p><ul data-lake-id=\"e92f60ab718de2bc913e405efdedd7a5\"><li data-lake-id=\"180ba91c7e77d38125959630bf9247a3\">:any-link  任何超链接</li><li data-lake-id=\"12a1b96024760634f756dae189105c1e\">:link   没有访问过的超链接</li><li data-lake-id=\"c76a5b7972648cc7cbd3c75b6a5d1023\">:visited    已经访问过的超链接</li></ul><blockquote><p data-lake-id=\"d64f84754ccc2d1697a7a638067dbca0\">any-link  可以看做是 link和visited的结合</p><p data-lake-id=\"e24a8b7dd861ae65da962fd7f199ee8c\">Tips：</p><p data-lake-id=\"75e8978377c487cb928147ad265c1b6d\" style=\"text-indent: 2em;\">一旦使用了link或者visited伪类之后，就没有办法去修改除了颜色以外的css属性了。</p><p data-lake-id=\"1acddccea3c6cf23ea21e59f3d79f283\">这样做是为了浏览器安全考虑的。因为一旦你更改了像visited超链接的大小的时候，就可以让别人明显感受到你访问过哪些网站，这对于用户来说是不太容易接受的，就像泄漏了隐私一样，也不符合浏览器安全的相关策略。</p></blockquote><ul data-lake-id=\"3e20abd1e392ea5c533faf80c4ad101d\"><li data-lake-id=\"b07ea4486eab412d8f7d42b1b928c6e8\">:hover</li><li data-lake-id=\"18a390a32ae7b025d4e304ce2a5267b2\">:active</li><li data-lake-id=\"17f45f9efca121e1be42e7ff910ffe9a\">:focus</li><li data-lake-id=\"e9c7160506ceff784feabbebe0e4be86\">:target</li></ul><p data-lake-id=\"dec75262145bc2750ec8064d0e4c455d\"><br /></p><h2 data-lake-id=\"54c4090f53037a5904d304f49bfb3a25\" id=\"wy0RL\">树结构</h2><ul data-lake-id=\"febaab4cf1e4cdc89cf203730cc5f478\"><li data-lake-id=\"642a7f0bc020f2ed0f49458c46abd761\">:empty</li><li data-lake-id=\"f5971f04a8afba36769f05c8074f6370\">:nth-child()    从前让后数</li><li data-lake-id=\"079c666f4531dfb5b7d14151d65af180\">:nth-last-child()  从后往前数</li><li data-lake-id=\"5fab640217a7ea2bd47e75acaf29f759\">:first-child</li><li data-lake-id=\"df6ad8f92172f1bc4532e767692fc96d\">:last-child</li><li data-lake-id=\"d19efae249061e9a5a58538f3fb40819\">:only-child</li></ul><p data-lake-id=\"7668b09d0d03d17e0f5ca9efdf560ef2\"><br /></p><h2 data-lake-id=\"1b756a959a0fa34f25b9680a0274bdd2\" id=\"bAwmU\">逻辑型</h2><ul data-lake-id=\"0cc1f7b1a59833188595e8fe64994317\"><li data-lake-id=\"f0ed90843c35da1b7db89fd3f6333c9c\">:not伪类</li><li data-lake-id=\"094b9bd1828b8973616c88c8d050b6f0\">:where </li><li data-lake-id=\"8c5b30a428ef6c839aab1bc396fdb4b2\">:has   </li></ul><p data-lake-id=\"a3f7a1c167d6bfc76bd0cb2f5c55fb73\"><br /></p><p data-lake-id=\"28bbdc572c1c8d578f619b31e1d6b6b1\">在css书写过程中，我们不应该写过于复杂的选择器，这样一是对性能不好，二是可能自己HTML结构设计的有问题。</p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-20T11:07:18.000Z",
    "deleted_at": null,
    "created_at": "2020-12-20T00:33:41.000Z",
    "updated_at": "2020-12-20T11:07:18.000Z",
    "published_at": "2020-12-20T11:07:18.000Z",
    "first_published_at": "2020-12-20T00:34:20.000Z",
    "word_count": 298,
    "cover": null,
    "description": "链接/行为之前这些伪类的实现都是为了超链接设计的，但是现在有很多伪类都可以用到其他元素上了。:any-link  任何超链接:link   没有访问过的超链接:visited    已经访问过的超链接any-link  可以看做是 link和visited的结合Tips：一旦使用了link或者...",
    "custom_description": null,
    "hits": 1,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23821362,
    "slug": "ne7x7u",
    "title": "Selector: 选择器",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"CPJIV\"></a>\n## 选择器\n<a name=\"tLjXi\"></a>\n### 简单选择器\n\n   - *\n   - div、svg、a\n   - .class\n   - #id\n   - [attr=value]\n   - :hover\n   - ::before\n<a name=\"cb7Jf\"></a>\n### 复合选择器\n\n   - <简单选择器><简单选择器><简单选择器>\n   - * 或者div必须写在最前面\n<a name=\"AEGJv\"></a>\n### 复杂选择器\n\n   - <复合选择器><sp><复合选择器>\n   - <复合选择器>\">\"<复合选择器>\n   - <复合选择器>\"~\"<复合选择器>\n   - <复合选择器>\"+\"<复合选择器>\n   - <复合选择器>\"||\"<复合选择器>\n\n\n\n",
    "body_draft": "<a name=\"CPJIV\"></a>\n## 选择器\n<a name=\"tLjXi\"></a>\n### 简单选择器\n\n   - *\n   - div、svg、a\n   - .class\n   - #id\n   - [attr=value]\n   - :hover\n   - ::before\n<a name=\"cb7Jf\"></a>\n### 复合选择器\n\n   - <简单选择器><简单选择器><简单选择器>\n   - * 或者div必须写在最前面\n<a name=\"AEGJv\"></a>\n### 复杂选择器\n\n   - <复合选择器><sp><复合选择器>\n   - <复合选择器>\">\"<复合选择器>\n   - <复合选择器>\"~\"<复合选择器>\n   - <复合选择器>\"+\"<复合选择器>\n   - <复合选择器>\"||\"<复合选择器>\n\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B7%2C0%2C0%5D%2C%5B22%2C0%2C0%2C13%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"721ee6a15ec459e0fbcf25dfa8190d32\" id=\"CPJIV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">选择器</h2><h3 data-lake-id=\"92899e346eedc702d3b0baf271b9c7ab\" id=\"tLjXi\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">简单选择器</h3><ul data-lake-id=\"f3b2289b13caf90ad9ee5e5fe9690374\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"fc3b2c6293893cef07158c23e6eac741\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"37878b2bd8e7a88c5907167cb8b1b8c8\">*</li><li data-lake-id=\"e4bcec79d67526d91796585b8fc7926e\">div、svg、a</li><li data-lake-id=\"1911b8b3bf9ea362d26f0a76583ef857\">.class</li><li data-lake-id=\"79de1db11b91eb2e3835d42b88cfdbe9\">#id</li><li data-lake-id=\"12f99a839010c3140dd23eb45a62bc3b\">[attr=value]</li><li data-lake-id=\"7cf6cf9d0175323a5e330956a052d74b\">:hover</li><li data-lake-id=\"d474f0d376cfb65f0fb71b6c2c4b9e86\">::before</li></ul></ul><h3 data-lake-id=\"d68205307db6b77fae5e7adb7a59c4d6\" id=\"cb7Jf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">复合选择器</h3><ul data-lake-id=\"8f2f926b50b985853ad6a64618fac95e\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"d9024d71928a126818a8442b88f28748\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"d310b7ee4a32180ced7eb368627a0942\">&lt;简单选择器&gt;<span>&lt;简单选择器&gt;</span><span>&lt;简单选择器&gt;</span></li><li data-lake-id=\"64e39d152126f0add370eaf0e91cb693\"><span>* 或者div必须写在最前面</span></li></ul></ul><h3 data-lake-id=\"793cb01243952e3433fcc678423156d7\" id=\"AEGJv\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">复杂选择器</h3><ul data-lake-id=\"38c4485cac3eebd080168966db66af96\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"6b92193784962f3c4fc4d38ffc633585\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"44b53dcde833d863f513b631209a519f\">&lt;复合选择器&gt;&lt;sp&gt;&lt;复合选择器&gt;</li><li data-lake-id=\"18122cbee096fee643021d24a1b4378a\"><span>&lt;复合选择器&gt;\"&gt;\"&lt;复合选择器&gt;</span></li><li data-lake-id=\"9b41c2516bf64d956689181a7520b156\"><span>&lt;复合选择器&gt;\"~\"&lt;复合选择器&gt;</span></li><li data-lake-id=\"4f4f22535b69431c604085ee387716e1\"><span>&lt;复合选择器&gt;\"+\"&lt;复合选择器&gt;</span></li><li data-lake-id=\"7bd98f921672ff60d71094f65cfd3858\"><span>&lt;复合选择器&gt;\"||\"&lt;复合选择器&gt;</span></li></ul></ul><p data-lake-id=\"2dc0cca32feb854ea0e834de71436534\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"721ee6a15ec459e0fbcf25dfa8190d32\" id=\"CPJIV\">选择器</h2><h3 data-lake-id=\"92899e346eedc702d3b0baf271b9c7ab\" id=\"tLjXi\">简单选择器</h3><ul data-lake-id=\"fc3b2c6293893cef07158c23e6eac741\" data-lake-indent=\"1\"><li data-lake-id=\"37878b2bd8e7a88c5907167cb8b1b8c8\">*</li><li data-lake-id=\"e4bcec79d67526d91796585b8fc7926e\">div、svg、a</li><li data-lake-id=\"1911b8b3bf9ea362d26f0a76583ef857\">.class</li><li data-lake-id=\"79de1db11b91eb2e3835d42b88cfdbe9\">#id</li><li data-lake-id=\"12f99a839010c3140dd23eb45a62bc3b\">[attr=value]</li><li data-lake-id=\"7cf6cf9d0175323a5e330956a052d74b\">:hover</li><li data-lake-id=\"d474f0d376cfb65f0fb71b6c2c4b9e86\">::before</li></ul><h3 data-lake-id=\"d68205307db6b77fae5e7adb7a59c4d6\" id=\"cb7Jf\">复合选择器</h3><ul data-lake-id=\"d9024d71928a126818a8442b88f28748\" data-lake-indent=\"1\"><li data-lake-id=\"d310b7ee4a32180ced7eb368627a0942\">&lt;简单选择器&gt;<span>&lt;简单选择器&gt;</span><span>&lt;简单选择器&gt;</span></li><li data-lake-id=\"64e39d152126f0add370eaf0e91cb693\"><span>* 或者div必须写在最前面</span></li></ul><h3 data-lake-id=\"793cb01243952e3433fcc678423156d7\" id=\"AEGJv\">复杂选择器</h3><ul data-lake-id=\"6b92193784962f3c4fc4d38ffc633585\" data-lake-indent=\"1\"><li data-lake-id=\"44b53dcde833d863f513b631209a519f\">&lt;复合选择器&gt;&lt;sp&gt;&lt;复合选择器&gt;</li><li data-lake-id=\"18122cbee096fee643021d24a1b4378a\"><span>&lt;复合选择器&gt;&quot;&gt;&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"9b41c2516bf64d956689181a7520b156\"><span>&lt;复合选择器&gt;&quot;~&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"4f4f22535b69431c604085ee387716e1\"><span>&lt;复合选择器&gt;&quot;+&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"7bd98f921672ff60d71094f65cfd3858\"><span>&lt;复合选择器&gt;&quot;||&quot;&lt;复合选择器&gt;</span></li></ul><p data-lake-id=\"2dc0cca32feb854ea0e834de71436534\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"721ee6a15ec459e0fbcf25dfa8190d32\" id=\"CPJIV\">选择器</h2><h3 data-lake-id=\"92899e346eedc702d3b0baf271b9c7ab\" id=\"tLjXi\">简单选择器</h3><ul data-lake-id=\"fc3b2c6293893cef07158c23e6eac741\" data-lake-indent=\"1\"><li data-lake-id=\"37878b2bd8e7a88c5907167cb8b1b8c8\">*</li><li data-lake-id=\"e4bcec79d67526d91796585b8fc7926e\">div、svg、a</li><li data-lake-id=\"1911b8b3bf9ea362d26f0a76583ef857\">.class</li><li data-lake-id=\"79de1db11b91eb2e3835d42b88cfdbe9\">#id</li><li data-lake-id=\"12f99a839010c3140dd23eb45a62bc3b\">[attr=value]</li><li data-lake-id=\"7cf6cf9d0175323a5e330956a052d74b\">:hover</li><li data-lake-id=\"d474f0d376cfb65f0fb71b6c2c4b9e86\">::before</li></ul><h3 data-lake-id=\"d68205307db6b77fae5e7adb7a59c4d6\" id=\"cb7Jf\">复合选择器</h3><ul data-lake-id=\"d9024d71928a126818a8442b88f28748\" data-lake-indent=\"1\"><li data-lake-id=\"d310b7ee4a32180ced7eb368627a0942\">&lt;简单选择器&gt;<span>&lt;简单选择器&gt;</span><span>&lt;简单选择器&gt;</span></li><li data-lake-id=\"64e39d152126f0add370eaf0e91cb693\"><span>* 或者div必须写在最前面</span></li></ul><h3 data-lake-id=\"793cb01243952e3433fcc678423156d7\" id=\"AEGJv\">复杂选择器</h3><ul data-lake-id=\"6b92193784962f3c4fc4d38ffc633585\" data-lake-indent=\"1\"><li data-lake-id=\"44b53dcde833d863f513b631209a519f\">&lt;复合选择器&gt;&lt;sp&gt;&lt;复合选择器&gt;</li><li data-lake-id=\"18122cbee096fee643021d24a1b4378a\"><span>&lt;复合选择器&gt;&quot;&gt;&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"9b41c2516bf64d956689181a7520b156\"><span>&lt;复合选择器&gt;&quot;~&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"4f4f22535b69431c604085ee387716e1\"><span>&lt;复合选择器&gt;&quot;+&quot;&lt;复合选择器&gt;</span></li><li data-lake-id=\"7bd98f921672ff60d71094f65cfd3858\"><span>&lt;复合选择器&gt;&quot;||&quot;&lt;复合选择器&gt;</span></li></ul><p data-lake-id=\"2dc0cca32feb854ea0e834de71436534\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-20T00:35:37.000Z",
    "deleted_at": null,
    "created_at": "2020-12-20T00:28:48.000Z",
    "updated_at": "2020-12-20T00:35:37.000Z",
    "published_at": "2020-12-20T00:35:37.000Z",
    "first_published_at": "2020-12-20T00:29:03.000Z",
    "word_count": 126,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1608250978909-9c16463c-8d73-4a22-b937-df1c7c258720.png",
    "description": "选择器简单选择器*div、svg、a.class#id[attr=value]:hover::before复合选择器<简单选择器><简单选择器><简单选择器>* 或者div必须写在最前面复杂选择器<复合选择器><sp><复合选择器><复合选择器>\">\"<复合选择器><复合选择器>\"~\"<复合选...",
    "custom_description": null,
    "hits": 2,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23565671,
    "slug": "gwhg28",
    "title": "翻译记录",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"5NDwZ\"></a>\n## Selectors Level 4\n\n\n<a name=\"2KxUj\"></a>\n### Selector syntax(选择器语法）\n一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过**连接符（Combinators）**分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。<br />\n<br />简单选择器序列（sequences of simple selectors)：由一连串没有使用**连接符（Combinators）**分割开来的简单选择器组合而成。通常是由标签选择器（h1、div）和通用选择器（*）作为开头。在简单选择器序列中不允许其他的标签选择器或者是通用选择器。<br />\n<br />简单选择器（simple selectors）：\n\n- 标签选择器(h1)\n- 通用选择器(*)\n- 属性选择器（[])\n- 类选择器(.)\n- id选择器(#)\n- 伪类选择器（::)\n\n\n<br />连接符（Combinators）：\n\n- whitespace 空格\n- >\n- +\n- ~\n\n\n\n<a name=\"jppwp\"></a>\n## Calculating a selector's specificity(计算选择器的优先级）\n为给定元素计算它的优先级，遵循以下原则：\n\n- 计算ID选择器的值  A\n- 计算类选择、属性选择器、伪类选择器的值  B\n- 计算标签选择器和伪元素选择器的值  C\n- 忽略通用选择器*  \n\n\n\n1. :is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替\n> eg:\n> :is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替\n\n2. 类似的, :nth-child()、：nth-last-child()的计算值是一个伪类的值加上参数的计算值之和。\n> eg:\n> :nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值\n\n3. :where() 伪类的计算值为0\n> eg:\n> .item:where(em,#foo)  [0,1,0]  where伪类的值为0\n\n【A，B，C】\n> *                                       /* a=0 b=0 c=0 */\n> LI                                      /* a=0 b=0 c=1 */\n> UL LI                                  /* a=0 b=0 c=2 */\n\n> UL OL+LI                           /* a=0 b=0 c=3 */\n\n> H1 + *[REL=up]                  /* a=0 b=1 c=1 */\n\n> UL OL LI.red                      /* a=0 b=1 c=3 */\n\n> LI.red.level                        /* a=0 b=2 c=1 */\n\n> #x34y                               /* a=1 b=0 c=0 */\n\n> #s12:not(FOO)                   /* a=1 b=0 c=1 */\n\n> .foo :is(.bar, #baz)             /* a=1 b=1 c=0 */\n\n\n<br />\n\n<a name=\"MND5y\"></a>\n## Grammar\n\n\n",
    "body_draft": "<a name=\"5NDwZ\"></a>\n## Selectors Level 4\n\n\n<a name=\"2KxUj\"></a>\n### Selector syntax(选择器语法）\n一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过**连接符（Combinators）**分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。<br />\n<br />简单选择器序列（sequences of simple selectors)：由一连串没有使用**连接符（Combinators）**分割开来的简单选择器组合而成。通常是由标签选择器（h1、div）和通用选择器（*）作为开头。在简单选择器序列中不允许其他的标签选择器或者是通用选择器。<br />\n<br />简单选择器（simple selectors）：\n\n- 标签选择器(h1)\n- 通用选择器(*)\n- 属性选择器（[])\n- 类选择器(.)\n- id选择器(#)\n- 伪类选择器（::)\n\n\n<br />连接符（Combinators）：\n\n- whitespace 空格\n- >\n- +\n- ~\n\n\n\n<a name=\"jppwp\"></a>\n## Calculating a selector's specificity(计算选择器的优先级）\n为给定元素计算它的优先级，遵循以下原则：\n\n- 计算ID选择器的值  A\n- 计算类选择、属性选择器、伪类选择器的值  B\n- 计算标签选择器和伪元素选择器的值  C\n- 忽略通用选择器*  \n\n\n\n1. :is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替\n> eg:\n> :is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替\n\n2. 类似的, :nth-child()、：nth-last-child()的计算值是一个伪类的值加上参数的计算值之和。\n> eg:\n> :nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值\n\n3. :where() 伪类的计算值为0\n> eg:\n> .item:where(em,#foo)  [0,1,0]  where伪类的值为0\n\n【A，B，C】\n> *                                       /* a=0 b=0 c=0 */\n> LI                                      /* a=0 b=0 c=1 */\n> UL LI                                  /* a=0 b=0 c=2 */\n\n> UL OL+LI                           /* a=0 b=0 c=3 */\n\n> H1 + *[REL=up]                  /* a=0 b=1 c=1 */\n\n> UL OL LI.red                      /* a=0 b=1 c=3 */\n\n> LI.red.level                        /* a=0 b=2 c=1 */\n\n> #x34y                               /* a=1 b=0 c=0 */\n\n> #s12:not(FOO)                   /* a=1 b=0 c=1 */\n\n> .foo :is(.bar, #baz)             /* a=1 b=1 c=0 */\n\n\n<br />\n\n<a name=\"MND5y\"></a>\n## Grammar\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B20%2C1%2C0%2C43%5D%2C%5B20%2C1%2C0%2C43%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"9a730385823e24cf8d9fdc2d7a25747c\" id=\"5NDwZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Selectors Level 4</h2><p data-lake-id=\"2593efadcf0de97eaac70c7dd4326f51\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"d33deae89052247590366234fa594bfb\" id=\"2KxUj\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Selector syntax(选择器语法）</h3><p data-lake-id=\"27ef6e1ce0717e5bc2b509a732c26c8b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过<strong>连接符（</strong><strong>Combinators）</strong>分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。</p><p data-lake-id=\"76f10f3755afe5a453109f7b638483c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6cf3911ce54221baf1fe00254f2e9ad0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">简单选择器序列（sequences of simple selectors)</span>：由一连串没有使用<strong>连接符（</strong><strong>Combinators）</strong>分割开来的简单选择器组合而成。通常是由标签选择器（h1、div）和通用选择器（*）作为开头。在简单选择器序列中不允许其他的标签选择器或者是通用选择器。</p><p data-lake-id=\"40b429e5ed3b30288244bb394376a590\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d34feecaee7fef0cb44d296e59927d73\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">简单选择器（simple selectors）</span>：</p><ul data-lake-id=\"8376efd7cfcc219a492837f9175715bd\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"d91d091f2eccf47a6e7bb6811e501af5\">标签选择器(h1)</li><li data-lake-id=\"b9917c6dcdd3a02a52b9d4695b7e2833\">通用选择器(*)</li><li data-lake-id=\"fba145955545ebddf05da792d12af1cd\">属性选择器（[])</li><li data-lake-id=\"fa3f75f3aa70fe7e7fe15d534f701166\">类选择器(.)</li><li data-lake-id=\"9b8f4559e4cd24bc0eb7f3bf87365967\">id选择器(#)</li><li data-lake-id=\"a1b71e24b7b8fb3046d1cfc6d19f0f8c\">伪类选择器（::)</li></ul><p data-lake-id=\"063bc1fde874b97233657b3a22d6daee\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9cbf59444fd38cae2115071669acc82f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">连接符（Combinators）：</span></p><ul data-lake-id=\"66edb1e8142f78498e09aeec078d33ed\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"10f6c2ed48db72a6db30e8bfd3bc7d27\">whitespace 空格</li><li data-lake-id=\"e4cb7940f281a4ad22bd5f5cb142ba37\">&gt;</li><li data-lake-id=\"c61cc241fbc35008f159d56f4cf09efd\">+</li><li data-lake-id=\"e15e05925295277f32e8e9e54c698110\">~</li></ul><p data-lake-id=\"845387113472a8d3f47339ee320e9506\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"06e424ab30ac34acb5fb5eb3fb464553\" id=\"jppwp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Calculating a selector's specificity(计算选择器的优先级）</h2><p data-lake-id=\"95536631aa85b283e518feca5b1b2fd3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"016463a82ae3656fe66d0982025b0572\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"7a2c6ce0df943f7d0d0aff7e48163cce\">计算ID选择器的值  A</li><li data-lake-id=\"7c9edaec256a5cfd97eb3249d7218aa8\">计算类选择、属性选择器、伪类选择器的值  B</li><li data-lake-id=\"308c971c6d08741fa8117d11ac4c8926\">计算标签选择器和伪元素选择器的值  C</li><li data-lake-id=\"cfe70938f1d6f3d9f48eef6c5bf0bc8c\">忽略通用选择器*  </li></ul><p data-lake-id=\"f8b66800859b9b5519ec39491ec9cb01\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"f804b5139d2ccf1d147a294e55eb2431\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e9eba209582c3c5721d7abcc1be6a56b\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"f4482a7fc81bc54f882e45bb69d36544\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"7853ad5149974adc957771c89b6a08a3\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">:is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"660d97cb3ac39e9761da3dc57df64b0b\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f45405da42a3f29e672bfa32901c9144\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"14e24aa7fe28bffd7c3b7fb176b1e01d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"ef2626fd3690a98a328398fd15888ac4\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">:nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"389796ecd140744708a25f0554567e06\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c5f2c891643e0da532153e2891ceb89d\">:where() 伪类的计算值为0</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"393fe42074a2413291efcd0016261342\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">eg:</p><p data-lake-id=\"4478bc86f0de9431f5cd95db801995ff\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">.item:where(em,#foo)  [0,1,0]  where伪类的值为0</p></blockquote><p data-lake-id=\"95c21ff19b139737f912665419e18419\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">【A，B，C】</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"a8622a51d50706b56ee3702a8bdced78\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; /* a=0 b=0 c=0 */</p><p data-lake-id=\"4bca29568fdb50cfb1b6e9debf7493f6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">LI &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/* a=0 b=0 c=1 */</p><p data-lake-id=\"5284c9d00bad9f8e33f238de56b59a02\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL LI &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/* a=0 b=0 c=2 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"beff58479ea451878871340590e1a887\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL OL+LI &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/* a=0 b=0 c=3 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"b0997772819607f202adff9359eef03b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">H1 + *[REL=up] &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;/* a=0 b=1 c=1 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"4bd7cffdb10afaaaf67c9a3b6a1f4e14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">UL OL LI.red &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /* a=0 b=1 c=3 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"1c332950972d8b5fce6dfeda14551190\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">LI.red.level &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;/* a=0 b=2 c=1 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"fb95daab9c7dc530358e3f07c8c518c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">#x34y &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;/* a=1 b=0 c=0 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"c2198a4fa88cb27df8bd4c9b724d332f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">#s12:not(FOO) &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;/* a=1 b=0 c=1 */</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"5ed50deda8b80a4dec54cbed91d69d0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">.foo :is(.bar, #baz) &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"5bde338e311c7f833c9d192cb2e68990\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b769920c7fb7dbaa86657ec241084f83\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"e225c1d0aaf9efb6cddb84304a1cd225\" id=\"MND5y\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Grammar</h2><p data-lake-id=\"af4bf96c094d25aaa7e93513b47c65da\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"9a730385823e24cf8d9fdc2d7a25747c\" id=\"5NDwZ\">Selectors Level 4</h2><p data-lake-id=\"2593efadcf0de97eaac70c7dd4326f51\"><br /></p><h3 data-lake-id=\"d33deae89052247590366234fa594bfb\" id=\"2KxUj\">Selector syntax(选择器语法）</h3><p data-lake-id=\"27ef6e1ce0717e5bc2b509a732c26c8b\">一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过<strong>连接符（</strong><strong>Combinators）</strong>分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。</p><p data-lake-id=\"76f10f3755afe5a453109f7b638483c3\"><br /></p><p data-lake-id=\"6cf3911ce54221baf1fe00254f2e9ad0\"><span style=\"background-color: #FADB14;\">简单选择器序列（sequences of simple selectors)</span>：由一连串没有使用<strong>连接符（</strong><strong>Combinators）</strong>分割开来的简单选择器组合而成。通常是由标签选择器（h1、div）和通用选择器（*）作为开头。在简单选择器序列中不允许其他的标签选择器或者是通用选择器。</p><p data-lake-id=\"40b429e5ed3b30288244bb394376a590\"><br /></p><p data-lake-id=\"d34feecaee7fef0cb44d296e59927d73\"><span style=\"background-color: #FADB14;\">简单选择器（simple selectors）</span>：</p><ul data-lake-id=\"8376efd7cfcc219a492837f9175715bd\"><li data-lake-id=\"d91d091f2eccf47a6e7bb6811e501af5\">标签选择器(h1)</li><li data-lake-id=\"b9917c6dcdd3a02a52b9d4695b7e2833\">通用选择器(*)</li><li data-lake-id=\"fba145955545ebddf05da792d12af1cd\">属性选择器（[])</li><li data-lake-id=\"fa3f75f3aa70fe7e7fe15d534f701166\">类选择器(.)</li><li data-lake-id=\"9b8f4559e4cd24bc0eb7f3bf87365967\">id选择器(#)</li><li data-lake-id=\"a1b71e24b7b8fb3046d1cfc6d19f0f8c\">伪类选择器（::)</li></ul><p data-lake-id=\"063bc1fde874b97233657b3a22d6daee\"><br /></p><p data-lake-id=\"9cbf59444fd38cae2115071669acc82f\"><span style=\"background-color: #FADB14;\">连接符（Combinators）：</span></p><ul data-lake-id=\"66edb1e8142f78498e09aeec078d33ed\"><li data-lake-id=\"10f6c2ed48db72a6db30e8bfd3bc7d27\">whitespace 空格</li><li data-lake-id=\"e4cb7940f281a4ad22bd5f5cb142ba37\">&gt;</li><li data-lake-id=\"c61cc241fbc35008f159d56f4cf09efd\">+</li><li data-lake-id=\"e15e05925295277f32e8e9e54c698110\">~</li></ul><p data-lake-id=\"845387113472a8d3f47339ee320e9506\"><br /></p><h2 data-lake-id=\"06e424ab30ac34acb5fb5eb3fb464553\" id=\"jppwp\">Calculating a selector's specificity(计算选择器的优先级）</h2><p data-lake-id=\"95536631aa85b283e518feca5b1b2fd3\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"016463a82ae3656fe66d0982025b0572\"><li data-lake-id=\"7a2c6ce0df943f7d0d0aff7e48163cce\">计算ID选择器的值  A</li><li data-lake-id=\"7c9edaec256a5cfd97eb3249d7218aa8\">计算类选择、属性选择器、伪类选择器的值  B</li><li data-lake-id=\"308c971c6d08741fa8117d11ac4c8926\">计算标签选择器和伪元素选择器的值  C</li><li data-lake-id=\"cfe70938f1d6f3d9f48eef6c5bf0bc8c\">忽略通用选择器*  </li></ul><p data-lake-id=\"f8b66800859b9b5519ec39491ec9cb01\"><br /></p><ol data-lake-id=\"f804b5139d2ccf1d147a294e55eb2431\" start=\"1\"><li data-lake-id=\"e9eba209582c3c5721d7abcc1be6a56b\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote><p data-lake-id=\"f4482a7fc81bc54f882e45bb69d36544\">eg:</p><p data-lake-id=\"7853ad5149974adc957771c89b6a08a3\" style=\"text-indent: 2em;\">:is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"660d97cb3ac39e9761da3dc57df64b0b\" start=\"2\"><li data-lake-id=\"f45405da42a3f29e672bfa32901c9144\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote><p data-lake-id=\"14e24aa7fe28bffd7c3b7fb176b1e01d\">eg:</p><p data-lake-id=\"ef2626fd3690a98a328398fd15888ac4\" style=\"text-indent: 2em;\">:nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"389796ecd140744708a25f0554567e06\" start=\"3\"><li data-lake-id=\"c5f2c891643e0da532153e2891ceb89d\">:where() 伪类的计算值为0</li></ol><blockquote><p data-lake-id=\"393fe42074a2413291efcd0016261342\">eg:</p><p data-lake-id=\"4478bc86f0de9431f5cd95db801995ff\" style=\"text-indent: 2em;\">.item:where(em,#foo)  [0,1,0]  where伪类的值为0</p></blockquote><p data-lake-id=\"95c21ff19b139737f912665419e18419\">【A，B，C】</p><blockquote><p data-lake-id=\"a8622a51d50706b56ee3702a8bdced78\">*                                       /* a=0 b=0 c=0 */</p><p data-lake-id=\"4bca29568fdb50cfb1b6e9debf7493f6\">LI                                      /* a=0 b=0 c=1 */</p><p data-lake-id=\"5284c9d00bad9f8e33f238de56b59a02\">UL LI                                  /* a=0 b=0 c=2 */</p></blockquote><blockquote><p data-lake-id=\"beff58479ea451878871340590e1a887\">UL OL+LI                           /* a=0 b=0 c=3 */</p></blockquote><blockquote><p data-lake-id=\"b0997772819607f202adff9359eef03b\">H1 + *[REL=up]                  /* a=0 b=1 c=1 */</p></blockquote><blockquote><p data-lake-id=\"4bd7cffdb10afaaaf67c9a3b6a1f4e14\">UL OL LI.red                      /* a=0 b=1 c=3 */</p></blockquote><blockquote><p data-lake-id=\"1c332950972d8b5fce6dfeda14551190\">LI.red.level                        /* a=0 b=2 c=1 */</p></blockquote><blockquote><p data-lake-id=\"fb95daab9c7dc530358e3f07c8c518c3\">#x34y                               /* a=1 b=0 c=0 */</p></blockquote><blockquote><p data-lake-id=\"c2198a4fa88cb27df8bd4c9b724d332f\">#s12:not(FOO)                   /* a=1 b=0 c=1 */</p></blockquote><blockquote><p data-lake-id=\"5ed50deda8b80a4dec54cbed91d69d0b\">.foo :is(.bar, #baz)             <span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"5bde338e311c7f833c9d192cb2e68990\"><br /></p><p data-lake-id=\"b769920c7fb7dbaa86657ec241084f83\"><br /></p><h2 data-lake-id=\"e225c1d0aaf9efb6cddb84304a1cd225\" id=\"MND5y\">Grammar</h2><p data-lake-id=\"af4bf96c094d25aaa7e93513b47c65da\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"9a730385823e24cf8d9fdc2d7a25747c\" id=\"5NDwZ\">Selectors Level 4</h2><p data-lake-id=\"2593efadcf0de97eaac70c7dd4326f51\"><br /></p><h3 data-lake-id=\"d33deae89052247590366234fa594bfb\" id=\"2KxUj\">Selector syntax(选择器语法）</h3><p data-lake-id=\"27ef6e1ce0717e5bc2b509a732c26c8b\">一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过<strong>连接符（</strong><strong>Combinators）</strong>分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。</p><p data-lake-id=\"76f10f3755afe5a453109f7b638483c3\"><br /></p><p data-lake-id=\"6cf3911ce54221baf1fe00254f2e9ad0\"><span style=\"background-color: #FADB14;\">简单选择器序列（sequences of simple selectors)</span>：由一连串没有使用<strong>连接符（</strong><strong>Combinators）</strong>分割开来的简单选择器组合而成。通常是由标签选择器（h1、div）和通用选择器（*）作为开头。在简单选择器序列中不允许其他的标签选择器或者是通用选择器。</p><p data-lake-id=\"40b429e5ed3b30288244bb394376a590\"><br /></p><p data-lake-id=\"d34feecaee7fef0cb44d296e59927d73\"><span style=\"background-color: #FADB14;\">简单选择器（simple selectors）</span>：</p><ul data-lake-id=\"8376efd7cfcc219a492837f9175715bd\"><li data-lake-id=\"d91d091f2eccf47a6e7bb6811e501af5\">标签选择器(h1)</li><li data-lake-id=\"b9917c6dcdd3a02a52b9d4695b7e2833\">通用选择器(*)</li><li data-lake-id=\"fba145955545ebddf05da792d12af1cd\">属性选择器（[])</li><li data-lake-id=\"fa3f75f3aa70fe7e7fe15d534f701166\">类选择器(.)</li><li data-lake-id=\"9b8f4559e4cd24bc0eb7f3bf87365967\">id选择器(#)</li><li data-lake-id=\"a1b71e24b7b8fb3046d1cfc6d19f0f8c\">伪类选择器（::)</li></ul><p data-lake-id=\"063bc1fde874b97233657b3a22d6daee\"><br /></p><p data-lake-id=\"9cbf59444fd38cae2115071669acc82f\"><span style=\"background-color: #FADB14;\">连接符（Combinators）：</span></p><ul data-lake-id=\"66edb1e8142f78498e09aeec078d33ed\"><li data-lake-id=\"10f6c2ed48db72a6db30e8bfd3bc7d27\">whitespace 空格</li><li data-lake-id=\"e4cb7940f281a4ad22bd5f5cb142ba37\">&gt;</li><li data-lake-id=\"c61cc241fbc35008f159d56f4cf09efd\">+</li><li data-lake-id=\"e15e05925295277f32e8e9e54c698110\">~</li></ul><p data-lake-id=\"845387113472a8d3f47339ee320e9506\"><br /></p><h2 data-lake-id=\"06e424ab30ac34acb5fb5eb3fb464553\" id=\"jppwp\">Calculating a selector's specificity(计算选择器的优先级）</h2><p data-lake-id=\"95536631aa85b283e518feca5b1b2fd3\">为给定元素计算它的优先级，遵循以下原则：</p><ul data-lake-id=\"016463a82ae3656fe66d0982025b0572\"><li data-lake-id=\"7a2c6ce0df943f7d0d0aff7e48163cce\">计算ID选择器的值  A</li><li data-lake-id=\"7c9edaec256a5cfd97eb3249d7218aa8\">计算类选择、属性选择器、伪类选择器的值  B</li><li data-lake-id=\"308c971c6d08741fa8117d11ac4c8926\">计算标签选择器和伪元素选择器的值  C</li><li data-lake-id=\"cfe70938f1d6f3d9f48eef6c5bf0bc8c\">忽略通用选择器*  </li></ul><p data-lake-id=\"f8b66800859b9b5519ec39491ec9cb01\"><br /></p><ol data-lake-id=\"f804b5139d2ccf1d147a294e55eb2431\" start=\"1\"><li data-lake-id=\"e9eba209582c3c5721d7abcc1be6a56b\"><span style=\"color: #F5222D;\">:is()、:not()、:has(),这三个伪类选择器的计算值将被其中优先级最高的值所代替</span></li></ol><blockquote><p data-lake-id=\"f4482a7fc81bc54f882e45bb69d36544\">eg:</p><p data-lake-id=\"7853ad5149974adc957771c89b6a08a3\" style=\"text-indent: 2em;\">:is(#id)   [1,0,0] 伪类的优先级值B被id的高优先值所代替</p></blockquote><ol data-lake-id=\"660d97cb3ac39e9761da3dc57df64b0b\" start=\"2\"><li data-lake-id=\"f45405da42a3f29e672bfa32901c9144\">类似的, :nth-child()、：nth-last-child()的计算值是一个<span style=\"color: #F5222D;\">伪类的值加上参数的计算值之和</span>。</li></ol><blockquote><p data-lake-id=\"14e24aa7fe28bffd7c3b7fb176b1e01d\">eg:</p><p data-lake-id=\"ef2626fd3690a98a328398fd15888ac4\" style=\"text-indent: 2em;\">:nth-child(.item)  [0,2,0]  伪类的值加上参数.item的值</p></blockquote><ol data-lake-id=\"389796ecd140744708a25f0554567e06\" start=\"3\"><li data-lake-id=\"c5f2c891643e0da532153e2891ceb89d\">:where() 伪类的计算值为0</li></ol><blockquote><p data-lake-id=\"393fe42074a2413291efcd0016261342\">eg:</p><p data-lake-id=\"4478bc86f0de9431f5cd95db801995ff\" style=\"text-indent: 2em;\">.item:where(em,#foo)  [0,1,0]  where伪类的值为0</p></blockquote><p data-lake-id=\"95c21ff19b139737f912665419e18419\">【A，B，C】</p><blockquote><p data-lake-id=\"a8622a51d50706b56ee3702a8bdced78\">*                                       /* a=0 b=0 c=0 */</p><p data-lake-id=\"4bca29568fdb50cfb1b6e9debf7493f6\">LI                                      /* a=0 b=0 c=1 */</p><p data-lake-id=\"5284c9d00bad9f8e33f238de56b59a02\">UL LI                                  /* a=0 b=0 c=2 */</p></blockquote><blockquote><p data-lake-id=\"beff58479ea451878871340590e1a887\">UL OL+LI                           /* a=0 b=0 c=3 */</p></blockquote><blockquote><p data-lake-id=\"b0997772819607f202adff9359eef03b\">H1 + *[REL=up]                  /* a=0 b=1 c=1 */</p></blockquote><blockquote><p data-lake-id=\"4bd7cffdb10afaaaf67c9a3b6a1f4e14\">UL OL LI.red                      /* a=0 b=1 c=3 */</p></blockquote><blockquote><p data-lake-id=\"1c332950972d8b5fce6dfeda14551190\">LI.red.level                        /* a=0 b=2 c=1 */</p></blockquote><blockquote><p data-lake-id=\"fb95daab9c7dc530358e3f07c8c518c3\">#x34y                               /* a=1 b=0 c=0 */</p></blockquote><blockquote><p data-lake-id=\"c2198a4fa88cb27df8bd4c9b724d332f\">#s12:not(FOO)                   /* a=1 b=0 c=1 */</p></blockquote><blockquote><p data-lake-id=\"5ed50deda8b80a4dec54cbed91d69d0b\">.foo :is(.bar, #baz)             <span>/* a=1 b=1 c=0 */</span></p></blockquote><p data-lake-id=\"5bde338e311c7f833c9d192cb2e68990\"><br /></p><p data-lake-id=\"b769920c7fb7dbaa86657ec241084f83\"><br /></p><h2 data-lake-id=\"e225c1d0aaf9efb6cddb84304a1cd225\" id=\"MND5y\">Grammar</h2><p data-lake-id=\"af4bf96c094d25aaa7e93513b47c65da\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-18T00:22:40.000Z",
    "deleted_at": null,
    "created_at": "2020-12-14T23:42:53.000Z",
    "updated_at": "2020-12-20T00:31:50.000Z",
    "published_at": "2020-12-18T00:22:40.000Z",
    "first_published_at": "2020-12-15T00:05:57.000Z",
    "word_count": 599,
    "cover": null,
    "description": "Selectors Level 4Selector syntax(选择器语法）一个选择器是由一个或者多个简单选择器序列组合而成的，他们通过连接符（Combinators）分割开。并且在一个选择器中的最后一个简单选择器的末尾可以添加一个伪元素。简单选择器序列（sequences of simpl...",
    "custom_description": null,
    "hits": 5,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23504552,
    "slug": "gpovl9",
    "title": "CSS结构",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。<br />现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。<br />\n\n<a name=\"Kw35w\"></a>\n## CSS2.1语法\n\n- [css2.1Grammar 中文对照版](http://www.ayqy.net/doc/css2-1/grammar.html)\n\n\n\n<a name=\"JPCAT\"></a>\n## 总体结构\n一个样式文件从上到下的顺序结构：<br />\n\n1. @charset\n> ` @charset 'UTF-8'; ` \n> 声明css文件的字符编码标准。\n> - 必须在样式表的第一行声明\n> - 如果有多个@charset声明，那么只有第一个会生效\n> - 无法在HTML的style标签里使用该at-rule规则\n> \nTip:\n> 在样式表中声明字符编码有很多种方式，浏览器会按照以下顺序去尝试确定文件的编码方式（只要找到一种就会停止并得出结果）：\n> 1. 文件开头的 [Unicode byte-order](http://en.wikipedia.org/wiki/Byte_order_mark) 字符值\n> 1. 由Content-type确定：HTTP协议中的 charset 属性给出的值或用于提供样式表的协议中的等效值\n> 1. CSS @rule规则：@charset\n> 1. 假设文档上是UTF-8的格式\n\n2. @import\n2. rules （这部分是我们日常最常用到的部分）\n   1. @media\n   1. @page\n   1. rule\n\n\n\n<a name=\"JDII6\"></a>\n## CSS规则的结构\n```css\ndiv /* selector */ {\n  /* key */background-color: /* value */red;\n}\n```\n由上面的css代码可以明确css规则的结构分为以下两个部分：\n\n1. Selector（选择器）\n1. Declare（声明）\n   1. key\n   1. value\n\n\n<br />\n<br />\n\n<a name=\"u8p83\"></a>\n## 爬取w3c的css规则\n```javascript\nJSON.stringify(\n  Array.prototype.slice.call(document.querySelector('#container').children)\n  \t.filter(e=>e.getAttribute('data-tag').match(/css/))\n  \t.map(e=>(\n      {name:e.children[1].children[0].innerText,\n       url:e.children[1].children[0].href\n      })\n     )\n)\n```\n\n\n<a name=\"ReQML\"></a>\n## 思维导图\n\n\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608424173469-cf7b1df7-98e3-4d61-aa22-74c472f7e380.jpeg)",
    "body_draft": "因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。<br />现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。<br />\n\n<a name=\"Kw35w\"></a>\n## CSS2.1语法\n\n- [css2.1Grammar 中文对照版](http://www.ayqy.net/doc/css2-1/grammar.html)\n\n\n\n<a name=\"JPCAT\"></a>\n## 总体结构\n一个样式文件从上到下的顺序结构：<br />\n\n1. @charset\n> ` @charset 'UTF-8'; ` \n> 声明css文件的字符编码标准。\n> - 必须在样式表的第一行声明\n> - 如果有多个@charset声明，那么只有第一个会生效\n> - 无法在HTML的style标签里使用该at-rule规则\n> \nTip:\n> 在样式表中声明字符编码有很多种方式，浏览器会按照以下顺序去尝试确定文件的编码方式（只要找到一种就会停止并得出结果）：\n> 1. 文件开头的 [Unicode byte-order](http://en.wikipedia.org/wiki/Byte_order_mark) 字符值\n> 1. 由Content-type确定：HTTP协议中的 charset 属性给出的值或用于提供样式表的协议中的等效值\n> 1. CSS @rule规则：@charset\n> 1. 假设文档上是UTF-8的格式\n\n2. @import\n2. rules （这部分是我们日常最常用到的部分）\n   1. @media\n   1. @page\n   1. rule\n\n\n\n<a name=\"JDII6\"></a>\n## CSS规则的结构\n```css\ndiv /* selector */ {\n  /* key */background-color: /* value */red;\n}\n```\n由上面的css代码可以明确css规则的结构分为以下两个部分：\n\n1. Selector（选择器）\n1. Declare（声明）\n   1. key\n   1. value\n\n\n<br />\n<br />\n\n<a name=\"u8p83\"></a>\n## 爬取w3c的css规则\n```javascript\nJSON.stringify(\n  Array.prototype.slice.call(document.querySelector('#container').children)\n  \t.filter(e=>e.getAttribute('data-tag').match(/css/))\n  \t.map(e=>(\n      {name:e.children[1].children[0].innerText,\n       url:e.children[1].children[0].href\n      })\n     )\n)\n```\n\n\n<a name=\"ReQML\"></a>\n## 思维导图\n\n\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608424173469-cf7b1df7-98e3-4d61-aa22-74c472f7e380.jpeg)",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B5%2C0%5D%2C%5B5%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"033953924afb0d7ca89bbdb8b4a68a07\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。</p><p data-lake-id=\"db9796f78507ab64e9bc5d6115dff0f7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。</p><p data-lake-id=\"9f73cc8d87682e5575dc2d90057bbeef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"6de77b38f536847226a77df35b21bc91\" id=\"Kw35w\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">CSS2.1语法</h2><ul data-lake-id=\"18b140624481b8cb3fdfd5c9f1c11947\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"7ccfc433b4ae6c0b5aa563b9e193c280\"><a target=\"_blank\" href=\"http://www.ayqy.net/doc/css2-1/grammar.html\">css2.1Grammar 中文对照版</a></li></ul><p data-lake-id=\"f3c17b8da642ce856015b2eee5967eec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"8c3356c39b843fdf3b0bdf183c5d8ab1\" id=\"JPCAT\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">总体结构</h2><p data-lake-id=\"ea59a88ae1e531580497f62623560b86\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个样式文件从上到下的顺序结构：</p><p data-lake-id=\"eb91537196bceaa0aa15c486130245c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"d7f5bd2a33083b474276f228ea537368\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"5a23e21102dd898710b09c38fb7f4e66\">@charset</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"c6e312e3876a7ded877133011e641f53\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> @charset 'UTF-8'; </code>&nbsp;</p><p data-lake-id=\"1c16b64e9a7839dee08d2bb472ebc4b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">声明css文件的字符编码标准。</p><ul data-lake-id=\"42a1a7086f469723e7be00ea8429b963\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"5d72320d7b8e86424c555cee7d06e5cf\">必须在样式表的第一行声明</li><li data-lake-id=\"58ef078b04aeb8c80c75a02a07b35258\">如果有多个@charset声明，那么只有第一个会生效</li><li data-lake-id=\"eb4845004a86d8bcc11e8a30a473058f\">无法在HTML的style标签里使用该at-rule规则</li></ul><p data-lake-id=\"014cd46dc94164ca9a5487b79bdf9dc3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Tip:</p><p data-lake-id=\"9380a8ff2c050a42e7f6e976add60112\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在样式表中声明字符编码有很多种方式，浏览器会按照以下顺序去尝试确定文件的编码方式（只要找到一种就会停止并得出结果）：</p><ol data-lake-id=\"826c44e2a9f4b6934c3fb5336e82d60c\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"dd00a5926261252c2b152d318258ccba\">文件开头的<span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px;\" data-mce-style=\"font-size: 12px\">&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Byte_order_mark\" target=\"_blank\">Unicode byte-order</a><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px;\" data-mce-style=\"font-size: 12px\">&nbsp;</span><span style=\"color: #8C8C8C;\">字符值</span></li><li data-lake-id=\"f57e2ab30f4bff6914383ac0018c9b5e\">由Content-type确定：HTTP协议中的<span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px;\" data-mce-style=\"font-size: 12px\">&nbsp;</span><span style=\"color: #8C8C8C;\">charset 属性给出的值或用于提供样式表的协议中的等效值</span></li><li data-lake-id=\"291ebed76e128840c49a15d027b41a9b\">CSS @rule规则：@charset</li><li data-lake-id=\"77897d9f218b8edab6c4b9a1f03d76b6\">假设文档上是UTF-8的格式</li></ol></blockquote><ol data-lake-id=\"4a5452917a9180d574230dd3ff036a25\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"8391cd8012b27677fe62210bb292a003\">@import</li><li data-lake-id=\"7615c14428a6d8ad2e9d1b47e5e86d22\">rules （这部分是我们日常最常用到的部分）</li></ol><ol data-lake-id=\"c9a28ac24c52c9a54feba7af5e01b32c\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"bf0f69ca2e34cbbad2c57a2727b2f795\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"36566b4593b6e80c4df3a1b9e0d4912f\">@media</li><li data-lake-id=\"965fe31f696e764516e1fd23f326266d\">@page</li><li data-lake-id=\"dffabdc4f65b8149b125775627b6e907\">rule</li></ol></ol><p data-lake-id=\"f28f615ce6cba3121c5b51cd9bd6eac4\" style=\"padding-left: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"f38354adfdf134b5c59a3674ece36970\" id=\"JDII6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">CSS规则的结构</h2><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"TraAO\" class=\"lake-card-margin\" data-language=\"css\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/* selector */</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/* key */</span><span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">background-color</span>: <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/* value */</span><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">red</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"a1ed5b37d5b23ee7a861275402465a6b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由上面的css代码可以明确css规则的结构分为以下两个部分：</p><ol data-lake-id=\"314603f53d876d3728f35c6f81366596\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c0119c5bedc4f699391d4707c3120b46\">Selector（选择器）</li><li data-lake-id=\"580022199f5a7ee3d3f1047f6253d6e5\">Declare（声明）</li></ol><ol data-lake-id=\"0c852d3cfe20d050f19e068c459831cb\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"fc2348c3a96887035bad8f985e2d8522\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"2b75e2834e0f67e811975cdd34b43f6c\">key</li><li data-lake-id=\"3fedacca8a6363ebfb96a25be20b3c39\">value</li></ol></ol><p data-lake-id=\"964ba9be5ab85ceed9334b07b3c5f066\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"90be42f14ff451266397a46c54073def\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"af2497a8a00a7827ffd67d896261845f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"9772f6629a7a1fd43e6c4cb643f972ce\" id=\"u8p83\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">爬取w3c的css规则</h2><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"uK5XK\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">JSON</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">stringify</span>(\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Array</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prototype</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">slice</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">call</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">document</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">querySelector</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'#container'</span>).<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">children</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    .<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">filter</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getAttribute</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'data-tag'</span>).<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">match</span>(<span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/css/</span>))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    .<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">map</span>(<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span>(\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      {<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">name</span>:<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">children</span>[<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>].<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">children</span>[<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>].<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">innerText</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">       <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">url</span>:<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">e</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">children</span>[<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>].<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">children</span>[<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>].<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">href</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      })\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">     )\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">)</span></span></pre></div></div></div><p data-lake-id=\"984b5722d7bd226739ca4b1290ef78e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"1981a55b26a1017e38b4788816613606\" id=\"ReQML\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">思维导图</h2><p data-lake-id=\"687402d27c9b7da6e0fc869652257b01\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"mindmap\" id=\"ikevx\" class=\"lake-card-margin\"><img src=\"https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1608424173469-cf7b1df7-98e3-4d61-aa22-74c472f7e380.jpeg\"></div></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"033953924afb0d7ca89bbdb8b4a68a07\">因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。</p><p data-lake-id=\"db9796f78507ab64e9bc5d6115dff0f7\">现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。</p><p data-lake-id=\"9f73cc8d87682e5575dc2d90057bbeef\"><br /></p><h2 data-lake-id=\"6de77b38f536847226a77df35b21bc91\" id=\"Kw35w\">CSS2.1语法</h2><ul data-lake-id=\"18b140624481b8cb3fdfd5c9f1c11947\"><li data-lake-id=\"7ccfc433b4ae6c0b5aa563b9e193c280\"><a target=\"_blank\" href=\"http://www.ayqy.net/doc/css2-1/grammar.html\">css2.1Grammar 中文对照版</a></li></ul><p data-lake-id=\"f3c17b8da642ce856015b2eee5967eec\"><br /></p><h2 data-lake-id=\"8c3356c39b843fdf3b0bdf183c5d8ab1\" id=\"JPCAT\">总体结构</h2><p data-lake-id=\"ea59a88ae1e531580497f62623560b86\">一个样式文件从上到下的顺序结构：</p><p data-lake-id=\"eb91537196bceaa0aa15c486130245c0\"><br /></p><ol data-lake-id=\"d7f5bd2a33083b474276f228ea537368\" start=\"1\"><li data-lake-id=\"5a23e21102dd898710b09c38fb7f4e66\">@charset</li></ol><blockquote><p data-lake-id=\"c6e312e3876a7ded877133011e641f53\"><code> @charset 'UTF-8'; </code> </p><p data-lake-id=\"1c16b64e9a7839dee08d2bb472ebc4b0\">声明css文件的字符编码标准。</p><ul data-lake-id=\"42a1a7086f469723e7be00ea8429b963\"><li data-lake-id=\"5d72320d7b8e86424c555cee7d06e5cf\">必须在样式表的第一行声明</li><li data-lake-id=\"58ef078b04aeb8c80c75a02a07b35258\">如果有多个@charset声明，那么只有第一个会生效</li><li data-lake-id=\"eb4845004a86d8bcc11e8a30a473058f\">无法在HTML的style标签里使用该at-rule规则</li></ul><p data-lake-id=\"014cd46dc94164ca9a5487b79bdf9dc3\">Tip:</p><p data-lake-id=\"9380a8ff2c050a42e7f6e976add60112\">在样式表中声明字符编码有很多种方式，浏览器会按照以下顺序去尝试确定文件的编码方式（只要找到一种就会停止并得出结果）：</p><ol data-lake-id=\"826c44e2a9f4b6934c3fb5336e82d60c\" start=\"1\"><li data-lake-id=\"dd00a5926261252c2b152d318258ccba\">文件开头的<span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><a href=\"http://en.wikipedia.org/wiki/Byte_order_mark\" target=\"_blank\">Unicode byte-order</a><span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><span style=\"color: #8C8C8C;\">字符值</span></li><li data-lake-id=\"f57e2ab30f4bff6914383ac0018c9b5e\">由Content-type确定：HTTP协议中的<span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><span style=\"color: #8C8C8C;\">charset 属性给出的值或用于提供样式表的协议中的等效值</span></li><li data-lake-id=\"291ebed76e128840c49a15d027b41a9b\">CSS @rule规则：@charset</li><li data-lake-id=\"77897d9f218b8edab6c4b9a1f03d76b6\">假设文档上是UTF-8的格式</li></ol></blockquote><ol data-lake-id=\"4a5452917a9180d574230dd3ff036a25\" start=\"2\"><li data-lake-id=\"8391cd8012b27677fe62210bb292a003\">@import</li><li data-lake-id=\"7615c14428a6d8ad2e9d1b47e5e86d22\">rules （这部分是我们日常最常用到的部分）</li></ol><ol data-lake-id=\"bf0f69ca2e34cbbad2c57a2727b2f795\" data-lake-indent=\"1\"><li data-lake-id=\"36566b4593b6e80c4df3a1b9e0d4912f\">@media</li><li data-lake-id=\"965fe31f696e764516e1fd23f326266d\">@page</li><li data-lake-id=\"dffabdc4f65b8149b125775627b6e907\">rule</li></ol><p data-lake-id=\"f28f615ce6cba3121c5b51cd9bd6eac4\" style=\"padding-left: 2em;\"><br /></p><h2 data-lake-id=\"f38354adfdf134b5c59a3674ece36970\" id=\"JDII6\">CSS规则的结构</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22div%20%2F*%20selector%20*%2F%20%7B%5Cn%20%20%2F*%20key%20*%2Fbackground-color%3A%20%2F*%20value%20*%2Fred%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22TraAO%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"a1ed5b37d5b23ee7a861275402465a6b\">由上面的css代码可以明确css规则的结构分为以下两个部分：</p><ol data-lake-id=\"314603f53d876d3728f35c6f81366596\" start=\"1\"><li data-lake-id=\"c0119c5bedc4f699391d4707c3120b46\">Selector（选择器）</li><li data-lake-id=\"580022199f5a7ee3d3f1047f6253d6e5\">Declare（声明）</li></ol><ol data-lake-id=\"fc2348c3a96887035bad8f985e2d8522\" data-lake-indent=\"1\"><li data-lake-id=\"2b75e2834e0f67e811975cdd34b43f6c\">key</li><li data-lake-id=\"3fedacca8a6363ebfb96a25be20b3c39\">value</li></ol><p data-lake-id=\"964ba9be5ab85ceed9334b07b3c5f066\"><br /></p><p data-lake-id=\"90be42f14ff451266397a46c54073def\"><br /></p><p data-lake-id=\"af2497a8a00a7827ffd67d896261845f\"><br /></p><h2 data-lake-id=\"9772f6629a7a1fd43e6c4cb643f972ce\" id=\"u8p83\">爬取w3c的css规则</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22JSON.stringify(%5Cn%20%20Array.prototype.slice.call(document.querySelector('%23container').children)%5Cn%20%20%5Ct.filter(e%3D%3Ee.getAttribute('data-tag').match(%2Fcss%2F))%5Cn%20%20%5Ct.map(e%3D%3E(%5Cn%20%20%20%20%20%20%7Bname%3Ae.children%5B1%5D.children%5B0%5D.innerText%2C%5Cn%20%20%20%20%20%20%20url%3Ae.children%5B1%5D.children%5B0%5D.href%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20)%5Cn)%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22uK5XK%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"984b5722d7bd226739ca4b1290ef78e1\"><br /></p><h2 data-lake-id=\"1981a55b26a1017e38b4788816613606\" id=\"ReQML\">思维导图</h2><p data-lake-id=\"687402d27c9b7da6e0fc869652257b01\"><br /></p><card type=\"block\" name=\"mindmap\" value=\"data:%7B%22diagramData%22%3A%22x%C2%9C%7DVMk%C2%9CU%5Cu0014%C3%BE%2B%C3%A5-t%C2%A19%C3%A5~%C2%9C%C3%BB5E%C2%A8h%5Cu0017%C3%A2%C2%B2%C3%A0%C2%A6tq%3F%C3%8Em%C2%86Nf%C2%86%C2%99IIl%23A%5Cu0004Sl%C2%A5%5Cu000b%5D((.T%2C%C2%A8%C3%A0%C3%86%C2%85%5Cu0006%C3%BAk%C2%92%C2%B4%C2%AB%C3%BC%5Cu0005%C3%8F%C2%AB%C3%8D%C2%9Bw%5Cu001a%C3%9F0%C2%8BaB%C3%AEs%C3%AEy%C3%8E%C3%B3%3C%C3%A7%3El6)%C2%96f%C3%B4%C2%B0y%40%C2%8B%C3%A5x6mF%C2%8D%C2%BA.%C2%AE%C2%8Bf%C2%A3Y%C3%AD%C3%8E%C2%89%7Fn%C2%8D%C2%A7e%2B%C3%8E%C2%9B%C2%BD%C2%8D%26%C3%8D%C3%8An3%C2%BA%C3%B3%C2%B0%5Cu0019%C3%B3%C2%91%5Cu0006%C2%A3%C3%83%C2%90m%C3%A2%7F%C3%9D%5C%5CmM%C3%B8%2F%C3%AF%C3%9D%C2%BE%7D%C3%B1%C3%9CF%C2%937%C3%87%C2%93%C2%B2%C2%A0%C3%A9%C3%B9Q%C2%AF%C2%85O2%C2%85%C3%B3%C2%A3q%5Cu0005%C2%8B%C3%AD%5Ct-O%5Cu000f%5Cu000fn%C3%AE%C3%AC%C3%AC%C2%9C%5Cu001e%3En%C2%91%5Cu0016D%C2%B7%C3%8A%3Dj%C3%AF%C2%B7%5C%5C-f%C3%B7%5B%C3%9C%C2%AB%C3%AF*%C3%AFn%C3%89%C3%B6%3Ek%C3%80%C2%AF%C2%81n%C3%A6%C3%8D%C2%B8X%C3%92%C2%8A%C2%8F%C3%BF%5B%C3%8A(W)F%5Ct%C3%A4l%5Cu0002%C3%B4%C3%85B%C3%88.%C2%80%C3%97hs%C2%B0%3Ea%C2%91%C3%ABw%C2%BC%C2%BB%C3%91%7C%C3%BC%C3%81%C2%B4%C3%90N3R%7B%5Cu001b%C3%A7%C3%80%C3%A3%C2%AD%C3%B9l%C3%91%C3%A1Zg%C3%88%C3%BB%C2%9C%C2%80%5Cu0002%C2%83%C2%A34%5Cu001e%C2%92%C3%88%5Cu0011%C2%B8%C2%98%C2%97%5Cu0018B%C3%B1%C2%A9%5Cf%C3%A2%C3%AA%3E%C3%AE%5Cu0016%C2%95q%3C%C2%83%C3%8D%C3%92%C3%88%5Cu0010%5D%5Cu0006%C3%A3R%5Cu0000%C2%8CYBPE%5Cu0000IM%C3%8Aeg%C2%92%C2%A6AX%C3%AC%C3%83%C3%8E%C3%A3%3D%3AC%C2%A5%C3%82%C2%A0%3E%C3%AB%C3%B6v%5Cn%C2%90B%C2%86%C2%94%5Cu0014%C2%81w%C2%A6%C2%96%C3%A8m%C2%B5%C3%85%5Cf%C2%A2%C2%9A%3E%C3%AA%7D%C3%9A%C2%AD%C2%8B%C2%B8E%C3%8B%C2%8E_-%C2%BD%C3%8E%C3%95%C2%82%5Cu000e%C2%92%C2%A1%C2%93g~%C2%ABeF%C2%B4%C2%89%5Cu0002E%5Cu0016.%C3%86Ah%C3%9B%C2%87%5En%C3%8F%C3%BB%5Cu0004c(%5C%22k%C2%9E%C2%99K%C2%96%C2%99%C3%88%C2%81%20%C3%85%C3%A4!S%C2%8E%25%C2%A0EJ~%5Cu0010%C3%98%C3%B7%C2%81%C3%B3l%7B%C2%BA%C2%A2%5Cu0005%2CW%C2%BB%C2%93%C2%8E%5Cu0012%C2%81%C2%8A%C3%88%5Cu0007%5Cu000bR%C3%B3%C3%94P%C3%AA%5Cu0000%C2%91%C2%A9%60%C2%86%C2%8C%5Cn%5E%C3%94Z%C3%B20%C3%91%C2%A1%5Cu000f_g%C3%93U%C2%8D%C2%B9C69%5Cu0018%C3%83%C3%96%5Cu0000aZeTS%C2%A1%C2%95%5Cu0004%C2%84%C2%90J%5Cu000eRV%C2%96%C3%87%20%C2%B2%5Cu0014%7D%C3%A8i%C3%8B%C3%B4%C2%BC%C2%87%5D%7D%C2%89%C3%95IjI!%40%5Cu0017-x%C3%A3%C3%B8%C3%BEV%5CbCN%C2%89%24q%5Cu0010%C3%9B%C3%AD%C3%B5%5Cu000b%C2%B5u%C3%BEc%C3%82bPU%C3%A7s3%C2%B6N%5Cu001c%C2%B4%C3%9F-%C3%B4%C3%BC%5Cu0019%C2%B2%C3%9Fm%C2%9AP%5E%C3%8D%5Cu0016%5Cu001d%C3%8D%C2%A4%C2%8C%C3%8E%2Ce!%C2%B5f2T%C2%86%20%C3%91%C2%81%C3%B3%C2%A9V%C2%AA%C2%AA%C3%86%C3%AA%C3%9F%C2%8C%C2%88%C3%97P'%C2%BF%C3%AF%5Cu001f%3D%C3%BD%C3%BA%C3%95%C3%BE%C3%A3%C3%A3%2F%C2%9E%5Cu001f%7D%C3%B3%C3%8B%5Cu0019%C2%A2s%C2%85%C2%92%C2%AC%5Ctd4-%5Cu0005%C3%AC%C3%A5%40%25%C2%83%C2%8D%C2%BA%5Cu001a%C2%8FIK%C3%AB%5Cu0006%5Cu0010%C3%9F%C3%AAh%C2%AC%26%C2%98j%5C%22%C2%A8%C3%A8TK%5Cu001e%C2%8F(U%5CtY%C3%A5%C2%AA%C2%8B%2B%C3%9A%C3%99%3A%3C%C2%A2%C2%BE%C2%B8%C3%8A%C3%B8Ag%5D!3%5Cu0016%C3%87%5Cu0012%C2%8A%C2%AD%5Cu0013%C2%A4I%C3%A0%C2%A5t%C2%A0U%C2%94%C3%9A%C3%98d%C2%8A%5Cu0017%C3%83%C2%A0%7DI%5D%C3%8F%C2%93%C2%B8%C3%AC%5Cu001cF%C2%99%C3%B9K%5Cu0005A)g8%5Cu0012%C3%B8%C2%9E%C3%81%5Cu001b%C2%84%C2%9AB%C3%90%C3%95%7B%C2%85N%5Cr'X_OW%C3%87%C3%A5%5Cf4%C3%98%C2%A4%C2%91t%5Cu0004%C2%AF%C2%AC%60%5Cu0016QCl%C3%A7%C2%92%C2%AA%C3%88E%C2%A7%5Cu001c%C2%94%C2%BB%24%5Cu0016e%5Cu000f%C3%B4N%5C%5C%C2%AD%5Cu0016W%C3%9E%C2%B9%C3%B2%20N%C2%B6%C3%A9nwiMZ%C2%BBR%5Cu0000%5Cu0015g%24*%5Cu001ePDQ%40%C3%B2%C2%BAI%C2%9E%C2%8A%C2%B7a8%5Cu001eU%3FwG%C2%9B3%C3%9EM%C3%9D%C2%BDu%C3%80L%C3%89%C3%B1%C2%B8%3D%5Cu0002%C2%A2%C3%A2%5Cu000e%C2%A2%C3%A0%24%C2%8BJ%C3%99%5C%5C1%5Cu00177l.%C3%95%C3%8F%C3%9D%C3%91(Q%C2%9D-%3Ak%C3%A9%2C%C2%ADI%C2%9E)%60i%5Cu0002%C2%96%C2%96%5Cu0011a-%C2%98%C2%92%C2%AC)%C2%B9z%25%C2%86%5Cu0003A%C3%A1%C2%9A%C2%B7%C3%BA%C2%91y%C3%B4%C3%A3%C3%93%C2%A3g%5Cu0007%5Cu0017dL.%C2%A1U%C3%81%C3%B1%40%5Cu00037%C3%82dA%C3%A0%C2%AC%C3%A0H%C2%B6%C3%A8%C2%85*%5Cu0015%C2%B5%5Cu00182%C3%86W%7F%C2%BC%C3%A1%C2%8D%C2%93%C2%BF%3F%C3%A3%5Cu001a%2F%C3%B7%C2%9F%5Cu001c%5Cu001f%3C%C3%AB%C3%A4%C2%98%C2%B3B%23%3C%C2%A8%C2%84%3C%C3%A1h%5Cu0015%C2%A4lyAq%5Cu0005%239%C3%BEd%C2%BCD6f%C2%AD%5Cu001f%C2%BB%C3%9E%C3%8F%C3%B1w%C2%9F%5E%C3%A8G%C2%B1%C2%A0r%C2%BB%C2%AEDrlK%C2%A5%24%5B*%C3%B0t%C2%8A%60%C3%AD%C2%87%5Cu001a%C2%A9%5C%5C%C3%92%C3%8F%5Cu001b%24%C2%BD%C3%9A%C3%BF%C3%B6%C3%A5%C2%8B%C3%8F_%C2%BE%C3%B8%C3%BE%C3%B8%C3%8B%C2%9FN~%C3%BD%C3%B9%7F%C3%9B%C3%B3%5C%22r%7F%5Cu0019%C3%88%C2%B0l%C3%91r%C2%A9X%C2%B5%5Cu0002BS8%C2%BB%C2%83%5Cr)%5Cr%C3%94%C2%BB6Y%C3%9DX%C3%8E%C2%AF%C3%9D%5B%C3%9D%C2%B8r%C3%B2%C3%BC%C2%AF%C3%A3%5Cu001f%5Cu000eO%5Cu000f%C2%9F%C2%9C%5Cu001c%C3%BCy%C3%B4%C3%9B%C2%B3%5Cu000b%5D%5Cu0019%5C%22~%26%C2%B0%5Cu001e4%5Ct%5EB%C3%94%3E%5Cu001cl%5Cu001b%3B%5C%22%C2%94%C3%80%C2%B9%C3%89%C3%BBt%C3%98%C3%93%C3%8A%C3%B5hk%C3%8Bu%C2%A1(y%5Cu00046F%5Cb%C2%B1E%C3%95%C3%A49%C3%85I1u%3E%C3%87%C3%80%C3%BCI%C2%AB%C2%87%C3%9F%5Cu000e%7D%C3%B3%C2%BD%C3%9Dm%C3%8B%C2%82%C3%8E%2BY%C2%81%C3%B8i%C3%85%C3%B4%5Cu000b%5E%C3%83B%5Cu0017%C2%B0%C2%A4S)%25%C2%A3%C2%97%C3%83%C2%89%C2%A6%C3%BA%C2%89%C3%B6%C3%89%C3%B9%5Cu000b%C3%87%26%C3%8B%5Cu001e%C2%81%C3%A2%C2%907%C2%8CW%5Cu001c%C2%92%C3%99%C2%B3%C2%8F%C2%89W%C2%A4F%C3%9E%C2%BF!%5Cu000fC%C3%B6%C3%B3%C3%AC%C3%91%C2%A33%C3%8C%24%C2%88%23%C2%AB%C3%B5%C2%AB%C2%8E%C2%9C%5Cr%C3%9E%3A%C3%AE%C2%9C%2F%C3%AC%C2%8B%C2%AA%C2%81s7%C3%B0%3Bg%C2%B8s%C3%91%5Cu0017%C2%A5%C2%B2k%5Cu0012%5D_n%7D%C2%8E%C3%9E'%C2%8E%C3%93s%C2%9F%C2%B3%5Cu001b%5Cu0004%C2%93l!F%C3%8D%C3%89%C2%84%5C%22A2%C3%9Es%C3%BC%5Cu0019%C3%A7%C2%8C%C3%89%C3%99%C2%93%5Cu001e%5Cu0010%C3%8E%C2%87%C2%B4%C3%9B%C3%B1%C3%8D%5Cu000f%C3%9F%C3%A8y%C2%A59WK%C3%AB%C2%AE%C3%84%C3%B6M%5Cu0005%C2%846%C2%98%5C%22%C2%A1%C2%8Ei%C2%98%5Cu001c%C3%99%C3%8F%C2%A1%C2%8F%C3%9A%C3%9C%C3%ACT%C2%AD0%C2%A2%C2%B4%C2%BC%24s%C3%A2u%C2%89A%5Cu0002%3F%C2%94yO%C2%91RXx%C3%8F%5Cu0015%7B%C3%89%5Cu000eY%5Cu000f!%C3%95%C3%BF%C2%B5F%C2%9DV%5Cu001b%5Cr%7F%C2%81%C2%94z%C2%A3%C3%99m%C3%9F%5Cu0002w%C3%B7%C3%BE%5Cu0001%C3%80%C2%93%C2%B8%C2%92%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22ikevx%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B-77%2C-629%2C1%5D%2C%22width%22%3A770%2C%22height%22%3A478%7D%2C%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1608424173469-cf7b1df7-98e3-4d61-aa22-74c472f7e380.jpeg%22%2C%22search%22%3A%22CSS%20at-rules%EF%BC%88%40xxx%EF%BC%89%20%40charset%20%40import%20%40media%20%40page%20%40keyframes%20%40support%20%40counter-style%20%40fontface%20%40namespace%20rule%20Selector%20%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E5%99%A8%20*%20div%20.class%20%23id%20%5Battr%20%3D%20value%5D%20%3Ahover%20%3A%3Abefore%20%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8%20%E7%94%B1%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E5%99%A8%E7%BB%84%E5%90%88%E8%80%8C%E6%88%90%20%E5%A4%8D%E6%9D%82%E9%80%89%E6%8B%A9%E5%99%A8%20%E7%94%B1%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8%E9%80%9A%E8%BF%87%E8%BF%9E%E6%8E%A5%E7%AC%A6%E7%BB%84%E5%90%88%E8%80%8C%E6%88%90%20%3Csp%3E%20%E7%A9%BA%E6%A0%BC%EF%BC%8C%E7%88%B6%E5%AD%90%E9%80%89%E6%8B%A9%E5%99%A8%20%3E%20%2B%20~%20%7C%7C%20Declare%20Key%20Value%22%7D\"></card>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"033953924afb0d7ca89bbdb8b4a68a07\">因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。</p><p data-lake-id=\"db9796f78507ab64e9bc5d6115dff0f7\">现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。</p><p data-lake-id=\"9f73cc8d87682e5575dc2d90057bbeef\"><br /></p><h2 data-lake-id=\"6de77b38f536847226a77df35b21bc91\" id=\"Kw35w\">CSS2.1语法</h2><ul data-lake-id=\"18b140624481b8cb3fdfd5c9f1c11947\"><li data-lake-id=\"7ccfc433b4ae6c0b5aa563b9e193c280\"><a target=\"_blank\" href=\"http://www.ayqy.net/doc/css2-1/grammar.html\">css2.1Grammar 中文对照版</a></li></ul><p data-lake-id=\"f3c17b8da642ce856015b2eee5967eec\"><br /></p><h2 data-lake-id=\"8c3356c39b843fdf3b0bdf183c5d8ab1\" id=\"JPCAT\">总体结构</h2><p data-lake-id=\"ea59a88ae1e531580497f62623560b86\">一个样式文件从上到下的顺序结构：</p><p data-lake-id=\"eb91537196bceaa0aa15c486130245c0\"><br /></p><ol data-lake-id=\"d7f5bd2a33083b474276f228ea537368\" start=\"1\"><li data-lake-id=\"5a23e21102dd898710b09c38fb7f4e66\">@charset</li></ol><blockquote><p data-lake-id=\"c6e312e3876a7ded877133011e641f53\"><code> @charset 'UTF-8'; </code> </p><p data-lake-id=\"1c16b64e9a7839dee08d2bb472ebc4b0\">声明css文件的字符编码标准。</p><ul data-lake-id=\"42a1a7086f469723e7be00ea8429b963\"><li data-lake-id=\"5d72320d7b8e86424c555cee7d06e5cf\">必须在样式表的第一行声明</li><li data-lake-id=\"58ef078b04aeb8c80c75a02a07b35258\">如果有多个@charset声明，那么只有第一个会生效</li><li data-lake-id=\"eb4845004a86d8bcc11e8a30a473058f\">无法在HTML的style标签里使用该at-rule规则</li></ul><p data-lake-id=\"014cd46dc94164ca9a5487b79bdf9dc3\">Tip:</p><p data-lake-id=\"9380a8ff2c050a42e7f6e976add60112\">在样式表中声明字符编码有很多种方式，浏览器会按照以下顺序去尝试确定文件的编码方式（只要找到一种就会停止并得出结果）：</p><ol data-lake-id=\"826c44e2a9f4b6934c3fb5336e82d60c\" start=\"1\"><li data-lake-id=\"dd00a5926261252c2b152d318258ccba\">文件开头的<span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><a href=\"http://en.wikipedia.org/wiki/Byte_order_mark\" target=\"_blank\">Unicode byte-order</a><span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><span style=\"color: #8C8C8C;\">字符值</span></li><li data-lake-id=\"f57e2ab30f4bff6914383ac0018c9b5e\">由Content-type确定：HTTP协议中的<span class=\"lake-fontsize-12\" style=\"color: #333333;\"> </span><span style=\"color: #8C8C8C;\">charset 属性给出的值或用于提供样式表的协议中的等效值</span></li><li data-lake-id=\"291ebed76e128840c49a15d027b41a9b\">CSS @rule规则：@charset</li><li data-lake-id=\"77897d9f218b8edab6c4b9a1f03d76b6\">假设文档上是UTF-8的格式</li></ol></blockquote><ol data-lake-id=\"4a5452917a9180d574230dd3ff036a25\" start=\"2\"><li data-lake-id=\"8391cd8012b27677fe62210bb292a003\">@import</li><li data-lake-id=\"7615c14428a6d8ad2e9d1b47e5e86d22\">rules （这部分是我们日常最常用到的部分）</li></ol><ol data-lake-id=\"bf0f69ca2e34cbbad2c57a2727b2f795\" data-lake-indent=\"1\"><li data-lake-id=\"36566b4593b6e80c4df3a1b9e0d4912f\">@media</li><li data-lake-id=\"965fe31f696e764516e1fd23f326266d\">@page</li><li data-lake-id=\"dffabdc4f65b8149b125775627b6e907\">rule</li></ol><p data-lake-id=\"f28f615ce6cba3121c5b51cd9bd6eac4\" style=\"padding-left: 2em;\"><br /></p><h2 data-lake-id=\"f38354adfdf134b5c59a3674ece36970\" id=\"JDII6\">CSS规则的结构</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22div%20%2F*%20selector%20*%2F%20%7B%5Cn%20%20%2F*%20key%20*%2Fbackground-color%3A%20%2F*%20value%20*%2Fred%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22TraAO%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"a1ed5b37d5b23ee7a861275402465a6b\">由上面的css代码可以明确css规则的结构分为以下两个部分：</p><ol data-lake-id=\"314603f53d876d3728f35c6f81366596\" start=\"1\"><li data-lake-id=\"c0119c5bedc4f699391d4707c3120b46\">Selector（选择器）</li><li data-lake-id=\"580022199f5a7ee3d3f1047f6253d6e5\">Declare（声明）</li></ol><ol data-lake-id=\"fc2348c3a96887035bad8f985e2d8522\" data-lake-indent=\"1\"><li data-lake-id=\"2b75e2834e0f67e811975cdd34b43f6c\">key</li><li data-lake-id=\"3fedacca8a6363ebfb96a25be20b3c39\">value</li></ol><p data-lake-id=\"964ba9be5ab85ceed9334b07b3c5f066\"><br /></p><p data-lake-id=\"90be42f14ff451266397a46c54073def\"><br /></p><p data-lake-id=\"af2497a8a00a7827ffd67d896261845f\"><br /></p><h2 data-lake-id=\"9772f6629a7a1fd43e6c4cb643f972ce\" id=\"u8p83\">爬取w3c的css规则</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22JSON.stringify(%5Cn%20%20Array.prototype.slice.call(document.querySelector('%23container').children)%5Cn%20%20%5Ct.filter(e%3D%3Ee.getAttribute('data-tag').match(%2Fcss%2F))%5Cn%20%20%5Ct.map(e%3D%3E(%5Cn%20%20%20%20%20%20%7Bname%3Ae.children%5B1%5D.children%5B0%5D.innerText%2C%5Cn%20%20%20%20%20%20%20url%3Ae.children%5B1%5D.children%5B0%5D.href%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20)%5Cn)%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22uK5XK%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"984b5722d7bd226739ca4b1290ef78e1\"><br /></p><h2 data-lake-id=\"1981a55b26a1017e38b4788816613606\" id=\"ReQML\">思维导图</h2><p data-lake-id=\"687402d27c9b7da6e0fc869652257b01\"><br /></p><card type=\"block\" name=\"mindmap\" value=\"data:%7B%22diagramData%22%3A%22x%C2%9C%7DVMk%C2%9CU%5Cu0014%C3%BE%2B%C3%A5-t%C2%A19%C3%A5~%C2%9C%C3%BB5E%C2%A8h%5Cu0017%C3%A2%C2%B2%C3%A0%C2%A6tq%3F%C3%8Em%C2%86Nf%C2%86%C2%99IIl%23A%5Cu0004Sl%C2%A5%5Cu000b%5D((.T%2C%C2%A8%C3%A0%C3%86%C2%85%5Cu0006%C3%BAk%C2%92%C2%B4%C2%AB%C3%BC%5Cu0005%C3%8F%C2%AB%C3%8D%C2%9Bw%5Cu001a%C3%9F0%C2%8BaB%C3%AEs%C3%AEy%C3%8E%C3%B3%3C%C3%A7%3El6)%C2%96f%C3%B4%C2%B0y%40%C2%8B%C3%A5x6mF%C2%8D%C2%BA.%C2%AE%C2%8Bf%C2%A3Y%C3%AD%C3%8E%C2%89%7Fn%C2%8D%C2%A7e%2B%C3%8E%C2%9B%C2%BD%C2%8D%26%C3%8D%C3%8An3%C2%BA%C3%B3%C2%B0%5Cu0019%C3%B3%C2%91%5Cu0006%C2%A3%C3%83%C2%90m%C3%A2%7F%C3%9D%5C%5CmM%C3%B8%2F%C3%AF%C3%9D%C2%BE%7D%C3%B1%C3%9CF%C2%937%C3%87%C2%93%C2%B2%C2%A0%C3%A9%C3%B9Q%C2%AF%C2%85O2%C2%85%C3%B3%C2%A3q%5Cu0005%C2%8B%C3%AD%5Ct-O%5Cu000f%5Cu000fn%C3%AE%C3%AC%C3%AC%C2%9C%5Cu001e%3En%C2%91%5Cu0016D%C2%B7%C3%8A%3Dj%C3%AF%C2%B7%5C%5C-f%C3%B7%5B%C3%9C%C2%AB%C3%AF*%C3%AFn%C3%89%C3%B6%3Ek%C3%80%C2%AF%C2%81n%C3%A6%C3%8D%C2%B8X%C3%92%C2%8A%C2%8F%C3%BF%5B%C3%8A(W)F%5Ct%C3%A4l%5Cu0002%C3%B4%C3%85B%C3%88.%C2%80%C3%97hs%C2%B0%3Ea%C2%91%C3%ABw%C2%BC%C2%BB%C3%91%7C%C3%BC%C3%81%C2%B4%C3%90N3R%7B%5Cu001b%C3%A7%C3%80%C3%A3%C2%AD%C3%B9l%C3%91%C3%A1Zg%C3%88%C3%BB%C2%9C%C2%80%5Cu0002%C2%83%C2%A34%5Cu001e%C2%92%C3%88%5Cu0011%C2%B8%C2%98%C2%97%5Cu0018B%C3%B1%C2%A9%5Cf%C3%A2%C3%AA%3E%C3%AE%5Cu0016%C2%95q%3C%C2%83%C3%8D%C3%92%C3%88%5Cu0010%5D%5Cu0006%C3%A3R%5Cu0000%C2%8CYBPE%5Cu0000IM%C3%8Aeg%C2%92%C2%A6AX%C3%AC%C3%83%C3%8E%C3%A3%3D%3AC%C2%A5%C3%82%C2%A0%3E%C3%AB%C3%B6v%5Cn%C2%90B%C2%86%C2%94%5Cu0014%C2%81w%C2%A6%C2%96%C3%A8m%C2%B5%C3%85%5Cf%C2%A2%C2%9A%3E%C3%AA%7D%C3%9A%C2%AD%C2%8B%C2%B8E%C3%8B%C2%8E_-%C2%BD%C3%8E%C3%95%C2%82%5Cu000e%C2%92%C2%A1%C2%93g~%C2%ABeF%C2%B4%C2%89%5Cu0002E%5Cu0016.%C3%86Ah%C3%9B%C2%87%5En%C3%8F%C3%BB%5Cu0004c(%5C%22k%C2%9E%C2%99K%C2%96%C2%99%C3%88%C2%81%20%C3%85%C3%A4!S%C2%8E%25%C2%A0EJ~%5Cu0010%C3%98%C3%B7%C2%81%C3%B3l%7B%C2%BA%C2%A2%5Cu0005%2CW%C2%BB%C2%93%C2%8E%5Cu0012%C2%81%C2%8A%C3%88%5Cu0007%5Cu000bR%C3%B3%C3%94P%C3%AA%5Cu0000%C2%91%C2%A9%60%C2%86%C2%8C%5Cn%5E%C3%94Z%C3%B20%C3%91%C2%A1%5Cu000f_g%C3%93U%C2%8D%C2%B9C69%5Cu0018%C3%83%C3%96%5Cu0000aZeTS%C2%A1%C2%95%5Cu0004%C2%84%C2%90J%5Cu000eRV%C2%96%C3%87%20%C2%B2%5Cu0014%7D%C3%A8i%C3%8B%C3%B4%C2%BC%C2%87%5D%7D%C2%89%C3%95IjI!%40%5Cu0017-x%C3%A3%C3%B8%C3%BEV%5CbCN%C2%89%24q%5Cu0010%C3%9B%C3%AD%C3%B5%5Cu000b%C2%B5u%C3%BEc%C3%82bPU%C3%A7s3%C2%B6N%5Cu001c%C2%B4%C3%9F-%C3%B4%C3%BC%5Cu0019%C2%B2%C3%9Fm%C2%9AP%5E%C3%8D%5Cu0016%5Cu001d%C3%8D%C2%A4%C2%8C%C3%8E%2Ce!%C2%B5f2T%C2%86%20%C3%91%C2%81%C3%B3%C2%A9V%C2%AA%C2%AA%C3%86%C3%AA%C3%9F%C2%8C%C2%88%C3%97P'%C2%BF%C3%AF%5Cu001f%3D%C3%BD%C3%BA%C3%95%C3%BE%C3%A3%C3%A3%2F%C2%9E%5Cu001f%7D%C3%B3%C3%8B%5Cu0019%C2%A2s%C2%85%C2%92%C2%AC%5Ctd4-%5Cu0005%C3%AC%C3%A5%40%25%C2%83%C2%8D%C2%BA%5Cu001a%C2%8FIK%C3%AB%5Cu0006%5Cu0010%C3%9F%C3%AAh%C2%AC%26%C2%98j%5C%22%C2%A8%C3%A8TK%5Cu001e%C2%8F(U%5CtY%C3%A5%C2%AA%C2%8B%2B%C3%9A%C3%99%3A%3C%C2%A2%C2%BE%C2%B8%C3%8A%C3%B8Ag%5D!3%5Cu0016%C3%87%5Cu0012%C2%8A%C2%AD%5Cu0013%C2%A4I%C3%A0%C2%A5t%C2%A0U%C2%94%C3%9A%C3%98d%C2%8A%5Cu0017%C3%83%C2%A0%7DI%5D%C3%8F%C2%93%C2%B8%C3%AC%5Cu001cF%C2%99%C3%B9K%5Cu0005A)g8%5Cu0012%C3%B8%C2%9E%C3%81%5Cu001b%C2%84%C2%9AB%C3%90%C3%95%7B%C2%85N%5Cr'X_OW%C3%87%C3%A5%5Cf4%C3%98%C2%A4%C2%91t%5Cu0004%C2%AF%C2%AC%60%5Cu0016QCl%C3%A7%C2%92%C2%AA%C3%88E%C2%A7%5Cu001c%C2%94%C2%BB%24%5Cu0016e%5Cu000f%C3%B4N%5C%5C%C2%AD%5Cu0016W%C3%9E%C2%B9%C3%B2%20N%C2%B6%C3%A9nwiMZ%C2%BBR%5Cu0000%5Cu0015g%24*%5Cu001ePDQ%40%C3%B2%C2%BAI%C2%9E%C2%8A%C2%B7a8%5Cu001eU%3FwG%C2%9B3%C3%9EM%C3%9D%C2%BDu%C3%80L%C3%89%C3%B1%C2%B8%3D%5Cu0002%C2%A2%C3%A2%5Cu000e%C2%A2%C3%A0%24%C2%8BJ%C3%99%5C%5C1%5Cu00177l.%C3%95%C3%8F%C3%9D%C3%91(Q%C2%9D-%3Ak%C3%A9%2C%C2%ADI%C2%9E)%60i%5Cu0002%C2%96%C2%96%5Cu0011a-%C2%98%C2%92%C2%AC)%C2%B9z%25%C2%86%5Cu0003A%C3%A1%C2%9A%C2%B7%C3%BA%C2%91y%C3%B4%C3%A3%C3%93%C2%A3g%5Cu0007%5Cu0017dL.%C2%A1U%C3%81%C3%B1%40%5Cu00037%C3%82dA%C3%A0%C2%AC%C3%A0H%C2%B6%C3%A8%C2%85*%5Cu0015%C2%B5%5Cu00182%C3%86W%7F%C2%BC%C3%A1%C2%8D%C2%93%C2%BF%3F%C3%A3%5Cu001a%2F%C3%B7%C2%9F%5Cu001c%5Cu001f%3C%C3%AB%C3%A4%C2%98%C2%B3B%23%3C%C2%A8%C2%84%3C%C3%A1h%5Cu0015%C2%A4lyAq%5Cu0005%239%C3%BEd%C2%BCD6f%C2%AD%5Cu001f%C2%BB%C3%9E%C3%8F%C3%B1w%C2%9F%5E%C3%A8G%C2%B1%C2%A0r%C2%BB%C2%AEDrlK%C2%A5%24%5B*%C3%B0t%C2%8A%60%C3%AD%C2%87%5Cu001a%C2%A9%5C%5C%C3%92%C3%8F%5Cu001b%24%C2%BD%C3%9A%C3%BF%C3%B6%C3%A5%C2%8B%C3%8F_%C2%BE%C3%B8%C3%BE%C3%B8%C3%8B%C2%9FN~%C3%BD%C3%B9%7F%C3%9B%C3%B3%5C%22r%7F%5Cu0019%C3%88%C2%B0l%C3%91r%C2%A9X%C2%B5%5Cu0002BS8%C2%BB%C2%83%5Cr)%5Cr%C3%94%C2%BB6Y%C3%9DX%C3%8E%C2%AF%C3%9D%5B%C3%9D%C2%B8r%C3%B2%C3%BC%C2%AF%C3%A3%5Cu001f%5Cu000eO%5Cu000f%C2%9F%C2%9C%5Cu001c%C3%BCy%C3%B4%C3%9B%C2%B3%5Cu000b%5D%5Cu0019%5C%22~%26%C2%B0%5Cu001e4%5Ct%5EB%C3%94%3E%5Cu001cl%5Cu001b%3B%5C%22%C2%94%C3%80%C2%B9%C3%89%C3%BBt%C3%98%C3%93%C3%8A%C3%B5hk%C3%8Bu%C2%A1(y%5Cu00046F%5Cb%C2%B1E%C3%95%C3%A49%C3%85I1u%3E%C3%87%C3%80%C3%BCI%C2%AB%C2%87%C3%9F%5Cu000e%7D%C3%B3%C2%BD%C3%9Dm%C3%8B%C2%82%C3%8E%2BY%C2%81%C3%B8i%C3%85%C3%B4%5Cu000b%5E%C3%83B%5Cu0017%C2%B0%C2%A4S)%25%C2%A3%C2%97%C3%83%C2%89%C2%A6%C3%BA%C2%89%C3%B6%C3%89%C3%B9%5Cu000b%C3%87%26%C3%8B%5Cu001e%C2%81%C3%A2%C2%907%C2%8CW%5Cu001c%C2%92%C3%99%C2%B3%C2%8F%C2%89W%C2%A4F%C3%9E%C2%BF!%5Cu000fC%C3%B6%C3%B3%C3%AC%C3%91%C2%A33%C3%8C%24%C2%88%23%C2%AB%C3%B5%C2%AB%C2%8E%C2%9C%5Cr%C3%9E%3A%C3%AE%C2%9C%2F%C3%AC%C2%8B%C2%AA%C2%81s7%C3%B0%3Bg%C2%B8s%C3%91%5Cu0017%C2%A5%C2%B2k%5Cu0012%5D_n%7D%C2%8E%C3%9E'%C2%8E%C3%93s%C2%9F%C2%B3%5Cu001b%5Cu0004%C2%93l!F%C3%8D%C3%89%C2%84%5C%22A2%C3%9Es%C3%BC%5Cu0019%C3%A7%C2%8C%C3%89%C3%99%C2%93%5Cu001e%5Cu0010%C3%8E%C2%87%C2%B4%C3%9B%C3%B1%C3%8D%5Cu000f%C3%9F%C3%A8y%C2%A59WK%C3%AB%C2%AE%C3%84%C3%B6M%5Cu0005%C2%846%C2%98%5C%22%C2%A1%C2%8Ei%C2%98%5Cu001c%C3%99%C3%8F%C2%A1%C2%8F%C3%9A%C3%9C%C3%ACT%C2%AD0%C2%A2%C2%B4%C2%BC%24s%C3%A2u%C2%89A%5Cu0002%3F%C2%94yO%C2%91RXx%C3%8F%5Cu0015%7B%C3%89%5Cu000eY%5Cu000f!%C3%95%C3%BF%C2%B5F%C2%9DV%5Cu001b%5Cr%7F%C2%81%C2%94z%C2%A3%C3%99m%C3%9F%5Cu0002w%C3%B7%C3%BE%5Cu0001%C3%80%C2%93%C2%B8%C2%92%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22ikevx%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B-77%2C-629%2C1%5D%2C%22width%22%3A770%2C%22height%22%3A478%7D%2C%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1608424173469-cf7b1df7-98e3-4d61-aa22-74c472f7e380.jpeg%22%2C%22search%22%3A%22CSS%20at-rules%EF%BC%88%40xxx%EF%BC%89%20%40charset%20%40import%20%40media%20%40page%20%40keyframes%20%40support%20%40counter-style%20%40fontface%20%40namespace%20rule%20Selector%20%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E5%99%A8%20*%20div%20.class%20%23id%20%5Battr%20%3D%20value%5D%20%3Ahover%20%3A%3Abefore%20%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8%20%E7%94%B1%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E5%99%A8%E7%BB%84%E5%90%88%E8%80%8C%E6%88%90%20%E5%A4%8D%E6%9D%82%E9%80%89%E6%8B%A9%E5%99%A8%20%E7%94%B1%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8%E9%80%9A%E8%BF%87%E8%BF%9E%E6%8E%A5%E7%AC%A6%E7%BB%84%E5%90%88%E8%80%8C%E6%88%90%20%3Csp%3E%20%E7%A9%BA%E6%A0%BC%EF%BC%8C%E7%88%B6%E5%AD%90%E9%80%89%E6%8B%A9%E5%99%A8%20%3E%20%2B%20~%20%7C%7C%20Declare%20Key%20Value%22%7D\"></card>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-20T00:32:36.000Z",
    "deleted_at": null,
    "created_at": "2020-12-13T23:30:32.000Z",
    "updated_at": "2020-12-20T00:32:36.000Z",
    "published_at": "2020-12-20T00:32:36.000Z",
    "first_published_at": "2020-12-14T00:02:49.000Z",
    "word_count": 443,
    "cover": "https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1607904168449-0376fb4b-bc6b-4dba-840d-2eabc191f610.jpeg",
    "description": "因为找不到一个明确的语法线索，所以我们这里根据2.1版本的语法来进行学习。现版本css多了很多css3的语法，但是不影响我们理解他的语法结构。CSS2.1语法css2.1Grammar 中文对照版总体结构一个样式文件从上到下的顺序结构：@charset @charset 'UTF-8';  声...",
    "custom_description": null,
    "hits": 2,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23366380,
    "slug": "osrbsn",
    "title": "无标题",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "body_draft_lake": "",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-10T06:10:58.000Z",
    "deleted_at": null,
    "created_at": "2020-12-10T06:10:58.000Z",
    "updated_at": "2020-12-10T06:10:58.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": null,
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23366330,
    "slug": "ynpy2v",
    "title": "链表篇",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "本次升级之路分模块，逐个击破。<br />\n\n<a name=\"Q6XXk\"></a>\n## 反转链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png#align=left&display=inline&height=319&margin=%5Bobject%20Object%5D&name=image.png&originHeight=319&originWidth=918&size=22654&status=done&style=none&width=918)\n<a name=\"8pPMY\"></a>\n### 题解\n> 这是个经典的链表问题，其实这个问题的关键就在于要**提前保存下一个节点**的值。\n\n> 因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。\n\n\n\n1. 迭代大法\n   1. 时间复杂度：O(n)\n   1. 空间复杂度：O(1)\n\n\n\n```javascript\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nconst reverList = (head) => {\n  let cur = head;\n  let prev = null;\n  let tmp;\n  while (cur) {\n    // 记录当前节点的下一个节点\n    tmp = cur.next;\n    // 改变当前节点的next指针指向\n    cur.next = prev;\n    // 更新上一个节点的值\n    prev = cur;\n    // 更新当前节点\n    cur = tmp;\n  }\n  return prev;\n};\n```\n\n2. 递归方法\n   1. 时间复杂度：O(n)\n   1. 空间复杂度：O(1)\n```javascript\nconst reverList = (head) =>{\n \tconst rever = (prev,cur)=>{\n  \t// 严谨性判断，当cur为空时链表翻转结束\n    if(!cur) return prev;\n    // 提前保存上一个节点的值\n    const tmp = cur.next;\n    cur.next = prev;\n    return rever(cur,tmp);\n  }\n  return rever(null,head);\n}\n```\n\n\n",
    "body_draft": "本次升级之路分模块，逐个击破。<br />\n\n<a name=\"Q6XXk\"></a>\n## 反转链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png#align=left&display=inline&height=319&margin=%5Bobject%20Object%5D&name=image.png&originHeight=319&originWidth=918&size=22654&status=done&style=none&width=918)\n<a name=\"8pPMY\"></a>\n### 题解\n> 这是个经典的链表问题，其实这个问题的关键就在于要**提前保存下一个节点**的值。\n\n> 因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。\n\n\n\n1. 迭代大法\n   1. 时间复杂度：O(n)\n   1. 空间复杂度：O(1)\n\n\n\n```javascript\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nconst reverList = (head) => {\n  let cur = head;\n  let prev = null;\n  let tmp;\n  while (cur) {\n    // 记录当前节点的下一个节点\n    tmp = cur.next;\n    // 改变当前节点的next指针指向\n    cur.next = prev;\n    // 更新上一个节点的值\n    prev = cur;\n    // 更新当前节点\n    cur = tmp;\n  }\n  return prev;\n};\n```\n\n2. 递归方法\n   1. 时间复杂度：O(n)\n   1. 空间复杂度：O(1)\n```javascript\nconst reverList = (head) =>{\n \tconst rever = (prev,cur)=>{\n  \t// 严谨性判断，当cur为空时链表翻转结束\n    if(!cur) return prev;\n    // 提前保存上一个节点的值\n    const tmp = cur.next;\n    cur.next = prev;\n    return rever(cur,tmp);\n  }\n  return rever(null,head);\n}\n```\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B14%2C0%2C1%2C0%5D%2C%5B14%2C0%2C1%2C2%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">本次升级之路分模块，逐个击破。</p><p data-lake-id=\"3a4b05348a0e22c3690cf8e63eeea72f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"51ca16a31b0b4ba148fa928f2a18188a\" id=\"Q6XXk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">反转链表</h2><p data-lake-id=\"df76cf24f047242ee983a3be826fd1ee\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"319px\" style=\"visibility: visible; width: 918px;\"></span></p><h3 data-lake-id=\"9652fbfe3c507e1596b832dd8b4f4357\" id=\"8pPMY\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">题解</h3><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"78b8935bd8967f611f1aec1e0919a66d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这是个经典的链表问题，其实这个问题的关键就在于要<strong>提前保存下一个节点</strong>的值。</p></blockquote><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"022e7e95e3761d02cd18202c337398b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。</p></blockquote><p data-lake-id=\"501750894b0ddea2d73602f37cfb5d73\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"7fbe0023a21eb36d8c29b4b834c880d3\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"959f6d9d178f74eb3f58ef71f41e7ced\">迭代大法</li></ol><ol data-lake-id=\"2f5e1cf224a01f65b4b06eb1dfc7610c\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"6bfebeea40dcdee13f3592fbb7ac6b71\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"a9c0f63f5983e811aa80b152590384ce\">时间复杂度：O(n)</li><li data-lake-id=\"36fe9348439919e3cad87b2dd8bcf206\">空间复杂度：O(1)</li></ol></ol><p data-lake-id=\"a3f571e423420fd08176d60d04859d4d\" style=\"padding-left: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"SMTf9\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/**</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * Definition for singly-linked list.</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * function ListNode(val) {</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> *     this.val = val;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> *     this.next = null;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * }</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> */</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/**</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * @param {ListNode} head</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> * @return {ListNode}</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"> */</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">reverList</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tmp</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 记录当前节点的下一个节点</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tmp</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 改变当前节点的next指针指向</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 更新上一个节点的值</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 更新当前节点</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tmp</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">};</span></span></pre></div></div></div><ol data-lake-id=\"5299c46bd7a7d1c33fd62c26d222c2a2\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c223d43b908bc8761f1d6f989a4e10e3\">递归方法</li></ol><ol data-lake-id=\"a0f7a417140f01336b158ccc07957bf8\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"b1b0784019692b0be0737216cf66484f\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"09e4277cce82fe4d9d00969f76a87f58\">时间复杂度：O(n)</li><li data-lake-id=\"0033bd82f6187016991fb25b5b1c961e\">空间复杂度：O(1)</li></ol></ol><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"lXxYl\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">reverList</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rever</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span>,<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>)<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span>{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 严谨性判断，当cur为空时链表翻转结束</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span>(<span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">!</span><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>) <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 提前保存上一个节点的值</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tmp</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">prev</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rever</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cur</span>,<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">tmp</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rever</span>(<span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">null</span>,<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"5ec8ea49ac7ee4175105c318a0a36ba0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">本次升级之路分模块，逐个击破。</p><p data-lake-id=\"3a4b05348a0e22c3690cf8e63eeea72f\"><br /></p><h2 data-lake-id=\"51ca16a31b0b4ba148fa928f2a18188a\" id=\"Q6XXk\">反转链表</h2><p data-lake-id=\"df76cf24f047242ee983a3be826fd1ee\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png%22%2C%22originWidth%22%3A918%2C%22originHeight%22%3A319%2C%22name%22%3A%22image.png%22%2C%22size%22%3A22654%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A12.088946%2C%22y%22%3A1.9002925%2C%22width%22%3A111.279989%2C%22height%22%3A19.9604925%2C%22text%22%3A%22206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%22%7D%2C%7B%22x%22%3A11.876975%2C%22y%22%3A35.112774%2C%22width%22%3A74.28064499999999%2C%22height%22%3A16.138146%2C%22text%22%3A%22%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95%22%7D%2C%7B%22x%22%3A299.02136%2C%22y%22%3A35.760944%2C%22width%22%3A51.16357999999997%2C%22height%22%3A16.557156%2C%22text%22%3A%22%E5%88%86%E4%BA%AB%22%7D%2C%7B%22x%22%3A390.14185%2C%22y%22%3A35.998608%2C%22width%22%3A92.57075000000003%2C%22height%22%3A16.774658000000002%2C%22text%22%3A%22%E8%B4%ADA%E5%88%87%E6%8D%A2%E4%B8%BA%E8%8B%B1%E6%96%87%22%7D%2C%7B%22x%22%3A654.49%2C%22y%22%3A36.191418%2C%22width%22%3A32.93489999999997%2C%22height%22%3A15.302349%2C%22text%22%3A%22%E5%8F%8D%E9%A6%88%22%7D%2C%7B%22x%22%3A520.4198%2C%22y%22%3A36.689457%2C%22width%22%3A79.26670000000001%2C%22height%22%3A16.639160000000004%2C%22text%22%3A%22%E6%8E%A5%E6%94%B6%E5%8A%A8%E6%80%81%22%7D%2C%7B%22x%22%3A224.10706%2C%22y%22%3A36.57902%2C%22width%22%3A38.73473999999999%2C%22height%22%3A15.941102999999998%2C%22text%22%3A%22%E6%94%B6%E8%97%8F%22%7D%2C%7B%22x%22%3A143.51657%2C%22y%22%3A37.1438%2C%22width%22%3A31.203450000000004%2C%22height%22%3A13.784537%2C%22text%22%3A%221388%22%7D%2C%7B%22x%22%3A117.19383%2C%22y%22%3A37.817425%2C%22width%22%3A17.623350000000002%2C%22height%22%3A13.771904999999997%2C%22text%22%3A%22%E5%B7%A7%22%7D%2C%7B%22x%22%3A12.506755%2C%22y%22%3A93.73689%2C%22width%22%3A119.48926499999999%2C%22height%22%3A18.513769999999994%2C%22text%22%3A%22%E5%8F%8D%E8%BD%AC%E4%B8%80%E4%B8%AA%E5%8D%95%E9%93%BE%E8%A1%A8.%22%7D%2C%7B%22x%22%3A12.488613%2C%22y%22%3A132.60011%2C%22width%22%3A38.479257%2C%22height%22%3A18.98137%2C%22text%22%3A%22%E7%A4%BA%E4%BE%8B%3A%22%7D%2C%7B%22x%22%3A30.649105%2C%22y%22%3A185.91158%2C%22width%22%3A222.21042500000001%2C%22height%22%3A17.677870000000013%2C%22text%22%3A%22%E8%BE%93%E5%85%A5%3A1-%3E2-%3E3-%3E4-%3E5-%3ENULL%22%7D%2C%7B%22x%22%3A29.158424%2C%22y%22%3A211.21364%2C%22width%22%3A224.261586%2C%22height%22%3A18.85476%2C%22text%22%3A%22%E8%BE%93%E5%87%BA%3A5-%3E4-%3E3-%3E2-%3E1-%3ENULL%22%7D%2C%7B%22x%22%3A10.436099%2C%22y%22%3A265.0155%2C%22width%22%3A39.511591%2C%22height%22%3A17.536900000000003%2C%22text%22%3A%22%E8%BF%9B%E9%98%B6%3A%22%7D%2C%7B%22x%22%3A12.441274%2C%22y%22%3A288.59302%2C%22width%22%3A449.174446%2C%22height%22%3A17.742079999999987%2C%22text%22%3A%22%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%81%E4%BB%A3%E6%88%96%E9%80%92%E5%BD%92%E5%9C%B0%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.%E4%BD%A0%E8%83%BD%E5%90%A6%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E8%A7%A3%E5%86%B3%E8%BF%99%E9%81%93%E9%A2%98%3F%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95%20%E5%88%86%E4%BA%AB%20%E8%B4%ADA%E5%88%87%E6%8D%A2%E4%B8%BA%E8%8B%B1%E6%96%87%20%E5%8F%8D%E9%A6%88%20%E6%8E%A5%E6%94%B6%E5%8A%A8%E6%80%81%20%E6%94%B6%E8%97%8F%201388%20%E5%B7%A7%20%E5%8F%8D%E8%BD%AC%E4%B8%80%E4%B8%AA%E5%8D%95%E9%93%BE%E8%A1%A8.%20%E7%A4%BA%E4%BE%8B%3A%20%E8%BE%93%E5%85%A5%3A1-%3E2-%3E3-%3E4-%3E5-%3ENULL%20%E8%BE%93%E5%87%BA%3A5-%3E4-%3E3-%3E2-%3E1-%3ENULL%20%E8%BF%9B%E9%98%B6%3A%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%81%E4%BB%A3%E6%88%96%E9%80%92%E5%BD%92%E5%9C%B0%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.%E4%BD%A0%E8%83%BD%E5%90%A6%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E8%A7%A3%E5%86%B3%E8%BF%99%E9%81%93%E9%A2%98%3F%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A918%2C%22height%22%3A319%7D\"></card></p><h3 data-lake-id=\"9652fbfe3c507e1596b832dd8b4f4357\" id=\"8pPMY\">题解</h3><blockquote><p data-lake-id=\"78b8935bd8967f611f1aec1e0919a66d\">这是个经典的链表问题，其实这个问题的关键就在于要<strong>提前保存下一个节点</strong>的值。</p></blockquote><blockquote><p data-lake-id=\"022e7e95e3761d02cd18202c337398b9\">因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。</p></blockquote><p data-lake-id=\"501750894b0ddea2d73602f37cfb5d73\"><br /></p><ol data-lake-id=\"7fbe0023a21eb36d8c29b4b834c880d3\" start=\"1\"><li data-lake-id=\"959f6d9d178f74eb3f58ef71f41e7ced\">迭代大法</li></ol><ol data-lake-id=\"6bfebeea40dcdee13f3592fbb7ac6b71\" data-lake-indent=\"1\"><li data-lake-id=\"a9c0f63f5983e811aa80b152590384ce\">时间复杂度：O(n)</li><li data-lake-id=\"36fe9348439919e3cad87b2dd8bcf206\">空间复杂度：O(1)</li></ol><p data-lake-id=\"a3f571e423420fd08176d60d04859d4d\" style=\"padding-left: 2em;\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20Definition%20for%20singly-linked%20list.%5Cn%20*%20function%20ListNode(val)%20%7B%5Cn%20*%20%20%20%20%20this.val%20%3D%20val%3B%5Cn%20*%20%20%20%20%20this.next%20%3D%20null%3B%5Cn%20*%20%7D%5Cn%20*%2F%5Cn%2F**%5Cn%20*%20%40param%20%7BListNode%7D%20head%5Cn%20*%20%40return%20%7BListNode%7D%5Cn%20*%2F%5Cnconst%20reverList%20%3D%20(head)%20%3D%3E%20%7B%5Cn%20%20let%20cur%20%3D%20head%3B%5Cn%20%20let%20prev%20%3D%20null%3B%5Cn%20%20let%20tmp%3B%5Cn%20%20while%20(cur)%20%7B%5Cn%20%20%20%20%2F%2F%20%E8%AE%B0%E5%BD%95%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%5Cn%20%20%20%20tmp%20%3D%20cur.next%3B%5Cn%20%20%20%20%2F%2F%20%E6%94%B9%E5%8F%98%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E7%9A%84next%E6%8C%87%E9%92%88%E6%8C%87%E5%90%91%5Cn%20%20%20%20cur.next%20%3D%20prev%3B%5Cn%20%20%20%20%2F%2F%20%E6%9B%B4%E6%96%B0%E4%B8%8A%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%80%BC%5Cn%20%20%20%20prev%20%3D%20cur%3B%5Cn%20%20%20%20%2F%2F%20%E6%9B%B4%E6%96%B0%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%5Cn%20%20%20%20cur%20%3D%20tmp%3B%5Cn%20%20%7D%5Cn%20%20return%20prev%3B%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22SMTf9%22%2C%22autoWrap%22%3Atrue%7D\"></card><ol data-lake-id=\"5299c46bd7a7d1c33fd62c26d222c2a2\" start=\"2\"><li data-lake-id=\"c223d43b908bc8761f1d6f989a4e10e3\">递归方法</li></ol><ol data-lake-id=\"b1b0784019692b0be0737216cf66484f\" data-lake-indent=\"1\"><li data-lake-id=\"09e4277cce82fe4d9d00969f76a87f58\">时间复杂度：O(n)</li><li data-lake-id=\"0033bd82f6187016991fb25b5b1c961e\">空间复杂度：O(1)</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20reverList%20%3D%20(head)%20%3D%3E%7B%5Cn%20%5Ctconst%20rever%20%3D%20(prev%2Ccur)%3D%3E%7B%5Cn%20%20%5Ct%2F%2F%20%E4%B8%A5%E8%B0%A8%E6%80%A7%E5%88%A4%E6%96%AD%EF%BC%8C%E5%BD%93cur%E4%B8%BA%E7%A9%BA%E6%97%B6%E9%93%BE%E8%A1%A8%E7%BF%BB%E8%BD%AC%E7%BB%93%E6%9D%9F%5Cn%20%20%20%20if(!cur)%20return%20prev%3B%5Cn%20%20%20%20%2F%2F%20%E6%8F%90%E5%89%8D%E4%BF%9D%E5%AD%98%E4%B8%8A%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%80%BC%5Cn%20%20%20%20const%20tmp%20%3D%20cur.next%3B%5Cn%20%20%20%20cur.next%20%3D%20prev%3B%5Cn%20%20%20%20return%20rever(cur%2Ctmp)%3B%5Cn%20%20%7D%5Cn%20%20return%20rever(null%2Chead)%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22lXxYl%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"5ec8ea49ac7ee4175105c318a0a36ba0\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">本次升级之路分模块，逐个击破。</p><p data-lake-id=\"3a4b05348a0e22c3690cf8e63eeea72f\"><br /></p><h2 data-lake-id=\"51ca16a31b0b4ba148fa928f2a18188a\" id=\"Q6XXk\">反转链表</h2><p data-lake-id=\"df76cf24f047242ee983a3be826fd1ee\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png%22%2C%22originWidth%22%3A918%2C%22originHeight%22%3A319%2C%22name%22%3A%22image.png%22%2C%22size%22%3A22654%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A12.088946%2C%22y%22%3A1.9002925%2C%22width%22%3A111.279989%2C%22height%22%3A19.9604925%2C%22text%22%3A%22206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%22%7D%2C%7B%22x%22%3A11.876975%2C%22y%22%3A35.112774%2C%22width%22%3A74.28064499999999%2C%22height%22%3A16.138146%2C%22text%22%3A%22%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95%22%7D%2C%7B%22x%22%3A299.02136%2C%22y%22%3A35.760944%2C%22width%22%3A51.16357999999997%2C%22height%22%3A16.557156%2C%22text%22%3A%22%E5%88%86%E4%BA%AB%22%7D%2C%7B%22x%22%3A390.14185%2C%22y%22%3A35.998608%2C%22width%22%3A92.57075000000003%2C%22height%22%3A16.774658000000002%2C%22text%22%3A%22%E8%B4%ADA%E5%88%87%E6%8D%A2%E4%B8%BA%E8%8B%B1%E6%96%87%22%7D%2C%7B%22x%22%3A654.49%2C%22y%22%3A36.191418%2C%22width%22%3A32.93489999999997%2C%22height%22%3A15.302349%2C%22text%22%3A%22%E5%8F%8D%E9%A6%88%22%7D%2C%7B%22x%22%3A520.4198%2C%22y%22%3A36.689457%2C%22width%22%3A79.26670000000001%2C%22height%22%3A16.639160000000004%2C%22text%22%3A%22%E6%8E%A5%E6%94%B6%E5%8A%A8%E6%80%81%22%7D%2C%7B%22x%22%3A224.10706%2C%22y%22%3A36.57902%2C%22width%22%3A38.73473999999999%2C%22height%22%3A15.941102999999998%2C%22text%22%3A%22%E6%94%B6%E8%97%8F%22%7D%2C%7B%22x%22%3A143.51657%2C%22y%22%3A37.1438%2C%22width%22%3A31.203450000000004%2C%22height%22%3A13.784537%2C%22text%22%3A%221388%22%7D%2C%7B%22x%22%3A117.19383%2C%22y%22%3A37.817425%2C%22width%22%3A17.623350000000002%2C%22height%22%3A13.771904999999997%2C%22text%22%3A%22%E5%B7%A7%22%7D%2C%7B%22x%22%3A12.506755%2C%22y%22%3A93.73689%2C%22width%22%3A119.48926499999999%2C%22height%22%3A18.513769999999994%2C%22text%22%3A%22%E5%8F%8D%E8%BD%AC%E4%B8%80%E4%B8%AA%E5%8D%95%E9%93%BE%E8%A1%A8.%22%7D%2C%7B%22x%22%3A12.488613%2C%22y%22%3A132.60011%2C%22width%22%3A38.479257%2C%22height%22%3A18.98137%2C%22text%22%3A%22%E7%A4%BA%E4%BE%8B%3A%22%7D%2C%7B%22x%22%3A30.649105%2C%22y%22%3A185.91158%2C%22width%22%3A222.21042500000001%2C%22height%22%3A17.677870000000013%2C%22text%22%3A%22%E8%BE%93%E5%85%A5%3A1-%3E2-%3E3-%3E4-%3E5-%3ENULL%22%7D%2C%7B%22x%22%3A29.158424%2C%22y%22%3A211.21364%2C%22width%22%3A224.261586%2C%22height%22%3A18.85476%2C%22text%22%3A%22%E8%BE%93%E5%87%BA%3A5-%3E4-%3E3-%3E2-%3E1-%3ENULL%22%7D%2C%7B%22x%22%3A10.436099%2C%22y%22%3A265.0155%2C%22width%22%3A39.511591%2C%22height%22%3A17.536900000000003%2C%22text%22%3A%22%E8%BF%9B%E9%98%B6%3A%22%7D%2C%7B%22x%22%3A12.441274%2C%22y%22%3A288.59302%2C%22width%22%3A449.174446%2C%22height%22%3A17.742079999999987%2C%22text%22%3A%22%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%81%E4%BB%A3%E6%88%96%E9%80%92%E5%BD%92%E5%9C%B0%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.%E4%BD%A0%E8%83%BD%E5%90%A6%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E8%A7%A3%E5%86%B3%E8%BF%99%E9%81%93%E9%A2%98%3F%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95%20%E5%88%86%E4%BA%AB%20%E8%B4%ADA%E5%88%87%E6%8D%A2%E4%B8%BA%E8%8B%B1%E6%96%87%20%E5%8F%8D%E9%A6%88%20%E6%8E%A5%E6%94%B6%E5%8A%A8%E6%80%81%20%E6%94%B6%E8%97%8F%201388%20%E5%B7%A7%20%E5%8F%8D%E8%BD%AC%E4%B8%80%E4%B8%AA%E5%8D%95%E9%93%BE%E8%A1%A8.%20%E7%A4%BA%E4%BE%8B%3A%20%E8%BE%93%E5%85%A5%3A1-%3E2-%3E3-%3E4-%3E5-%3ENULL%20%E8%BE%93%E5%87%BA%3A5-%3E4-%3E3-%3E2-%3E1-%3ENULL%20%E8%BF%9B%E9%98%B6%3A%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%81%E4%BB%A3%E6%88%96%E9%80%92%E5%BD%92%E5%9C%B0%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.%E4%BD%A0%E8%83%BD%E5%90%A6%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E8%A7%A3%E5%86%B3%E8%BF%99%E9%81%93%E9%A2%98%3F%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A918%2C%22height%22%3A319%7D\"></card></p><h3 data-lake-id=\"9652fbfe3c507e1596b832dd8b4f4357\" id=\"8pPMY\">题解</h3><blockquote><p data-lake-id=\"78b8935bd8967f611f1aec1e0919a66d\">这是个经典的链表问题，其实这个问题的关键就在于要<strong>提前保存下一个节点</strong>的值。</p></blockquote><blockquote><p data-lake-id=\"022e7e95e3761d02cd18202c337398b9\">因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。</p></blockquote><p data-lake-id=\"501750894b0ddea2d73602f37cfb5d73\"><br /></p><ol data-lake-id=\"7fbe0023a21eb36d8c29b4b834c880d3\" start=\"1\"><li data-lake-id=\"959f6d9d178f74eb3f58ef71f41e7ced\">迭代大法</li></ol><ol data-lake-id=\"6bfebeea40dcdee13f3592fbb7ac6b71\" data-lake-indent=\"1\"><li data-lake-id=\"a9c0f63f5983e811aa80b152590384ce\">时间复杂度：O(n)</li><li data-lake-id=\"36fe9348439919e3cad87b2dd8bcf206\">空间复杂度：O(1)</li></ol><p data-lake-id=\"a3f571e423420fd08176d60d04859d4d\" style=\"padding-left: 2em;\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20Definition%20for%20singly-linked%20list.%5Cn%20*%20function%20ListNode(val)%20%7B%5Cn%20*%20%20%20%20%20this.val%20%3D%20val%3B%5Cn%20*%20%20%20%20%20this.next%20%3D%20null%3B%5Cn%20*%20%7D%5Cn%20*%2F%5Cn%2F**%5Cn%20*%20%40param%20%7BListNode%7D%20head%5Cn%20*%20%40return%20%7BListNode%7D%5Cn%20*%2F%5Cnconst%20reverList%20%3D%20(head)%20%3D%3E%20%7B%5Cn%20%20let%20cur%20%3D%20head%3B%5Cn%20%20let%20prev%20%3D%20null%3B%5Cn%20%20let%20tmp%3B%5Cn%20%20while%20(cur)%20%7B%5Cn%20%20%20%20%2F%2F%20%E8%AE%B0%E5%BD%95%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%5Cn%20%20%20%20tmp%20%3D%20cur.next%3B%5Cn%20%20%20%20%2F%2F%20%E6%94%B9%E5%8F%98%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%E7%9A%84next%E6%8C%87%E9%92%88%E6%8C%87%E5%90%91%5Cn%20%20%20%20cur.next%20%3D%20prev%3B%5Cn%20%20%20%20%2F%2F%20%E6%9B%B4%E6%96%B0%E4%B8%8A%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%80%BC%5Cn%20%20%20%20prev%20%3D%20cur%3B%5Cn%20%20%20%20%2F%2F%20%E6%9B%B4%E6%96%B0%E5%BD%93%E5%89%8D%E8%8A%82%E7%82%B9%5Cn%20%20%20%20cur%20%3D%20tmp%3B%5Cn%20%20%7D%5Cn%20%20return%20prev%3B%5Cn%7D%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22SMTf9%22%2C%22autoWrap%22%3Atrue%7D\"></card><ol data-lake-id=\"5299c46bd7a7d1c33fd62c26d222c2a2\" start=\"2\"><li data-lake-id=\"c223d43b908bc8761f1d6f989a4e10e3\">递归方法</li></ol><ol data-lake-id=\"b1b0784019692b0be0737216cf66484f\" data-lake-indent=\"1\"><li data-lake-id=\"09e4277cce82fe4d9d00969f76a87f58\">时间复杂度：O(n)</li><li data-lake-id=\"0033bd82f6187016991fb25b5b1c961e\">空间复杂度：O(1)</li></ol><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20reverList%20%3D%20(head)%20%3D%3E%7B%5Cn%20%5Ctconst%20rever%20%3D%20(prev%2Ccur)%3D%3E%7B%5Cn%20%20%5Ct%2F%2F%20%E4%B8%A5%E8%B0%A8%E6%80%A7%E5%88%A4%E6%96%AD%EF%BC%8C%E5%BD%93cur%E4%B8%BA%E7%A9%BA%E6%97%B6%E9%93%BE%E8%A1%A8%E7%BF%BB%E8%BD%AC%E7%BB%93%E6%9D%9F%5Cn%20%20%20%20if(!cur)%20return%20prev%3B%5Cn%20%20%20%20%2F%2F%20%E6%8F%90%E5%89%8D%E4%BF%9D%E5%AD%98%E4%B8%8A%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%80%BC%5Cn%20%20%20%20const%20tmp%20%3D%20cur.next%3B%5Cn%20%20%20%20cur.next%20%3D%20prev%3B%5Cn%20%20%20%20return%20rever(cur%2Ctmp)%3B%5Cn%20%20%7D%5Cn%20%20return%20rever(null%2Chead)%3B%5Cn%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22lXxYl%22%2C%22autoWrap%22%3Atrue%7D\"></card><p data-lake-id=\"5ec8ea49ac7ee4175105c318a0a36ba0\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-17T12:50:09.000Z",
    "deleted_at": null,
    "created_at": "2020-12-10T06:10:05.000Z",
    "updated_at": "2020-12-17T12:50:09.000Z",
    "published_at": "2020-12-17T12:50:09.000Z",
    "first_published_at": "2020-12-10T06:10:44.000Z",
    "word_count": 370,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1607580712472-aa946439-2c33-4dd1-ad35-728f50aba1f6.png",
    "description": "本次升级之路分模块，逐个击破。反转链表题解这是个经典的链表问题，其实这个问题的关键就在于要提前保存下一个节点的值。因为你在让当前节点指向上一个节点的过程中，就会把当前节点的next指向改变，如果不提前保存当前节点的next值的话，就会找不到原有的当前节点的next值。迭代大法时间复杂度：O(n...",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23350581,
    "slug": "drpg7h",
    "title": "线性表",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"l1iKi\"></a>\n## 概念\n线性表是n个元素的**有限**序列，最常用的是**链式表达式，**通常也叫作**线性链表**或者**链表。**<br />**<br />在链表中存储的数据元素也叫作**节点，**一个节点存储的就是一条数据记录。<br />每个节点的结构包括两个部分：\n\n1. 具体的数据值\n1. 指向下一个节点的指针\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=95&originWidth=159&size=910&status=done&style=none&width=159)<br />在链表的最前面通常有一个**头指针**用来指向第一个节点。<br />对于链表的最后一个节点，由于在他之后没有下一个节点，因此它的指针是一个**空指针。**<br />**<br />\n\n<a name=\"svzvV\"></a>\n### 单向链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607566998007-7eb2e286-606b-4997-aed6-2e7934b20015.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=131&originWidth=721&size=5098&status=done&style=none&width=584)\n> 如上图所示：只能通过上一个节点的指针找到下一个节点，而不能通过下一个节点去找到上一个节点\n\n<a name=\"2YWry\"></a>\n### 循环链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568508498-ae10d7f7-ae94-4fca-94c4-0e91af21feeb.png#align=left&display=inline&height=107&margin=%5Bobject%20Object%5D&name=image.png&originHeight=124&originWidth=666&size=5026&status=done&style=none&width=573)\n> 让最后一个元素的指针指向第一个元素，就形成了循环链表\n\n<a name=\"bWnj0\"></a>\n### 双向链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568635088-458b72fc-2265-4c16-ac27-766a45c35168.png#align=left&display=inline&height=94&margin=%5Bobject%20Object%5D&name=image.png&originHeight=111&originWidth=691&size=4776&status=done&style=none&width=584)\n> 给每个元素增加一个指向上一个元素的指针就形成了双向链表\n> 双向链表可以通过自身查找到上一个元素，也可以查找到下一个元素\n\n\n<br />\n\n<a name=\"gtm9G\"></a>\n### 双向循环链表\n> 同样的还可以将双向链表和循环链表相结合，形成双向循环链表\n\n\n\n<a name=\"UweVS\"></a>\n## 单向链表的增删查\n\n\n<a name=\"0uDfD\"></a>\n### 增\n<a name=\"s3wMT\"></a>\n### \n当我们想要在一个链表**A**节点和**B**节点的中间增加节点**C**时，需要进行以下两步：\n\n1. 使C节点的net等于A节点的next\n1. 改变A节点的next等于C节点\n> 第一步和第二步的顺序不能调换，如果先执行第一步的话，那么就没办法获取到指向B节点的指针了，除非是新建一个变量提前缓存该指针\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607571219091-ccbdcb0d-d048-463b-8b86-9aca0faad5ac.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=image.png&originHeight=202&originWidth=692&size=7827&status=done&style=none&width=601)\n```javascript\nC.next = A.next;\nA.next = C;\n```\n<a name=\"HDxvz\"></a>\n### 删\n\n<br />当我们想要在一个链表中删除**B**节点时，需要进行以下一步：\n\n1. 使A的next等于B的next\n> 这里需要注意，A.next = B， 所以我们在处理这一步的时候，完全可以写成 ` A.next = A.next.next ` ;\n\n```javascript\nA.next = A.next.next\n```\n<a name=\"MhD6Y\"></a>\n### 查\n链表这种数据结构对于查找操作来说是**弱项。**<br />因为链表的查找只能从第一个节点开始，逐个查找。<br />\n<br />\n<br />通过上面的增删查操作我们可以明显感知到，链表这种数据结构在**增、删**的操作上是比较方便的，可以在**O(1)的时间复杂度**内完成，但是**查**的话就是**O(n)的时间复杂度**了。<br />但是链表在增删上的优势并不明显，因为我们在增删的时候往往会伴随着查找的动作，比如我们在第五个节点后面添加一个新的节点，就会有这样的过程：\n\n1. 查找到链表中的第5个节点\n1. 在他后面新增节点\n\n\n<br />那这么说链表就没什么用了吗？<br />\n<br />当然不是，链表的真正价值在于它存储的数据方式是按照顺序进行关联存储的，如果对于元素个数不确定，并且经常进行增删的数据来说，链表是比较合适的\n> 链表在内存中可以存储在不连续的内存空间内\n> 因为链表的顺序关联是通过指针进行关联的\n> 所以对于不确定元素个数的数据来说，存储在内存空间中的各个位置，然后通过next指针关联是较好的\n\n对于元素个数确定的数据，那么数组就是比较好的选择了\n> 数组在内存中开辟的是一块固定的连续内存空间\n\n\n\n",
    "body_draft": "<a name=\"l1iKi\"></a>\n## 概念\n线性表是n个元素的**有限**序列，最常用的是**链式表达式，**通常也叫作**线性链表**或者**链表。**<br />**<br />在链表中存储的数据元素也叫作**节点，**一个节点存储的就是一条数据记录。<br />每个节点的结构包括两个部分：\n\n1. 具体的数据值\n1. 指向下一个节点的指针\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=95&originWidth=159&size=910&status=done&style=none&width=159)<br />在链表的最前面通常有一个**头指针**用来指向第一个节点。<br />对于链表的最后一个节点，由于在他之后没有下一个节点，因此它的指针是一个**空指针。**<br />**<br />\n\n<a name=\"svzvV\"></a>\n### 单向链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607566998007-7eb2e286-606b-4997-aed6-2e7934b20015.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=131&originWidth=721&size=5098&status=done&style=none&width=584)\n> 如上图所示：只能通过上一个节点的指针找到下一个节点，而不能通过下一个节点去找到上一个节点\n\n<a name=\"2YWry\"></a>\n### 循环链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568508498-ae10d7f7-ae94-4fca-94c4-0e91af21feeb.png#align=left&display=inline&height=107&margin=%5Bobject%20Object%5D&name=image.png&originHeight=124&originWidth=666&size=5026&status=done&style=none&width=573)\n> 让最后一个元素的指针指向第一个元素，就形成了循环链表\n\n<a name=\"bWnj0\"></a>\n### 双向链表\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568635088-458b72fc-2265-4c16-ac27-766a45c35168.png#align=left&display=inline&height=94&margin=%5Bobject%20Object%5D&name=image.png&originHeight=111&originWidth=691&size=4776&status=done&style=none&width=584)\n> 给每个元素增加一个指向上一个元素的指针就形成了双向链表\n> 双向链表可以通过自身查找到上一个元素，也可以查找到下一个元素\n\n\n<br />\n\n<a name=\"gtm9G\"></a>\n### 双向循环链表\n> 同样的还可以将双向链表和循环链表相结合，形成双向循环链表\n\n\n\n<a name=\"UweVS\"></a>\n## 单向链表的增删查\n\n\n<a name=\"0uDfD\"></a>\n### 增\n<a name=\"s3wMT\"></a>\n### \n当我们想要在一个链表**A**节点和**B**节点的中间增加节点**C**时，需要进行以下两步：\n\n1. 使C节点的net等于A节点的next\n1. 改变A节点的next等于C节点\n> 第一步和第二步的顺序不能调换，如果先执行第一步的话，那么就没办法获取到指向B节点的指针了，除非是新建一个变量提前缓存该指针\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607571219091-ccbdcb0d-d048-463b-8b86-9aca0faad5ac.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=image.png&originHeight=202&originWidth=692&size=7827&status=done&style=none&width=601)\n```javascript\nC.next = A.next;\nA.next = C;\n```\n<a name=\"HDxvz\"></a>\n### 删\n\n<br />当我们想要在一个链表中删除**B**节点时，需要进行以下一步：\n\n1. 使A的next等于B的next\n> 这里需要注意，A.next = B， 所以我们在处理这一步的时候，完全可以写成 ` A.next = A.next.next ` ;\n\n```javascript\nA.next = A.next.next\n```\n<a name=\"MhD6Y\"></a>\n### 查\n链表这种数据结构对于查找操作来说是**弱项。**<br />因为链表的查找只能从第一个节点开始，逐个查找。<br />\n<br />\n<br />通过上面的增删查操作我们可以明显感知到，链表这种数据结构在**增、删**的操作上是比较方便的，可以在**O(1)的时间复杂度**内完成，但是**查**的话就是**O(n)的时间复杂度**了。<br />但是链表在增删上的优势并不明显，因为我们在增删的时候往往会伴随着查找的动作，比如我们在第五个节点后面添加一个新的节点，就会有这样的过程：\n\n1. 查找到链表中的第5个节点\n1. 在他后面新增节点\n\n\n<br />那这么说链表就没什么用了吗？<br />\n<br />当然不是，链表的真正价值在于它存储的数据方式是按照顺序进行关联存储的，如果对于元素个数不确定，并且经常进行增删的数据来说，链表是比较合适的\n> 链表在内存中可以存储在不连续的内存空间内\n> 因为链表的顺序关联是通过指针进行关联的\n> 所以对于不确定元素个数的数据来说，存储在内存空间中的各个位置，然后通过next指针关联是较好的\n\n对于元素个数确定的数据，那么数组就是比较好的选择了\n> 数组在内存中开辟的是一块固定的连续内存空间\n\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C1%5D%2C%5B0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"59fbb0bfa799b9721bbfd4a98192cc3e\" id=\"l1iKi\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">概念</h2><p data-lake-id=\"cc5cc62fef5c8a56d9bda92a7a1a8a54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">线性表是n个元素的<strong>有限</strong>序列，最常用的是<strong>链式表达式，</strong>通常也叫作<strong>线性链表</strong>或者<strong>链表。</strong></p><p data-lake-id=\"828498981e74eb6a4743ff409d98d968\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><p data-lake-id=\"7a778f014fce621ff524d12b693606d6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在链表中存储的数据元素也叫作<strong>节点，</strong>一个节点存储的就是一条数据记录。</p><p data-lake-id=\"e48a9cb900615979e1207fc52e8bc501\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">每个节点的结构包括两个部分：</p><ol data-lake-id=\"524f68237604f523f5b0e6ffe58ec5bc\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"494e84aee9d8f2c1236b589dd75acac9\">具体的数据值</li><li data-lake-id=\"257b67cc531fe2cf2ab9a92d0df953b5\">指向下一个节点的指针</li></ol><p data-lake-id=\"b3a94b6079646d678d1e693c520b6c90\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"95px\" style=\"visibility: visible; width: 159px;\"></span></p><p data-lake-id=\"27de97591b070fcdf3a14dd4c53eca23\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在链表的最前面通常有一个<strong>头指针</strong>用来指向第一个节点。</p><p data-lake-id=\"5c078c26b1ef3ad25743c480a235e7f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">对于链表的最后一个节点，由于在他之后没有下一个节点，因此它的指针是一个<strong>空指针。</strong></p><p data-lake-id=\"786652e154999137657f076c9c440e2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><p data-lake-id=\"7a3b0d81eb370c0c3cfdd7463493abdf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"461e59232bc042321de807ad50373e5a\" id=\"svzvV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">单向链表</h3><p data-lake-id=\"ccfbc9c6c7dad2df00ce35b73a8f08cb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607566998007-7eb2e286-606b-4997-aed6-2e7934b20015.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"106px\" style=\"visibility: visible; width: 584px;\"></span></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"0128370c173f6939a3875ea79c48cfde\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如上图所示：只能通过上一个节点的指针找到下一个节点，而不能通过下一个节点去找到上一个节点</p></blockquote><h3 data-lake-id=\"622812580ae1bddc4f57fe618adccfb4\" id=\"2YWry\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">循环链表</h3><p data-lake-id=\"1e77b9bed3d1214ba2124684dc22135f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568508498-ae10d7f7-ae94-4fca-94c4-0e91af21feeb.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"107px\" style=\"visibility: visible; width: 573px;\"></span></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"c6a200964b8c6868afb37af743257f36\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">让最后一个元素的指针指向第一个元素，就形成了循环链表</p></blockquote><h3 data-lake-id=\"15e7b5547331eca539968de4c7c0871e\" id=\"bWnj0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">双向链表</h3><p data-lake-id=\"00b3aaf4e75c0db57b1f4a472f36c7c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607568635088-458b72fc-2265-4c16-ac27-766a45c35168.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"94px\" style=\"visibility: visible; width: 584px;\"></span></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"75a393d84e72894e267ee8c6b7875165\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">给每个元素增加一个指向上一个元素的指针就形成了双向链表</p><p data-lake-id=\"8802070a7b8511551936fa6e601fd5c5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">双向链表可以通过自身查找到上一个元素，也可以查找到下一个元素</p></blockquote><p data-lake-id=\"5fdf18bd37bf8471187f7b84c0d07a7b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6ab63cee8a61f90bcc8472bfa0cdabc8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"0bc2a11247298d5cf4c0d0a99792db28\" id=\"gtm9G\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">双向循环链表</h3><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"4c782b1ea1af7f56345e115373ee9305\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">同样的还可以将双向链表和循环链表相结合，形成双向循环链表</p></blockquote><p data-lake-id=\"ba387a4b6059f14f626fb12a9e55af1a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"832483ba106d261ca60600205dbe0884\" id=\"UweVS\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">单向链表的增删查</h2><p data-lake-id=\"47c8abb48499139b76254ac74e21af60\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"bbee35cc6327c4eaacea532b7faeade5\" id=\"0uDfD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">增</h3><h3 data-lake-id=\"0ff460d984defb8fee02ba6990c9e4a7\" id=\"s3wMT\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\"><br></h3><p data-lake-id=\"a25588e3951b158617030ad64ebccf2f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当我们想要在一个链表<strong>A</strong>节点和<strong>B</strong>节点的中间增加节点<strong>C</strong>时，需要进行以下两步：</p><ol data-lake-id=\"524deb6523335b3bf05d353cda42605b\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e2fdafab46be88d6badd86e9a16c6b95\">使C节点的net等于A节点的next</li><li data-lake-id=\"da5f9a414bd07787c44346c59bb542ca\">改变A节点的next等于C节点</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"a3533e7d66a195ba80f242c14fd43544\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第一步和第二步的顺序不能调换，如果先执行第一步的话，那么就没办法获取到指向B节点的指针了，除非是新建一个变量提前缓存该指针</p></blockquote><p data-lake-id=\"c1763bc5a1c56a630bcb5e0e56674d34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607571219091-ccbdcb0d-d048-463b-8b86-9aca0faad5ac.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"175px\" style=\"visibility: visible; width: 601px;\"></span></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"AnRPc\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">C</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">A</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">A</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">C</span>;</span></span></pre></div></div></div><h3 data-lake-id=\"805d541194bc4f88ff64129c2bf8d0e9\" id=\"HDxvz\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">删</h3><p data-lake-id=\"6d75341939fa7118ec10f7f1c223ddbf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"97c85b8704c4fe3ffe13842b6d5b8b15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当我们想要在一个链表中删除<strong>B</strong>节点时，需要进行以下一步：</p><ol data-lake-id=\"67f94070681185745803b5147beb4635\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"75bec82524d8b4962c4b815ec5360778\">使A的next等于B的next</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"85a5573efd8f8c3e2438a45538016484\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这里需要注意，A.next = B， 所以我们在处理这一步的时候，完全可以写成 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> A.next = A.next.next </code>&nbsp;;</p></blockquote><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"vAnp9\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">A</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">A</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">next</span></span></span></pre></div></div></div><h3 data-lake-id=\"6e558cf3cd478ea50533d6ab25402a11\" id=\"MhD6Y\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">查</h3><p data-lake-id=\"6f7d7573469c9fb325587f6a3955d532\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">链表这种数据结构对于查找操作来说是<strong>弱项。</strong></p><p data-lake-id=\"928b0ec9a232d7c41c82fbcbb4be450d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">因为链表的查找只能从第一个节点开始，逐个查找。</p><p data-lake-id=\"38f71779f050ed3c1b5e54538da94a51\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"95e59fd3569ad64ba0bf3c2c4f66f741\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"aefb850dd2ebdb8882733fd90671c4c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">通过上面的增删查操作我们可以明显感知到，链表这种数据结构在<strong>增、删</strong>的操作上是比较方便的，可以在<strong>O(1)的时间复杂度</strong>内完成，但是<strong>查</strong>的话就是<strong>O(n)的时间复杂度</strong>了。</p><p data-lake-id=\"0a10df6d719bc6e50c73e0ea462c739a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">但是链表在增删上的优势并不明显，因为我们在增删的时候往往会伴随着查找的动作，比如我们在第五个节点后面添加一个新的节点，就会有这样的过程：</p><ol data-lake-id=\"cccdbd2daa223a03ed16d90cfe777413\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"6ab8760941302b241ff2d99854e9c336\">查找到链表中的第5个节点</li><li data-lake-id=\"6c8777e6ae34880c540a1af4d36cb5f7\">在他后面新增节点</li></ol><p data-lake-id=\"3caf223ea05d8fccb2d6a69936a26a6b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f400a9b0d1834807feeae10faf5bac24\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那这么说链表就没什么用了吗？</p><p data-lake-id=\"2867291fcf821822b6d0305ca9822319\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f1f867ae95b753d8b2bf2a181c97ecd6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当然不是，链表的真正价值在于它存储的数据方式是按照顺序进行关联存储的，<span style=\"background-color: #FADB14;\">如果对于元素个数不确定，并且经常进行增删的数据来说，链表是比较合适的</span></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"67efb35c6beb3e6ec94d22e7520a859c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">链表在内存中可以存储在不连续的内存空间内</p><p data-lake-id=\"242959883c5c12b0d8c527326d516951\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">因为链表的顺序关联是通过指针进行关联的</p><p data-lake-id=\"376afcc69c9d63c438772519a7cf1d15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以对于不确定元素个数的数据来说，存储在内存空间中的各个位置，然后通过next指针关联是较好的</p></blockquote><p data-lake-id=\"63de54084aa4137b7496e2ca8adaceef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">对于元素个数确定的数据，那么数组就是比较好的选择了</span></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"5a71fad7485378563e79951737a69293\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">数组在内存中开辟的是一块固定的连续内存空间</p></blockquote><p data-lake-id=\"994f19aee5b792cedce888b71445f6d9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"59fbb0bfa799b9721bbfd4a98192cc3e\" id=\"l1iKi\"><cursor />概念</h2><p data-lake-id=\"cc5cc62fef5c8a56d9bda92a7a1a8a54\">线性表是n个元素的<strong>有限</strong>序列，最常用的是<strong>链式表达式，</strong>通常也叫作<strong>线性链表</strong>或者<strong>链表。</strong></p><p data-lake-id=\"828498981e74eb6a4743ff409d98d968\"><strong><br /></strong></p><p data-lake-id=\"7a778f014fce621ff524d12b693606d6\">在链表中存储的数据元素也叫作<strong>节点，</strong>一个节点存储的就是一条数据记录。</p><p data-lake-id=\"e48a9cb900615979e1207fc52e8bc501\">每个节点的结构包括两个部分：</p><ol data-lake-id=\"524f68237604f523f5b0e6ffe58ec5bc\" start=\"1\"><li data-lake-id=\"494e84aee9d8f2c1236b589dd75acac9\">具体的数据值</li><li data-lake-id=\"257b67cc531fe2cf2ab9a92d0df953b5\">指向下一个节点的指针</li></ol><p data-lake-id=\"b3a94b6079646d678d1e693c520b6c90\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png%22%2C%22originWidth%22%3A159%2C%22originHeight%22%3A95%2C%22name%22%3A%22image.png%22%2C%22size%22%3A910%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A23.579283%2C%22y%22%3A39.24025%2C%22width%22%3A13.580640999999996%2C%22height%22%3A13.580640999999996%2C%22text%22%3A%221%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%221%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A159%2C%22height%22%3A95%7D\"></card></p><p data-lake-id=\"27de97591b070fcdf3a14dd4c53eca23\">在链表的最前面通常有一个<strong>头指针</strong>用来指向第一个节点。</p><p data-lake-id=\"5c078c26b1ef3ad25743c480a235e7f1\">对于链表的最后一个节点，由于在他之后没有下一个节点，因此它的指针是一个<strong>空指针。</strong></p><p data-lake-id=\"786652e154999137657f076c9c440e2d\"><strong><br /></strong></p><p data-lake-id=\"7a3b0d81eb370c0c3cfdd7463493abdf\"><br /></p><h3 data-lake-id=\"461e59232bc042321de807ad50373e5a\" id=\"svzvV\">单向链表</h3><p data-lake-id=\"ccfbc9c6c7dad2df00ce35b73a8f08cb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607566998007-7eb2e286-606b-4997-aed6-2e7934b20015.png%22%2C%22originWidth%22%3A721%2C%22originHeight%22%3A131%2C%22name%22%3A%22image.png%22%2C%22size%22%3A5098%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A480.8949%2C%22y%22%3A46.264114%2C%22width%22%3A14.182219999999973%2C%22height%22%3A14.182219999999973%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A325.59146%2C%22y%22%3A46.607143%2C%22width%22%3A13.323910000000012%2C%22height%22%3A13.323910000000012%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A626.3809%2C%22y%22%3A48.000328%2C%22width%22%3A34.84083999999996%2C%22height%22%3A16.85164199999999%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A584%2C%22height%22%3A106%7D\"></card></p><blockquote><p data-lake-id=\"0128370c173f6939a3875ea79c48cfde\">如上图所示：只能通过上一个节点的指针找到下一个节点，而不能通过下一个节点去找到上一个节点</p></blockquote><h3 data-lake-id=\"622812580ae1bddc4f57fe618adccfb4\" id=\"2YWry\">循环链表</h3><p data-lake-id=\"1e77b9bed3d1214ba2124684dc22135f\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607568508498-ae10d7f7-ae94-4fca-94c4-0e91af21feeb.png%22%2C%22originWidth%22%3A666%2C%22originHeight%22%3A124%2C%22name%22%3A%22image.png%22%2C%22size%22%3A5026%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A456.60687%2C%22y%22%3A31.105906%2C%22width%22%3A11.206209999999999%2C%22height%22%3A11.206209999999999%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A300.1478%2C%22y%22%3A31.374166%2C%22width%22%3A12.065669999999955%2C%22height%22%3A12.065669999999955%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A143.8543%2C%22y%22%3A32.64134%2C%22width%22%3A11.222340000000003%2C%22height%22%3A11.222340000000003%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A602.0962%2C%22y%22%3A33.337982%2C%22width%22%3A32.48144000000002%2C%22height%22%3A15.900555000000004%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%201%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A573%2C%22height%22%3A107%7D\"></card></p><blockquote><p data-lake-id=\"c6a200964b8c6868afb37af743257f36\">让最后一个元素的指针指向第一个元素，就形成了循环链表</p></blockquote><h3 data-lake-id=\"15e7b5547331eca539968de4c7c0871e\" id=\"bWnj0\">双向链表</h3><p data-lake-id=\"00b3aaf4e75c0db57b1f4a472f36c7c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607568635088-458b72fc-2265-4c16-ac27-766a45c35168.png%22%2C%22originWidth%22%3A691%2C%22originHeight%22%3A111%2C%22name%22%3A%22image.png%22%2C%22size%22%3A4776%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A478.68854%2C%22y%22%3A39.1042%2C%22width%22%3A13.836299999999994%2C%22height%22%3A13.836299999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A323.0165%2C%22y%22%3A39.38449%2C%22width%22%3A13.742079999999987%2C%22height%22%3A13.742079999999987%2C%22text%22%3A%222%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A584%2C%22height%22%3A94%7D\"></card></p><blockquote><p data-lake-id=\"75a393d84e72894e267ee8c6b7875165\">给每个元素增加一个指向上一个元素的指针就形成了双向链表</p><p data-lake-id=\"8802070a7b8511551936fa6e601fd5c5\">双向链表可以通过自身查找到上一个元素，也可以查找到下一个元素</p></blockquote><p data-lake-id=\"5fdf18bd37bf8471187f7b84c0d07a7b\"><br /></p><p data-lake-id=\"6ab63cee8a61f90bcc8472bfa0cdabc8\"><br /></p><h3 data-lake-id=\"0bc2a11247298d5cf4c0d0a99792db28\" id=\"gtm9G\">双向循环链表</h3><blockquote><p data-lake-id=\"4c782b1ea1af7f56345e115373ee9305\">同样的还可以将双向链表和循环链表相结合，形成双向循环链表</p></blockquote><p data-lake-id=\"ba387a4b6059f14f626fb12a9e55af1a\"><br /></p><h2 data-lake-id=\"832483ba106d261ca60600205dbe0884\" id=\"UweVS\">单向链表的增删查</h2><p data-lake-id=\"47c8abb48499139b76254ac74e21af60\"><br /></p><h3 data-lake-id=\"bbee35cc6327c4eaacea532b7faeade5\" id=\"0uDfD\">增</h3><h3 data-lake-id=\"0ff460d984defb8fee02ba6990c9e4a7\" id=\"s3wMT\"><br /></h3><p data-lake-id=\"a25588e3951b158617030ad64ebccf2f\">当我们想要在一个链表<strong>A</strong>节点和<strong>B</strong>节点的中间增加节点<strong>C</strong>时，需要进行以下两步：</p><ol data-lake-id=\"524deb6523335b3bf05d353cda42605b\" start=\"1\"><li data-lake-id=\"e2fdafab46be88d6badd86e9a16c6b95\">使C节点的net等于A节点的next</li><li data-lake-id=\"da5f9a414bd07787c44346c59bb542ca\">改变A节点的next等于C节点</li></ol><blockquote><p data-lake-id=\"a3533e7d66a195ba80f242c14fd43544\">第一步和第二步的顺序不能调换，如果先执行第一步的话，那么就没办法获取到指向B节点的指针了，除非是新建一个变量提前缓存该指针</p></blockquote><p data-lake-id=\"c1763bc5a1c56a630bcb5e0e56674d34\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607571219091-ccbdcb0d-d048-463b-8b86-9aca0faad5ac.png%22%2C%22originWidth%22%3A692%2C%22originHeight%22%3A202%2C%22name%22%3A%22image.png%22%2C%22size%22%3A7827%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A493.82126%2C%22y%22%3A43.565662%2C%22width%22%3A13.249439999999993%2C%22height%22%3A13.249439999999993%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A337.30762%2C%22y%22%3A44.21599%2C%22width%22%3A14.273950000000013%2C%22height%22%3A14.273950000000013%2C%22text%22%3A%22B%22%7D%2C%7B%22x%22%3A639.4663%2C%22y%22%3A44.702568%2C%22width%22%3A33.07776999999999%2C%22height%22%3A16.753152%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%20B%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A601%2C%22height%22%3A175%7D\"></card></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22C.next%20%3D%20A.next%3B%5CnA.next%20%3D%20C%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22AnRPc%22%7D\"></card><h3 data-lake-id=\"805d541194bc4f88ff64129c2bf8d0e9\" id=\"HDxvz\">删</h3><p data-lake-id=\"6d75341939fa7118ec10f7f1c223ddbf\"><br /></p><p data-lake-id=\"97c85b8704c4fe3ffe13842b6d5b8b15\">当我们想要在一个链表中删除<strong>B</strong>节点时，需要进行以下一步：</p><ol data-lake-id=\"67f94070681185745803b5147beb4635\" start=\"1\"><li data-lake-id=\"75bec82524d8b4962c4b815ec5360778\">使A的next等于B的next</li></ol><blockquote><p data-lake-id=\"85a5573efd8f8c3e2438a45538016484\">这里需要注意，A.next = B， 所以我们在处理这一步的时候，完全可以写成 <code> A.next = A.next.next </code> ;</p></blockquote><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22A.next%20%3D%20A.next.next%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22vAnp9%22%7D\"></card><h3 data-lake-id=\"6e558cf3cd478ea50533d6ab25402a11\" id=\"MhD6Y\">查</h3><p data-lake-id=\"6f7d7573469c9fb325587f6a3955d532\">链表这种数据结构对于查找操作来说是<strong>弱项。</strong></p><p data-lake-id=\"928b0ec9a232d7c41c82fbcbb4be450d\">因为链表的查找只能从第一个节点开始，逐个查找。</p><p data-lake-id=\"38f71779f050ed3c1b5e54538da94a51\"><br /></p><p data-lake-id=\"95e59fd3569ad64ba0bf3c2c4f66f741\"><br /></p><p data-lake-id=\"aefb850dd2ebdb8882733fd90671c4c9\">通过上面的增删查操作我们可以明显感知到，链表这种数据结构在<strong>增、删</strong>的操作上是比较方便的，可以在<strong>O(1)的时间复杂度</strong>内完成，但是<strong>查</strong>的话就是<strong>O(n)的时间复杂度</strong>了。</p><p data-lake-id=\"0a10df6d719bc6e50c73e0ea462c739a\">但是链表在增删上的优势并不明显，因为我们在增删的时候往往会伴随着查找的动作，比如我们在第五个节点后面添加一个新的节点，就会有这样的过程：</p><ol data-lake-id=\"cccdbd2daa223a03ed16d90cfe777413\" start=\"1\"><li data-lake-id=\"6ab8760941302b241ff2d99854e9c336\">查找到链表中的第5个节点</li><li data-lake-id=\"6c8777e6ae34880c540a1af4d36cb5f7\">在他后面新增节点</li></ol><p data-lake-id=\"3caf223ea05d8fccb2d6a69936a26a6b\"><br /></p><p data-lake-id=\"f400a9b0d1834807feeae10faf5bac24\">那这么说链表就没什么用了吗？</p><p data-lake-id=\"2867291fcf821822b6d0305ca9822319\"><br /></p><p data-lake-id=\"f1f867ae95b753d8b2bf2a181c97ecd6\">当然不是，链表的真正价值在于它存储的数据方式是按照顺序进行关联存储的，<span style=\"background-color: #FADB14;\">如果对于元素个数不确定，并且经常进行增删的数据来说，链表是比较合适的</span></p><blockquote><p data-lake-id=\"67efb35c6beb3e6ec94d22e7520a859c\">链表在内存中可以存储在不连续的内存空间内</p><p data-lake-id=\"242959883c5c12b0d8c527326d516951\">因为链表的顺序关联是通过指针进行关联的</p><p data-lake-id=\"376afcc69c9d63c438772519a7cf1d15\">所以对于不确定元素个数的数据来说，存储在内存空间中的各个位置，然后通过next指针关联是较好的</p></blockquote><p data-lake-id=\"63de54084aa4137b7496e2ca8adaceef\"><span style=\"background-color: #FADB14;\">对于元素个数确定的数据，那么数组就是比较好的选择了</span></p><blockquote><p data-lake-id=\"5a71fad7485378563e79951737a69293\">数组在内存中开辟的是一块固定的连续内存空间</p></blockquote><p data-lake-id=\"994f19aee5b792cedce888b71445f6d9\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"59fbb0bfa799b9721bbfd4a98192cc3e\" id=\"l1iKi\"><cursor />概念</h2><p data-lake-id=\"cc5cc62fef5c8a56d9bda92a7a1a8a54\">线性表是n个元素的<strong>有限</strong>序列，最常用的是<strong>链式表达式，</strong>通常也叫作<strong>线性链表</strong>或者<strong>链表。</strong></p><p data-lake-id=\"828498981e74eb6a4743ff409d98d968\"><strong><br /></strong></p><p data-lake-id=\"7a778f014fce621ff524d12b693606d6\">在链表中存储的数据元素也叫作<strong>节点，</strong>一个节点存储的就是一条数据记录。</p><p data-lake-id=\"e48a9cb900615979e1207fc52e8bc501\">每个节点的结构包括两个部分：</p><ol data-lake-id=\"524f68237604f523f5b0e6ffe58ec5bc\" start=\"1\"><li data-lake-id=\"494e84aee9d8f2c1236b589dd75acac9\">具体的数据值</li><li data-lake-id=\"257b67cc531fe2cf2ab9a92d0df953b5\">指向下一个节点的指针</li></ol><p data-lake-id=\"b3a94b6079646d678d1e693c520b6c90\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png%22%2C%22originWidth%22%3A159%2C%22originHeight%22%3A95%2C%22name%22%3A%22image.png%22%2C%22size%22%3A910%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A23.579283%2C%22y%22%3A39.24025%2C%22width%22%3A13.580640999999996%2C%22height%22%3A13.580640999999996%2C%22text%22%3A%221%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%221%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A159%2C%22height%22%3A95%7D\"></card></p><p data-lake-id=\"27de97591b070fcdf3a14dd4c53eca23\">在链表的最前面通常有一个<strong>头指针</strong>用来指向第一个节点。</p><p data-lake-id=\"5c078c26b1ef3ad25743c480a235e7f1\">对于链表的最后一个节点，由于在他之后没有下一个节点，因此它的指针是一个<strong>空指针。</strong></p><p data-lake-id=\"786652e154999137657f076c9c440e2d\"><strong><br /></strong></p><p data-lake-id=\"7a3b0d81eb370c0c3cfdd7463493abdf\"><br /></p><h3 data-lake-id=\"461e59232bc042321de807ad50373e5a\" id=\"svzvV\">单向链表</h3><p data-lake-id=\"ccfbc9c6c7dad2df00ce35b73a8f08cb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607566998007-7eb2e286-606b-4997-aed6-2e7934b20015.png%22%2C%22originWidth%22%3A721%2C%22originHeight%22%3A131%2C%22name%22%3A%22image.png%22%2C%22size%22%3A5098%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A480.8949%2C%22y%22%3A46.264114%2C%22width%22%3A14.182219999999973%2C%22height%22%3A14.182219999999973%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A325.59146%2C%22y%22%3A46.607143%2C%22width%22%3A13.323910000000012%2C%22height%22%3A13.323910000000012%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A626.3809%2C%22y%22%3A48.000328%2C%22width%22%3A34.84083999999996%2C%22height%22%3A16.85164199999999%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A584%2C%22height%22%3A106%7D\"></card></p><blockquote><p data-lake-id=\"0128370c173f6939a3875ea79c48cfde\">如上图所示：只能通过上一个节点的指针找到下一个节点，而不能通过下一个节点去找到上一个节点</p></blockquote><h3 data-lake-id=\"622812580ae1bddc4f57fe618adccfb4\" id=\"2YWry\">循环链表</h3><p data-lake-id=\"1e77b9bed3d1214ba2124684dc22135f\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607568508498-ae10d7f7-ae94-4fca-94c4-0e91af21feeb.png%22%2C%22originWidth%22%3A666%2C%22originHeight%22%3A124%2C%22name%22%3A%22image.png%22%2C%22size%22%3A5026%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A456.60687%2C%22y%22%3A31.105906%2C%22width%22%3A11.206209999999999%2C%22height%22%3A11.206209999999999%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A300.1478%2C%22y%22%3A31.374166%2C%22width%22%3A12.065669999999955%2C%22height%22%3A12.065669999999955%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A143.8543%2C%22y%22%3A32.64134%2C%22width%22%3A11.222340000000003%2C%22height%22%3A11.222340000000003%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A602.0962%2C%22y%22%3A33.337982%2C%22width%22%3A32.48144000000002%2C%22height%22%3A15.900555000000004%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%201%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A573%2C%22height%22%3A107%7D\"></card></p><blockquote><p data-lake-id=\"c6a200964b8c6868afb37af743257f36\">让最后一个元素的指针指向第一个元素，就形成了循环链表</p></blockquote><h3 data-lake-id=\"15e7b5547331eca539968de4c7c0871e\" id=\"bWnj0\">双向链表</h3><p data-lake-id=\"00b3aaf4e75c0db57b1f4a472f36c7c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607568635088-458b72fc-2265-4c16-ac27-766a45c35168.png%22%2C%22originWidth%22%3A691%2C%22originHeight%22%3A111%2C%22name%22%3A%22image.png%22%2C%22size%22%3A4776%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A478.68854%2C%22y%22%3A39.1042%2C%22width%22%3A13.836299999999994%2C%22height%22%3A13.836299999999994%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A323.0165%2C%22y%22%3A39.38449%2C%22width%22%3A13.742079999999987%2C%22height%22%3A13.742079999999987%2C%22text%22%3A%222%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%202%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A584%2C%22height%22%3A94%7D\"></card></p><blockquote><p data-lake-id=\"75a393d84e72894e267ee8c6b7875165\">给每个元素增加一个指向上一个元素的指针就形成了双向链表</p><p data-lake-id=\"8802070a7b8511551936fa6e601fd5c5\">双向链表可以通过自身查找到上一个元素，也可以查找到下一个元素</p></blockquote><p data-lake-id=\"5fdf18bd37bf8471187f7b84c0d07a7b\"><br /></p><p data-lake-id=\"6ab63cee8a61f90bcc8472bfa0cdabc8\"><br /></p><h3 data-lake-id=\"0bc2a11247298d5cf4c0d0a99792db28\" id=\"gtm9G\">双向循环链表</h3><blockquote><p data-lake-id=\"4c782b1ea1af7f56345e115373ee9305\">同样的还可以将双向链表和循环链表相结合，形成双向循环链表</p></blockquote><p data-lake-id=\"ba387a4b6059f14f626fb12a9e55af1a\"><br /></p><h2 data-lake-id=\"832483ba106d261ca60600205dbe0884\" id=\"UweVS\">单向链表的增删查</h2><p data-lake-id=\"47c8abb48499139b76254ac74e21af60\"><br /></p><h3 data-lake-id=\"bbee35cc6327c4eaacea532b7faeade5\" id=\"0uDfD\">增</h3><h3 data-lake-id=\"0ff460d984defb8fee02ba6990c9e4a7\" id=\"s3wMT\"><br /></h3><p data-lake-id=\"a25588e3951b158617030ad64ebccf2f\">当我们想要在一个链表<strong>A</strong>节点和<strong>B</strong>节点的中间增加节点<strong>C</strong>时，需要进行以下两步：</p><ol data-lake-id=\"524deb6523335b3bf05d353cda42605b\" start=\"1\"><li data-lake-id=\"e2fdafab46be88d6badd86e9a16c6b95\">使C节点的net等于A节点的next</li><li data-lake-id=\"da5f9a414bd07787c44346c59bb542ca\">改变A节点的next等于C节点</li></ol><blockquote><p data-lake-id=\"a3533e7d66a195ba80f242c14fd43544\">第一步和第二步的顺序不能调换，如果先执行第一步的话，那么就没办法获取到指向B节点的指针了，除非是新建一个变量提前缓存该指针</p></blockquote><p data-lake-id=\"c1763bc5a1c56a630bcb5e0e56674d34\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607571219091-ccbdcb0d-d048-463b-8b86-9aca0faad5ac.png%22%2C%22originWidth%22%3A692%2C%22originHeight%22%3A202%2C%22name%22%3A%22image.png%22%2C%22size%22%3A7827%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A493.82126%2C%22y%22%3A43.565662%2C%22width%22%3A13.249439999999993%2C%22height%22%3A13.249439999999993%2C%22text%22%3A%223%22%7D%2C%7B%22x%22%3A337.30762%2C%22y%22%3A44.21599%2C%22width%22%3A14.273950000000013%2C%22height%22%3A14.273950000000013%2C%22text%22%3A%22B%22%7D%2C%7B%22x%22%3A639.4663%2C%22y%22%3A44.702568%2C%22width%22%3A33.07776999999999%2C%22height%22%3A16.753152%2C%22text%22%3A%22Null%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%223%20B%20Null%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A601%2C%22height%22%3A175%7D\"></card></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22C.next%20%3D%20A.next%3B%5CnA.next%20%3D%20C%3B%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22AnRPc%22%7D\"></card><h3 data-lake-id=\"805d541194bc4f88ff64129c2bf8d0e9\" id=\"HDxvz\">删</h3><p data-lake-id=\"6d75341939fa7118ec10f7f1c223ddbf\"><br /></p><p data-lake-id=\"97c85b8704c4fe3ffe13842b6d5b8b15\">当我们想要在一个链表中删除<strong>B</strong>节点时，需要进行以下一步：</p><ol data-lake-id=\"67f94070681185745803b5147beb4635\" start=\"1\"><li data-lake-id=\"75bec82524d8b4962c4b815ec5360778\">使A的next等于B的next</li></ol><blockquote><p data-lake-id=\"85a5573efd8f8c3e2438a45538016484\">这里需要注意，A.next = B， 所以我们在处理这一步的时候，完全可以写成 <code> A.next = A.next.next </code> ;</p></blockquote><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22A.next%20%3D%20A.next.next%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22vAnp9%22%7D\"></card><h3 data-lake-id=\"6e558cf3cd478ea50533d6ab25402a11\" id=\"MhD6Y\">查</h3><p data-lake-id=\"6f7d7573469c9fb325587f6a3955d532\">链表这种数据结构对于查找操作来说是<strong>弱项。</strong></p><p data-lake-id=\"928b0ec9a232d7c41c82fbcbb4be450d\">因为链表的查找只能从第一个节点开始，逐个查找。</p><p data-lake-id=\"38f71779f050ed3c1b5e54538da94a51\"><br /></p><p data-lake-id=\"95e59fd3569ad64ba0bf3c2c4f66f741\"><br /></p><p data-lake-id=\"aefb850dd2ebdb8882733fd90671c4c9\">通过上面的增删查操作我们可以明显感知到，链表这种数据结构在<strong>增、删</strong>的操作上是比较方便的，可以在<strong>O(1)的时间复杂度</strong>内完成，但是<strong>查</strong>的话就是<strong>O(n)的时间复杂度</strong>了。</p><p data-lake-id=\"0a10df6d719bc6e50c73e0ea462c739a\">但是链表在增删上的优势并不明显，因为我们在增删的时候往往会伴随着查找的动作，比如我们在第五个节点后面添加一个新的节点，就会有这样的过程：</p><ol data-lake-id=\"cccdbd2daa223a03ed16d90cfe777413\" start=\"1\"><li data-lake-id=\"6ab8760941302b241ff2d99854e9c336\">查找到链表中的第5个节点</li><li data-lake-id=\"6c8777e6ae34880c540a1af4d36cb5f7\">在他后面新增节点</li></ol><p data-lake-id=\"3caf223ea05d8fccb2d6a69936a26a6b\"><br /></p><p data-lake-id=\"f400a9b0d1834807feeae10faf5bac24\">那这么说链表就没什么用了吗？</p><p data-lake-id=\"2867291fcf821822b6d0305ca9822319\"><br /></p><p data-lake-id=\"f1f867ae95b753d8b2bf2a181c97ecd6\">当然不是，链表的真正价值在于它存储的数据方式是按照顺序进行关联存储的，<span style=\"background-color: #FADB14;\">如果对于元素个数不确定，并且经常进行增删的数据来说，链表是比较合适的</span></p><blockquote><p data-lake-id=\"67efb35c6beb3e6ec94d22e7520a859c\">链表在内存中可以存储在不连续的内存空间内</p><p data-lake-id=\"242959883c5c12b0d8c527326d516951\">因为链表的顺序关联是通过指针进行关联的</p><p data-lake-id=\"376afcc69c9d63c438772519a7cf1d15\">所以对于不确定元素个数的数据来说，存储在内存空间中的各个位置，然后通过next指针关联是较好的</p></blockquote><p data-lake-id=\"63de54084aa4137b7496e2ca8adaceef\"><span style=\"background-color: #FADB14;\">对于元素个数确定的数据，那么数组就是比较好的选择了</span></p><blockquote><p data-lake-id=\"5a71fad7485378563e79951737a69293\">数组在内存中开辟的是一块固定的连续内存空间</p></blockquote><p data-lake-id=\"994f19aee5b792cedce888b71445f6d9\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-02T06:06:40.000Z",
    "deleted_at": null,
    "created_at": "2020-12-10T01:47:27.000Z",
    "updated_at": "2021-02-02T06:06:40.000Z",
    "published_at": "2021-02-02T06:06:40.000Z",
    "first_published_at": "2020-12-10T02:01:40.000Z",
    "word_count": 984,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1607567010381-356ba543-6cba-4ef6-91ab-f86c874b14e8.png",
    "description": "概念线性表是n个元素的有限序列，最常用的是链式表达式，通常也叫作线性链表或者链表。在链表中存储的数据元素也叫作节点，一个节点存储的就是一条数据记录。每个节点的结构包括两个部分：具体的数据值指向下一个节点的指针在链表的最前面通常有一个头指针用来指向第一个节点。对于链表的最后一个节点，由于在他之后...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23347441,
    "slug": "admmt5",
    "title": "对Hooks的一些思考",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "TODO\n",
    "body_html": "",
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">TODO</p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-10T00:18:21.000Z",
    "deleted_at": null,
    "created_at": "2020-12-10T00:18:06.000Z",
    "updated_at": "2020-12-10T00:18:21.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": null,
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 23347439,
    "slug": "brf4n5",
    "title": "useMemo",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "TODO\n",
    "body_html": "",
    "body_lake": "",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">TODO</p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-10T00:17:58.000Z",
    "deleted_at": null,
    "created_at": "2020-12-10T00:17:48.000Z",
    "updated_at": "2020-12-10T00:17:58.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": null,
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 19447769,
    "slug": "hb5gzw",
    "title": "useCallback",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n",
    "body_draft": "TODO\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional show-placeholder\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%5D%2C%5B0%2C0%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">TODO</p>",
    "public": 1,
    "status": 0,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-12-10T00:17:44.000Z",
    "deleted_at": null,
    "created_at": "2020-12-08T03:31:06.000Z",
    "updated_at": "2020-12-10T00:17:44.000Z",
    "published_at": "2020-12-08T03:31:25.000Z",
    "first_published_at": "2020-12-08T03:31:25.000Z",
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "hits": 3,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 16854105,
    "slug": "csr8da",
    "title": "Toy-Brower",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。<br />\n\n<a name=\"wfaHF\"></a>\n## 基本功能描述\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png#align=left&display=inline&height=178&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1506&size=163962&status=done&style=none&width=1506)\n<a name=\"6zg7A\"></a>\n## 功能实现\n\n\n<a name=\"zwjkI\"></a>\n### HTTP实现\n\n<br />为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。\n\n1. 构建请求信息（请求方法、请求行、请求头、请求体）\n1. 建立网络连接（net.createServer()）\n1. 接收响应结果\n1. 处理响应结果\n   1. 处理响应头\n   1. 处理响应体 - 利用单独的子类进行body text的处理\n\n\n\n1. 构造一个发送请求的类 ` Request ` \n> 思考：这个类都需要什么东西？\n> - 首先需要一些发送请求时需要配置的基本配置项（options）\n>    - url   请求路径\n>    - port    请求端口\n>    - method    请求方法\n>    - headers    请求头\n>    - body    请求体\n> - 其次需要一个发送该请求的方法（send）\n>    - 该方法返回一个promise对象，该对象是请求回来的结果\n>    - 该方法的功能：\n>       - 构造请求并发送，发送前需要拼接上请求行、请求头、换行、请求体等信息。\n>       - 接受请求结果\n\n\n\n2. 构造一个解析响应的类 ` ResponseParse ` \n> - response返回的结果需要分段来进行处理，所以我们需要一个ResponseParse来进行装配\n> - ResponseParse来分段处理返回的结果，我们用有限状态机来记录完成这一个过程\n> - 针对response body中的内容采用另一个方法进行分段解析\n\n\n\n3. 构造一个类 ` TrunkedBodyParser ` \n> - response body针对不通的Content-type类型会有不同的处理方法\n> - 我们这里针对chunk类型进行解析\n\n\n---\n\n\n\n<a name=\"zwpIT\"></a>\n### HTML解析的实现\n\n1. 接收响应体进行解析\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607643059789-38ccd590-7e2b-42a1-8852-b7b75fa9d219.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=128&originWidth=1108&size=79721&status=done&style=none&width=554)\n\n2. 构造状态机进行标签解析\n   1. 开始标签\n      1. ` < ` 开始标签的标志\n      1. ` /n/t  ` 空格标志后面是标签属性\n   2. 结束标签\n      1. ` / ` 结束标签的标志\n      1. ` > ` 标签解析结束，开始下一个标签解析\n   3. 自封闭标签\n      1. ` </    ` 自闭和标签的标志\n3. 利用currentToken变量接受解析结果\n   1. `text`文本类型\n   1. `statTag`开始标签类型\n   1. `endTag`结束标签类型\n   1. `isSelfCloseTag`自闭和标签标志\n> 每次当前标签结束时需要`emit(currentToken)`来触发当前标签结束的事件\n\n4. 解析标签属性\n   1. 氛围attributeName和value两部分进行解析\n   1. 解析完成之后emit对应数据\n5. 构建DOM树\n   1. 使用栈进行构造\n   1. 遇到开始标签就处理好相关属性和元素名入栈\n   1. 遇到自闭和标签就相当入栈后立即出栈\n   1. 遇到闭合标签就找到对应标签出栈\n<a name=\"QCAHm\"></a>\n### CSS 计算\n\n1. 遇到style标签时，将css规则保存起来，使用css parser解析规则\n1. 当创建一个元素后应立即计算css\n   1. 理论上当我们分析一个元素时，是假设这个元素的css规则已经全部收集完毕的\n3. 在computedCss函数中，我们需要知道所有元素的父元素才可以去判断元素是否与规则匹配\n   1. 由于我们首先获取的是当前元素，所以我们获得和计算父元素匹配的顺序是由内到外的\n4. 选择器也是由内向外匹配排列的\n4. 根据选择器的类型和元素属性，计算是否当前的元素匹配\n4. 元素匹配完成就应用选择器到元素上，形成computedSty\n4. css规则具有优先级，我们利用specificity特征去进行判断比较\n   1. specificity是一个四元组，越左边权重越重\n      1. [0,0,0,]\n      1. inline、id、class、tag\n   2. css规则的specificity是根据所包含的简单选择器相加形成的\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1607825664969-8a234679-ac32-4c70-a494-6f6a7a466227.jpeg)",
    "body_draft": "为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。<br />\n\n<a name=\"wfaHF\"></a>\n## 基本功能描述\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png#align=left&display=inline&height=178&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1506&size=163962&status=done&style=none&width=1506)\n<a name=\"6zg7A\"></a>\n## 功能实现\n\n\n<a name=\"zwjkI\"></a>\n### HTTP实现\n\n<br />为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。\n\n1. 构建请求信息（请求方法、请求行、请求头、请求体）\n1. 建立网络连接（net.createServer()）\n1. 接收响应结果\n1. 处理响应结果\n   1. 处理响应头\n   1. 处理响应体 - 利用单独的子类进行body text的处理\n\n\n\n1. 构造一个发送请求的类 ` Request ` \n> 思考：这个类都需要什么东西？\n> - 首先需要一些发送请求时需要配置的基本配置项（options）\n>    - url   请求路径\n>    - port    请求端口\n>    - method    请求方法\n>    - headers    请求头\n>    - body    请求体\n> - 其次需要一个发送该请求的方法（send）\n>    - 该方法返回一个promise对象，该对象是请求回来的结果\n>    - 该方法的功能：\n>       - 构造请求并发送，发送前需要拼接上请求行、请求头、换行、请求体等信息。\n>       - 接受请求结果\n\n\n\n2. 构造一个解析响应的类 ` ResponseParse ` \n> - response返回的结果需要分段来进行处理，所以我们需要一个ResponseParse来进行装配\n> - ResponseParse来分段处理返回的结果，我们用有限状态机来记录完成这一个过程\n> - 针对response body中的内容采用另一个方法进行分段解析\n\n\n\n3. 构造一个类 ` TrunkedBodyParser ` \n> - response body针对不通的Content-type类型会有不同的处理方法\n> - 我们这里针对chunk类型进行解析\n\n\n---\n\n\n\n<a name=\"zwpIT\"></a>\n### HTML解析的实现\n\n1. 接收响应体进行解析\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1607643059789-38ccd590-7e2b-42a1-8852-b7b75fa9d219.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=128&originWidth=1108&size=79721&status=done&style=none&width=554)\n\n2. 构造状态机进行标签解析\n   1. 开始标签\n      1. ` < ` 开始标签的标志\n      1. ` /n/t  ` 空格标志后面是标签属性\n   2. 结束标签\n      1. ` / ` 结束标签的标志\n      1. ` > ` 标签解析结束，开始下一个标签解析\n   3. 自封闭标签\n      1. ` </    ` 自闭和标签的标志\n3. 利用currentToken变量接受解析结果\n   1. `text`文本类型\n   1. `statTag`开始标签类型\n   1. `endTag`结束标签类型\n   1. `isSelfCloseTag`自闭和标签标志\n> 每次当前标签结束时需要`emit(currentToken)`来触发当前标签结束的事件\n\n4. 解析标签属性\n   1. 氛围attributeName和value两部分进行解析\n   1. 解析完成之后emit对应数据\n5. 构建DOM树\n   1. 使用栈进行构造\n   1. 遇到开始标签就处理好相关属性和元素名入栈\n   1. 遇到自闭和标签就相当入栈后立即出栈\n   1. 遇到闭合标签就找到对应标签出栈\n<a name=\"QCAHm\"></a>\n### CSS 计算\n\n1. 遇到style标签时，将css规则保存起来，使用css parser解析规则\n1. 当创建一个元素后应立即计算css\n   1. 理论上当我们分析一个元素时，是假设这个元素的css规则已经全部收集完毕的\n3. 在computedCss函数中，我们需要知道所有元素的父元素才可以去判断元素是否与规则匹配\n   1. 由于我们首先获取的是当前元素，所以我们获得和计算父元素匹配的顺序是由内到外的\n4. 选择器也是由内向外匹配排列的\n4. 根据选择器的类型和元素属性，计算是否当前的元素匹配\n4. 元素匹配完成就应用选择器到元素上，形成computedSty\n4. css规则具有优先级，我们利用specificity特征去进行判断比较\n   1. specificity是一个四元组，越左边权重越重\n      1. [0,0,0,]\n      1. inline、id、class、tag\n   2. css规则的specificity是根据所包含的简单选择器相加形成的\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1607825664969-8a234679-ac32-4c70-a494-6f6a7a466227.jpeg)",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B47%2C1%2C0%2C19%5D%2C%5B47%2C1%2C0%2C19%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。</p><p data-lake-id=\"1f9ee96ae53711afd503a3759b253aa7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"712570cf67e1610c02bc8b20791c46a7\" id=\"wfaHF\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">基本功能描述</h2><p data-lake-id=\"53da884e9da075dde64e80a02fc870da\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f076d6c7b0c2e0dabbabb3ecf2d860e6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png?x-oss-process=image%2Fresize%2Cw_1500\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"178px\" style=\"visibility: visible; width: 1506px;\"></span></p><h2 data-lake-id=\"9eaee806fa82c8c523bd350d92400f31\" id=\"6zg7A\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">功能实现</h2><p data-lake-id=\"b7dd3740e1e13cdabcc09034cba3e54c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"9e80b3baf8c8bd8f44e9d87e18f9f130\" id=\"zwjkI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">HTTP实现</h3><p data-lake-id=\"5d70494a8367b5b52666de11db6345b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"051d7559449d129bba4d7c7edc14c8d1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。</p><ol data-lake-id=\"a412ad52cdbeecf36fe8a07907aa0e48\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"1d60b0f31115fa950e610de8d8df9d19\">构建请求信息（请求方法、请求行、请求头、请求体）</li><li data-lake-id=\"83ca52c1716c070ea087989063d22c12\">建立网络连接（net.createServer()）</li><li data-lake-id=\"f51e417bf33752991bef8dc70591c90f\">接收响应结果</li><li data-lake-id=\"ba05aae53ddf1dfa954287eeebb0789d\">处理响应结果</li></ol><ol data-lake-id=\"cde642e321acf4e3985c8f155705cde9\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"db281362b7682e6737d5618882f6a213\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"1899ebe3589799ad092a785cfd72ce50\">处理响应头</li><li data-lake-id=\"1f7d34058f9bc91a7de35c87354e615c\">处理响应体 - 利用单独的子类进行body text的处理</li></ol></ol><p data-lake-id=\"cf14c4cc4382338d8b50c1cf16494167\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"69a64e41db4291bb60bdda1c84e2f465\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f3d62679bf831953dfa79639ea7166a7\">构造一个发送请求的类 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> Request </code>&nbsp;</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"74fd71f1ef1f89646a1ad7f4d98a1f9b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">思考：这个类都需要什么东西？</p><ul data-lake-id=\"fdb5a20b0667ed8ef39d89cdbeb591f7\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e075e5ed5fac7e3d442a8b4fa667ff72\">首先需要一些发送请求时需要配置的基本配置项（options）</li></ul><ul data-lake-id=\"ec82fae611e16a4677fff90ee2d0046d\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"2224c394fa71dd6d3d8192e1353bb2d1\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"9d655b6c1ea193092028451a652ea13b\">url&nbsp; &nbsp;请求路径</li><li data-lake-id=\"e1bcf301bc33c361ca42b940e915002c\">port&nbsp; &nbsp;&nbsp;请求端口</li><li data-lake-id=\"f35a739c54fc6e3565338559712b3ba9\">method&nbsp; &nbsp;&nbsp;请求方法</li><li data-lake-id=\"df47d948fb96f7b30181b9d90db32de5\">headers&nbsp; &nbsp;&nbsp;请求头</li><li data-lake-id=\"a6bcfecd4e7eebcb3509f15061a19670\">body&nbsp; &nbsp;&nbsp;请求体</li></ul></ul><ul data-lake-id=\"035a60b66b581755effe96edcd7bab4b\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"de3c8062e86706d5f4a0e30fe50b1501\">其次需要一个发送该请求的方法（send）</li></ul><ul data-lake-id=\"866a6f183addfbef8b7dff9a94ef3fe7\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"04819d02078b6dbd170aa5c05e33a338\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"997334191a0ed9fbbdbc1de5d711e9bd\">该方法返回一个promise对象，该对象是请求回来的结果</li><li data-lake-id=\"f802499212c7baa36bc631ed13642062\">该方法的功能：</li></ul></ul><ul data-lake-id=\"5145d21de96123bd24f1c3df47601d16\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"e8a50bd23e3b966432cd8a958c5fc435\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ul data-lake-id=\"c9a9073d6c86b2eff82cdd1923d1a5a5\" lake-indent=\"0\" style=\"list-style-type: square; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"fddcae00cd1d8a5a651468e56fef8b02\">构造请求并发送，发送前需要拼接上<span>请求行、请求头、换行、请求体等信息。</span></li><li data-lake-id=\"36763a320323bbf620c2c9b85ec6e165\">接受请求结果</li></ul></ul></ul></blockquote><p data-lake-id=\"d5e281a7fb1aa4797b40ea68a4ca5154\" style=\"padding-left: 4em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"0cb68ecc076652b6636b5ecb65103251\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"8eccce245d320913c008595f70580314\">构造一个解析响应的类 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> ResponseParse </code>&nbsp;</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><ul data-lake-id=\"19a5278d1d1d51c3eab158c5a7c74f5b\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"6e42458ae8a30d26e4df66ca5302b65c\">response返回的结果需要分段来进行处理，所以我们需要一个ResponseParse来进行装配</li><li data-lake-id=\"3adef06baefd7dab4943fb45f9034796\">ResponseParse来分段处理返回的结果，我们用有限状态机来记录完成这一个过程</li><li data-lake-id=\"54f6090e5526878bbb164d93425acbf7\">针对response body中的内容采用另一个方法进行分段解析</li></ul></blockquote><p data-lake-id=\"4a65b5d6245dc1d7ebb2a7b6758650ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"7fbce56e5b23594bc83d6ea5f0576030\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"2b9bf90d484a1f229a475f82c1672689\">构造一个类 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> TrunkedBodyParser </code>&nbsp;</li></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><ul data-lake-id=\"696ed42c1d83c7fe01cf1347be3fe1e9\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"e151f7cdc2fbb1f03f51f5c4bcc79738\">response body针对不通的Content-type类型会有不同的处理方法</li><li data-lake-id=\"efa70e2d88f547860169a2d967cf6df3\">我们这里针对chunk类型进行解析</li></ul></blockquote><div data-card-type=\"block\" data-lake-card=\"hr\"><hr style=\"background-color: rgb(232, 232, 232); border: 1px solid transparent; margin: 18px 0px;\"></div><p data-lake-id=\"47ebbc694500c2be2896c8c410b0527c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"9c82d0bad2f8fc6e176db59c694256e5\" id=\"zwpIT\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">HTML解析的实现</h3><ol data-lake-id=\"ecf1b7d2ee0a3c1de397336a9549fba8\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"eb1df9894547f5866744737ac12200d1\">接收响应体进行解析</li></ol><p data-lake-id=\"ec5d8e68cf3f97b5ff238d5d8bae3ecc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1607643059789-38ccd590-7e2b-42a1-8852-b7b75fa9d219.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"64px\" style=\"visibility: visible; width: 554px;\"></span></p><ol data-lake-id=\"4f88f680e6d6fd7fd5c022a3bbe7328b\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"660f2b2b3ae1ca2345d06b429b09e228\">构造状态机进行标签解析</li></ol><ol data-lake-id=\"d9841c9fcfae73f9f1a50600a84dde09\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"697922cdc86a63cdf226cc30b10d2880\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"39d1d059e8f15ab938fa3d9a8d120485\">开始标签</li></ol></ol><ol data-lake-id=\"ad21d1f9cc499e05fb3c075e75eb9460\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"07fddab1ca59c77b41fa5d7960469eeb\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ol data-lake-id=\"000135a20ddb23ad50aa552a0b716d25\" lake-indent=\"0\" style=\"list-style-type: lower-roman; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"5f740ffac66cc037ab12666da7d226eb\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> &lt; </code>&nbsp;开始标签的标志</li><li data-lake-id=\"d2dbe925f5379ca9ec627e88ed6a0959\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> /n/t  </code>&nbsp;空格标志后面是标签属性</li></ol></ol></ol><ol data-lake-id=\"d6570baad65bf5613b0a23309dbf4e0b\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"2b92922e933960aa8e84a5fcf15d9dc9\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"0bcb3dae6b155d1268e5383b7420b8a8\">结束标签</li></ol></ol><ol data-lake-id=\"7fd0ecbd1260abed1a09a4764f69652a\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"96b2d2c7b3cf2776aca1f55d1b192218\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ol data-lake-id=\"bea0edc58d21aa9b4930c4f0bd2ff13f\" lake-indent=\"0\" style=\"list-style-type: lower-roman; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"f6342259ba69e748a525147295dfaaa9\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> / </code>&nbsp;结束标签的标志</li><li data-lake-id=\"d474a2366540c92bc1bc3dbac94fc4e4\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> &gt; </code>&nbsp;标签解析结束，开始下一个标签解析</li></ol></ol></ol><ol data-lake-id=\"fd38ad4dce3f9c70aae0458e79856fc2\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"132e45e300ebd3c2937edf1aa293e32e\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"ac3431c3337ea4e73ba9bd9869d78f21\">自封闭标签</li></ol></ol><ol data-lake-id=\"13b19eb6efbdd55763dddedbeb40ff62\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"86c0fd23df757680b96d9330e4b66adc\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ol data-lake-id=\"86f2bdf914d448b549c7b018b94ed04f\" lake-indent=\"0\" style=\"list-style-type: lower-roman; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"190f7dc858141b16bdf819ba26bc8445\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"> &lt;/ &nbsp; &nbsp;</code>&nbsp;自闭和标签的标志</li></ol></ol></ol><ol data-lake-id=\"6349acf9da9c926e30e45893099e9bb1\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"ed78d55c3a567c47916d3fd3976d3f1b\">利用currentToken变量接受解析结果</li></ol><ol data-lake-id=\"929dbc24b94602cd604a182e437d207d\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"a5ff34edf7d771c2387e03f6c4325cbd\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"c71b1b2172e78f192db93d0eb4670f7c\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">text</code>文本类型</li><li data-lake-id=\"c04a0926d6c4bbd33e8ff8203203b249\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">statTag</code>开始标签类型</li><li data-lake-id=\"e05c2f17b081f010177b96545e45e561\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">endTag</code>结束标签类型</li><li data-lake-id=\"43db1e8eeb4997d4f16e5e338a69908e\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">isSelfCloseTag</code>自闭和标签标志</li></ol></ol><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"1266ab59a679f98180209fc16990ffbb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">每次当前标签结束时需要<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">emit(currentToken)</code>来触发当前标签结束的事件</p></blockquote><ol data-lake-id=\"8fdef35932a1e3fdedb0bf4fb759e493\" start=\"4\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"a7a44d9d11317eefe7fdb7b017528183\">解析标签属性</li></ol><ol data-lake-id=\"d993cfaa37d8326374ba41dce32a6e42\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"0585484ac5acbe867b773edac730bf35\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"0e7ba9e24313a0af89f8033a0c3472e5\">氛围attributeName和value两部分进行解析</li><li data-lake-id=\"be6068ffaad197bd0d68c2bdd6571222\">解析完成之后emit对应数据</li></ol></ol><ol data-lake-id=\"dd40106f980e43d8b6953dd094941074\" start=\"5\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"f90207926364df8aa5e8c84c71be9fa3\">构建DOM树</li></ol><ol data-lake-id=\"5ad228379b981c2f12d7644b959ad6b8\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"6f2bb0085a3189f8a315da5bc7e91335\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"b4a320a0311b48a71037727cbe36112d\">使用栈进行构造</li><li data-lake-id=\"6bf2e677e8f3e5c57b8e2cac66b8d907\">遇到开始标签就处理好相关属性和元素名入栈</li><li data-lake-id=\"292f4f599703476ca7e91f9c539b148a\">遇到自闭和标签就相当入栈后立即出栈</li><li data-lake-id=\"1f9a87b97ff9f57f358bcb0ec8cf6bf1\">遇到闭合标签就找到对应标签出栈</li></ol></ol><h3 data-lake-id=\"0c088f8c7d6fed91465e8fd77e6bd117\" id=\"QCAHm\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">CSS 计算</h3><ol data-lake-id=\"a8696f58dbdc95e15d02cf8a059bdf8c\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"cad1f2794e21ca0629866322b20a7ebb\">遇到style标签时，将css规则保存起来，使用css parser解析规则</li><li data-lake-id=\"71349c81b247869efcb633d98ddff1dc\">当创建一个元素后应立即计算css</li></ol><ol data-lake-id=\"216dd785cd145c7ca3e485019d504037\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"71f8c24217dbca060d1c69a39eb72eca\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"756cd56e99a017cf541ecb4f8964826e\">理论上当我们分析一个元素时，是假设这个元素的css规则已经全部收集完毕的</li></ol></ol><ol data-lake-id=\"e52db4467f9d0a0c1524d44eec98a06f\" start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"bd223fec06c2f9a04c0d2f54ee04afeb\">在computedCss函数中，我们需要知道所有元素的父元素才可以去判断元素是否与规则匹配</li></ol><ol data-lake-id=\"333122211456e8940157f9f7e9deda10\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"77db1613df9e461659312584729e7b06\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"91784098d3ee047cc4c44ea588733e1d\">由于我们首先获取的是当前元素，所以我们获得和计算父元素匹配的顺序是由内到外的</li></ol></ol><ol data-lake-id=\"80a8ed071fb1ad971bedbe52b1da9eaf\" start=\"4\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"68761567a7b967684feb735ea601ded6\">选择器也是由内向外匹配排列的</li><li data-lake-id=\"a825a5943fac2e7a40ad023a0de3f236\">根据选择器的类型和元素属性，计算是否当前的元素匹配</li><li data-lake-id=\"294c370886319d997815a1f217b49a4b\">元素匹配完成就应用选择器到元素上，形成computedSty</li><li data-lake-id=\"2dcbcb86d157337060649252a1cc7810\">css规则具有优先级，我们利用specificity特征去进行判断比较</li></ol><ol data-lake-id=\"703a5500457618a0e87a8a67bf69d267\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"e9977d0c6dff58eb45cb63355b7ed7ab\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"4f1edb0c57f9847fd93e937ca8d66baa\">specificity是一个四元组，越左边权重越重</li></ol></ol><ol data-lake-id=\"5cd9ff0e787dda869834682d07d24034\" lake-indent=\"2\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"c15eccbd32aaddb5abbb24559fe6813b\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px;\"><ol data-lake-id=\"7b07af0adf2b06c3add5322a2bb99e0c\" lake-indent=\"0\" style=\"list-style-type: lower-roman; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"fe16b5e3a931020572018a54e9ba4544\">[0,0,0,]</li><li data-lake-id=\"baedef38edfecea978f8ee418764a7ac\">inline、id、class、tag</li></ol></ol></ol><ol data-lake-id=\"2f1d57f42f5aad5ec334f29e674eca8b\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"b1b421b01fc32a2ef83d9e4df32ade57\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"47ce827ed2882f11e9b7eefc86b7590d\">css规则的specificity是根据所包含的简单选择器相加形成的</li></ol></ol><div data-card-type=\"block\" data-lake-card=\"mindmap\" id=\"w7q2S\" class=\"lake-card-margin\" data-cell_count=\"16\"><img src=\"https://cdn.nlark.com/yuque/0/2020/jpeg/2705850/1607825664969-8a234679-ac32-4c70-a494-6f6a7a466227.jpeg\"></div></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。</p><p data-lake-id=\"1f9ee96ae53711afd503a3759b253aa7\"><br /></p><h2 data-lake-id=\"712570cf67e1610c02bc8b20791c46a7\" id=\"wfaHF\">基本功能描述</h2><p data-lake-id=\"53da884e9da075dde64e80a02fc870da\"><br /></p><p data-lake-id=\"f076d6c7b0c2e0dabbabb3ecf2d860e6\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png%22%2C%22originWidth%22%3A1506%2C%22originHeight%22%3A178%2C%22name%22%3A%22image.png%22%2C%22size%22%3A163962%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1146.3481%2C%22y%22%3A80.18365%2C%22width%22%3A40.25590000000011%2C%22height%22%3A18.992919999999998%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A869.8622%2C%22y%22%3A88.92137%2C%22width%22%3A42.72636%2C%22height%22%3A20.03036%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A594.959%2C%22y%22%3A99.863625%2C%22width%22%3A46.89683000000002%2C%22height%22%3A22.212064999999996%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A975.7393%2C%22y%22%3A100.9829%2C%22width%22%3A64.70140000000015%2C%22height%22%3A22.130430000000004%2C%22text%22%3A%22layout%22%7D%2C%7B%22x%22%3A157.10025%2C%22y%22%3A101.14388%2C%22width%22%3A53.28708%2C%22height%22%3A19.649905000000004%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A319.31232%2C%22y%22%3A102.79266%2C%22width%22%3A46.64245%2C%22height%22%3A18.003929999999997%2C%22text%22%3A%22HTML%22%7D%2C%7B%22x%22%3A1247.7098%2C%22y%22%3A103.59845%2C%22width%22%3A67.13089999999988%2C%22height%22%3A18.863640000000004%2C%22text%22%3A%22render%22%7D%2C%7B%22x%22%3A1413.0874%2C%22y%22%3A104.90297%2C%22width%22%3A57.10080000000016%2C%22height%22%3A15.413825000000003%2C%22text%22%3A%22Bitmap%22%7D%2C%7B%22x%22%3A429.3707%2C%22y%22%3A103.67094%2C%22width%22%3A57.69445999999999%2C%22height%22%3A20.022189999999995%2C%22text%22%3A%22parse%22%7D%2C%7B%22x%22%3A858.0627%2C%22y%22%3A113.3274%2C%22width%22%3A66.08550000000002%2C%22height%22%3A18.509010000000004%2C%22text%22%3A%22wIthCSS%22%7D%2C%7B%22x%22%3A681.46796%2C%22y%22%3A119.31313%2C%22width%22%3A103.49090000000001%2C%22height%22%3A17.891609999999986%2C%22text%22%3A%22computing%22%7D%2C%7B%22x%22%3A1137.7185%2C%22y%22%3A128.97556%2C%22width%22%3A62.91769999999997%2C%22height%22%3A15.838539999999995%2C%22text%22%3A%22posibion%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22DOM%20DOM%20DOM%20layout%20HTTP%20HTML%20render%20Bitmap%20parse%20wIthCSS%20computing%20posibion%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1506%2C%22height%22%3A178%7D\"></card></p><h2 data-lake-id=\"9eaee806fa82c8c523bd350d92400f31\" id=\"6zg7A\">功能实现</h2><p data-lake-id=\"b7dd3740e1e13cdabcc09034cba3e54c\"><br /></p><h3 data-lake-id=\"9e80b3baf8c8bd8f44e9d87e18f9f130\" id=\"zwjkI\">HTTP实现</h3><p data-lake-id=\"5d70494a8367b5b52666de11db6345b0\"><br /></p><p data-lake-id=\"051d7559449d129bba4d7c7edc14c8d1\">为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。</p><ol data-lake-id=\"a412ad52cdbeecf36fe8a07907aa0e48\" start=\"1\"><li data-lake-id=\"1d60b0f31115fa950e610de8d8df9d19\">构建请求信息（请求方法、请求行、请求头、请求体）</li><li data-lake-id=\"83ca52c1716c070ea087989063d22c12\">建立网络连接（net.createServer()）</li><li data-lake-id=\"f51e417bf33752991bef8dc70591c90f\">接收响应结果</li><li data-lake-id=\"ba05aae53ddf1dfa954287eeebb0789d\">处理响应结果</li></ol><ol data-lake-id=\"db281362b7682e6737d5618882f6a213\" data-lake-indent=\"1\"><li data-lake-id=\"1899ebe3589799ad092a785cfd72ce50\">处理响应头</li><li data-lake-id=\"1f7d34058f9bc91a7de35c87354e615c\">处理响应体 - 利用单独的子类进行body text的处理</li></ol><p data-lake-id=\"cf14c4cc4382338d8b50c1cf16494167\"><br /></p><ol data-lake-id=\"69a64e41db4291bb60bdda1c84e2f465\" start=\"1\"><li data-lake-id=\"f3d62679bf831953dfa79639ea7166a7\">构造一个发送请求的类 <code> Request </code> </li></ol><blockquote><p data-lake-id=\"74fd71f1ef1f89646a1ad7f4d98a1f9b\">思考：这个类都需要什么东西？</p><ul data-lake-id=\"fdb5a20b0667ed8ef39d89cdbeb591f7\"><li data-lake-id=\"e075e5ed5fac7e3d442a8b4fa667ff72\">首先需要一些发送请求时需要配置的基本配置项（options）</li></ul><ul data-lake-id=\"2224c394fa71dd6d3d8192e1353bb2d1\" data-lake-indent=\"1\"><li data-lake-id=\"9d655b6c1ea193092028451a652ea13b\">url   请求路径</li><li data-lake-id=\"e1bcf301bc33c361ca42b940e915002c\">port    请求端口</li><li data-lake-id=\"f35a739c54fc6e3565338559712b3ba9\">method    请求方法</li><li data-lake-id=\"df47d948fb96f7b30181b9d90db32de5\">headers    请求头</li><li data-lake-id=\"a6bcfecd4e7eebcb3509f15061a19670\">body    请求体</li></ul><ul data-lake-id=\"035a60b66b581755effe96edcd7bab4b\"><li data-lake-id=\"de3c8062e86706d5f4a0e30fe50b1501\">其次需要一个发送该请求的方法（send）</li></ul><ul data-lake-id=\"04819d02078b6dbd170aa5c05e33a338\" data-lake-indent=\"1\"><li data-lake-id=\"997334191a0ed9fbbdbc1de5d711e9bd\">该方法返回一个promise对象，该对象是请求回来的结果</li><li data-lake-id=\"f802499212c7baa36bc631ed13642062\">该方法的功能：</li></ul><ul data-lake-id=\"c9a9073d6c86b2eff82cdd1923d1a5a5\" data-lake-indent=\"2\"><li data-lake-id=\"fddcae00cd1d8a5a651468e56fef8b02\">构造请求并发送，发送前需要拼接上<span>请求行、请求头、换行、请求体等信息。</span></li><li data-lake-id=\"36763a320323bbf620c2c9b85ec6e165\">接受请求结果</li></ul></blockquote><p data-lake-id=\"d5e281a7fb1aa4797b40ea68a4ca5154\" style=\"padding-left: 4em;\"><br /></p><ol data-lake-id=\"0cb68ecc076652b6636b5ecb65103251\" start=\"2\"><li data-lake-id=\"8eccce245d320913c008595f70580314\">构造一个解析响应的类 <code> ResponseParse </code> </li></ol><blockquote><ul data-lake-id=\"19a5278d1d1d51c3eab158c5a7c74f5b\"><li data-lake-id=\"6e42458ae8a30d26e4df66ca5302b65c\">response返回的结果需要分段来进行处理，所以我们需要一个ResponseParse来进行装配</li><li data-lake-id=\"3adef06baefd7dab4943fb45f9034796\">ResponseParse来分段处理返回的结果，我们用有限状态机来记录完成这一个过程</li><li data-lake-id=\"54f6090e5526878bbb164d93425acbf7\">针对response body中的内容采用另一个方法进行分段解析</li></ul></blockquote><p data-lake-id=\"4a65b5d6245dc1d7ebb2a7b6758650ab\"><br /></p><ol data-lake-id=\"7fbce56e5b23594bc83d6ea5f0576030\" start=\"3\"><li data-lake-id=\"2b9bf90d484a1f229a475f82c1672689\">构造一个类 <code> TrunkedBodyParser </code> </li></ol><blockquote><ul data-lake-id=\"696ed42c1d83c7fe01cf1347be3fe1e9\"><li data-lake-id=\"e151f7cdc2fbb1f03f51f5c4bcc79738\">response body针对不通的Content-type类型会有不同的处理方法</li><li data-lake-id=\"efa70e2d88f547860169a2d967cf6df3\">我们这里针对chunk类型进行解析</li></ul></blockquote><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"47ebbc694500c2be2896c8c410b0527c\"><br /></p><h3 data-lake-id=\"9c82d0bad2f8fc6e176db59c694256e5\" id=\"zwpIT\">HTML解析的实现</h3><ol data-lake-id=\"ecf1b7d2ee0a3c1de397336a9549fba8\" start=\"1\"><li data-lake-id=\"eb1df9894547f5866744737ac12200d1\">接收响应体进行解析</li></ol><p data-lake-id=\"ec5d8e68cf3f97b5ff238d5d8bae3ecc\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607643059789-38ccd590-7e2b-42a1-8852-b7b75fa9d219.png%22%2C%22originWidth%22%3A1108%2C%22originHeight%22%3A128%2C%22name%22%3A%22image.png%22%2C%22size%22%3A79721%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A54.22125%2C%22y%22%3A6.3225784%2C%22width%22%3A774.41075%2C%22height%22%3A32.6973836%2C%22text%22%3A%22%E8%BF%99%E9%87%8C%E6%98%AF%E5%B0%86response%E5%A4%84%E7%90%86%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E6%95%B0%E6%8D%AE%E4%BA%A4%E7%BB%99parseHtml%E5%8E%BB%E5%A4%84%E7%90%86%E7%9A%84%22%7D%2C%7B%22x%22%3A57.173096%2C%22y%22%3A42.688457%2C%22width%22%3A1003.3319040000001%2C%22height%22%3A38.741232999999994%2C%22text%22%3A%22%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%AD%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E9%80%9A%E8%BF%87%E5%88%86%E6%AE%B5%E6%9D%A5%E5%A4%84%E7%90%86%E7%9A%84%2C%E5%B0%B1%E6%98%AF%E8%A7%A3%E6%9E%90%E4%B8%80%E6%AE%B5%E5%A4%84%E7%90%86%E4%B8%80%E6%AE%B5%E7%9A%84%E5%BD%A2%E5%BC%8F%2C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%22%7D%2C%7B%22x%22%3A13.238206%2C%22y%22%3A90.45745%2C%22width%22%3A408.118364%2C%22height%22%3A29.539100000000005%2C%22text%22%3A%22parse.parseHTML(res.body)%3B%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E8%BF%99%E9%87%8C%E6%98%AF%E5%B0%86response%E5%A4%84%E7%90%86%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E6%95%B0%E6%8D%AE%E4%BA%A4%E7%BB%99parseHtml%E5%8E%BB%E5%A4%84%E7%90%86%E7%9A%84%20%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%AD%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E9%80%9A%E8%BF%87%E5%88%86%E6%AE%B5%E6%9D%A5%E5%A4%84%E7%90%86%E7%9A%84%2C%E5%B0%B1%E6%98%AF%E8%A7%A3%E6%9E%90%E4%B8%80%E6%AE%B5%E5%A4%84%E7%90%86%E4%B8%80%E6%AE%B5%E7%9A%84%E5%BD%A2%E5%BC%8F%2C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%20parse.parseHTML(res.body)%3B%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A554%2C%22height%22%3A64%7D\"></card></p><ol data-lake-id=\"4f88f680e6d6fd7fd5c022a3bbe7328b\" start=\"2\"><li data-lake-id=\"660f2b2b3ae1ca2345d06b429b09e228\">构造状态机进行标签解析</li></ol><ol data-lake-id=\"697922cdc86a63cdf226cc30b10d2880\" data-lake-indent=\"1\"><li data-lake-id=\"39d1d059e8f15ab938fa3d9a8d120485\">开始标签</li></ol><ol data-lake-id=\"000135a20ddb23ad50aa552a0b716d25\" data-lake-indent=\"2\"><li data-lake-id=\"5f740ffac66cc037ab12666da7d226eb\"><code> &lt; </code> 开始标签的标志</li><li data-lake-id=\"d2dbe925f5379ca9ec627e88ed6a0959\"><code> /n/t  </code> 空格标志后面是标签属性</li></ol><ol data-lake-id=\"2b92922e933960aa8e84a5fcf15d9dc9\" data-lake-indent=\"1\" start=\"2\"><li data-lake-id=\"0bcb3dae6b155d1268e5383b7420b8a8\">结束标签</li></ol><ol data-lake-id=\"bea0edc58d21aa9b4930c4f0bd2ff13f\" data-lake-indent=\"2\"><li data-lake-id=\"f6342259ba69e748a525147295dfaaa9\"><code> / </code> 结束标签的标志</li><li data-lake-id=\"d474a2366540c92bc1bc3dbac94fc4e4\"><code> &gt; </code> 标签解析结束，开始下一个标签解析</li></ol><ol data-lake-id=\"132e45e300ebd3c2937edf1aa293e32e\" data-lake-indent=\"1\" start=\"3\"><li data-lake-id=\"ac3431c3337ea4e73ba9bd9869d78f21\">自封闭标签</li></ol><ol data-lake-id=\"86f2bdf914d448b549c7b018b94ed04f\" data-lake-indent=\"2\"><li data-lake-id=\"190f7dc858141b16bdf819ba26bc8445\"><code> &lt;/    </code> 自闭和标签的标志</li></ol><ol data-lake-id=\"6349acf9da9c926e30e45893099e9bb1\" start=\"3\"><li data-lake-id=\"ed78d55c3a567c47916d3fd3976d3f1b\">利用currentToken变量接受解析结果</li></ol><ol data-lake-id=\"a5ff34edf7d771c2387e03f6c4325cbd\" data-lake-indent=\"1\"><li data-lake-id=\"c71b1b2172e78f192db93d0eb4670f7c\"><code>text</code>文本类型</li><li data-lake-id=\"c04a0926d6c4bbd33e8ff8203203b249\"><code>statTag</code>开始标签类型</li><li data-lake-id=\"e05c2f17b081f010177b96545e45e561\"><code>endTag</code>结束标签类型</li><li data-lake-id=\"43db1e8eeb4997d4f16e5e338a69908e\"><code>isSelfCloseTag</code>自闭和标签标志</li></ol><blockquote><p data-lake-id=\"1266ab59a679f98180209fc16990ffbb\">每次当前标签结束时需要<code>emit(currentToken)</code>来触发当前标签结束的事件</p></blockquote><ol data-lake-id=\"8fdef35932a1e3fdedb0bf4fb759e493\" start=\"4\"><li data-lake-id=\"a7a44d9d11317eefe7fdb7b017528183\">解析标签属性</li></ol><ol data-lake-id=\"0585484ac5acbe867b773edac730bf35\" data-lake-indent=\"1\"><li data-lake-id=\"0e7ba9e24313a0af89f8033a0c3472e5\">氛围attributeName和value两部分进行解析</li><li data-lake-id=\"be6068ffaad197bd0d68c2bdd6571222\">解析完成之后emit对应数据</li></ol><ol data-lake-id=\"dd40106f980e43d8b6953dd094941074\" start=\"5\"><li data-lake-id=\"f90207926364df8aa5e8c84c71be9fa3\">构建DOM树</li></ol><ol data-lake-id=\"6f2bb0085a3189f8a315da5bc7e91335\" data-lake-indent=\"1\"><li data-lake-id=\"b4a320a0311b48a71037727cbe36112d\">使用栈进行构造</li><li data-lake-id=\"6bf2e677e8f3e5c57b8e2cac66b8d907\">遇到开始标签就处理好相关属性和元素名入栈</li><li data-lake-id=\"292f4f599703476ca7e91f9c539b148a\">遇到自闭和标签就相当入栈后立即出栈</li><li data-lake-id=\"1f9a87b97ff9f57f358bcb0ec8cf6bf1\">遇到闭合标签就找到对应标签出栈</li></ol><h3 data-lake-id=\"0c088f8c7d6fed91465e8fd77e6bd117\" id=\"QCAHm\">CSS 计算</h3><ol data-lake-id=\"a8696f58dbdc95e15d02cf8a059bdf8c\" start=\"1\"><li data-lake-id=\"cad1f2794e21ca0629866322b20a7ebb\">遇到style标签时，将css规则保存起来，使用css parser解析规则</li><li data-lake-id=\"71349c81b247869efcb633d98ddff1dc\">当创建一个元素后应立即计算css</li></ol><ol data-lake-id=\"71f8c24217dbca060d1c69a39eb72eca\" data-lake-indent=\"1\"><li data-lake-id=\"756cd56e99a017cf541ecb4f8964826e\">理论上当我们分析一个元素时，是假设这个元素的css规则已经全部收集完毕的</li></ol><ol data-lake-id=\"e52db4467f9d0a0c1524d44eec98a06f\" start=\"3\"><li data-lake-id=\"bd223fec06c2f9a04c0d2f54ee04afeb\">在computedCss函数中，我们需要知道所有元素的父元素才可以去判断元素是否与规则匹配</li></ol><ol data-lake-id=\"77db1613df9e461659312584729e7b06\" data-lake-indent=\"1\"><li data-lake-id=\"91784098d3ee047cc4c44ea588733e1d\">由于我们首先获取的是当前元素，所以我们获得和计算父元素匹配的顺序是由内到外的</li></ol><ol data-lake-id=\"80a8ed071fb1ad971bedbe52b1da9eaf\" start=\"4\"><li data-lake-id=\"68761567a7b967684feb735ea601ded6\">选择器也是由内向外匹配排列的</li><li data-lake-id=\"a825a5943fac2e7a40ad023a0de3f236\">根据选择器的类型和元素属性，计算是否当前的元素匹配</li><li data-lake-id=\"294c370886319d997815a1f217b49a4b\">元素匹配完成就应用选择器到元素上，形成computedSty</li><li data-lake-id=\"2dcbcb86d157337060649252a1cc7810\">css规则具有优先级，我们利用specificity特征去进行判断比较</li></ol><ol data-lake-id=\"e9977d0c6dff58eb45cb63355b7ed7ab\" data-lake-indent=\"1\"><li data-lake-id=\"4f1edb0c57f9847fd93e937ca8d66baa\">specificity是一个四元组，越左边权重越重</li></ol><ol data-lake-id=\"7b07af0adf2b06c3add5322a2bb99e0c\" data-lake-indent=\"2\"><li data-lake-id=\"fe16b5e3a931020572018a54e9ba4544\">[0,0,0,]</li><li data-lake-id=\"baedef38edfecea978f8ee418764a7ac\">inline、id、class、tag</li></ol><ol data-lake-id=\"b1b421b01fc32a2ef83d9e4df32ade57\" data-lake-indent=\"1\" start=\"2\"><li data-lake-id=\"47ce827ed2882f11e9b7eefc86b7590d\">css规则的specificity是根据所包含的简单选择器相加形成的</li></ol><card type=\"block\" name=\"mindmap\" value=\"data:%7B%22diagramData%22%3A%22x%C2%9C%C2%85%C2%95%C3%9B%C2%8A%5Cu001cU%5Cu0014%C2%86_e(A%5Cu0014z%C2%85%7D%3E%C2%8CWfl%C2%89%5Cu0010!%C2%98%C2%B9%5Cu000b%C2%B9%C3%98%C2%87%C2%B5%C2%A7%C2%9B%C3%B4tw%C2%AA%C2%AA%C2%A3%C3%A3%C3%90%C2%90%C2%84A%C2%A27%C2%89%C2%8A%5Cn%5Cu0012%5Cu0006D%C3%81%C2%BB%5Cu0004%5Cu0011%C2%94%5Cu001c%5Egz%26Wy%5Cu0005wuOwj%5C%22%C2%A5w%C2%B5%C3%AB%C3%B0%C3%BDk%C3%BD%C3%BFb%C3%95a1%40%5Cu0017%C2%8B%C3%AD%C3%83%C3%A2%5Cu000e%C2%96%C3%95p2.%C2%B6%5Cu000bv%C2%89%5C%5C%5C%22E%C2%AF%C2%A8%5Cu000f%C2%A6%C2%98%C2%8F%C3%BB%C3%83q%C3%9Cw%C3%93b%C3%9E%2B%C3%BC%24%5Cu001e%5Cu0014%C3%9B7%5Cu000e%C2%8Ba%C3%BE%C2%A4%5Cu0010N%5Cu000b%5Cu001b%C2%94%C3%8F%C2%AF%5Cu000e%C3%AA%C3%BDQ%C2%BESO%5Cu000e%C3%80%C2%97%C2%93%C3%8F%C2%B1%C3%BC%C3%B7%C3%A7%C2%BD%5C%22%5Cf%C2%86%C2%A3X%C3%A2%C3%B8%5Cr%C3%81pb%3C%C3%B5%C3%B6%5Cr%C3%A1%C3%8A%C3%AE%C3%AE%C2%B5%C2%B3%C2%A7%7F%2F%C3%BE%C2%B8%C3%9F%5Cu0010J%C3%84~%C3%9C%C3%83%C2%A6%C2%BC%C2%AA.'%C2%B7%5Cu001a%C3%9E%3B%5Cu001f2%C2%A3%C3%BB%C2%B4)%C3%A7%5Cu0002%C3%B0%5Cu001c%C2%B08%3E%3Ay%C3%B1%C3%BC%C3%A4%C3%A1%C2%B7%C2%AF%C3%AE%C3%9E%5B%C2%81N%7F%3EZ%C3%BC%C3%B8l%C3%B1%C3%A7%5Cu000f%C3%AF%7D%C2%86%C2%B7gX%C3%95%C3%AFg%C3%B4R%C2%9E%24G%5CfA%5Cr%C3%943%5Cu0006%5C%22%60%5Cu0002%C2%9F%5Cu0014%5Cu0007FB%C2%A2%C3%84%C3%98db%7C%C2%BB%C3%AEs%C2%99%C3%89%C2%B4%C3%8EfUk%5Cu0012%C3%A3%C2%94J%C2%82%5Cb%C3%81%C2%92LJ%C3%89%C2%81%5Cr%C2%9C%5Cu00002T!%5Cu0019at%5Cu0010%5Cu0017I7%7B%C3%85%C2%97%C2%9F%C2%8C%23~Ql%C3%8Byo%C3%83%C2%ADp%5Cu001c%C3%97P%C3%AB%C2%88%C2%92%C3%84%5Cu00130%5C%5C5P%5Cu001d%C3%80%26)%40xn%C2%92M%C3%912c%3B%C2%A1%C2%AA%5Cu0005%5Cr%25%C2%BA%5Cu001a%C2%AF%C3%A4%C2%A0%C2%97%C3%81%C2%AC*%C2%B6%C3%8AJ%C2%A9%5Cu0002D%5Cu0016d%C3%93%C2%BB%5Cu0006%C2%9F%C3%AF%C2%80s%26J%C3%A2%5C%5C%C2%8C%C3%81t%C3%82%C3%B5%C2%BCu%C3%A0-%C2%A5%C2%93%C3%9F%C2%8EN%5Cu001f%7Du%C3%AE%C3%BB%C2%8B%C3%AF%5Cu0017%C3%87%C2%8F%C3%9B%C3%AEO%C2%B3cx%C3%8D%C2%95%5Cu0015n%5C%22%C2%B0%C2%8Ca%5Cu0014!%5Cu001b%2F-%5Cu0007A%5Cr%C2%82I%5Cu000e%C3%81%C3%93D%C2%B5RQ%3B%C2%9F%3A%5C%22(1%C3%A0%C3%B0%5Cu000enH%3C%5Cu0019NQ%5Cu0000%C2%8FF%C2%83%C3%A0%C3%94%C2%80%C2%A5%C2%96%C2%82%C2%88%2C)tVZ%C3%87%3B%5Cu001b2%C2%AD%5Cu001e%C3%8E%C2%B9%C3%8B%3A_%C2%BF%7Cp%C3%BA%C3%8D_%C2%8B%C2%BB%C3%B7%5Cu0016%C2%8F%C2%9F%C2%BF~%C3%B9%C3%B5Z%C2%8B%7B%5Cu0019%7D%5Cn%5Cu0001%C2%BC%5Cu0013%5Cu0006%5Cu0004j%5Cu0007%5E%7B%5Cr%C2%8C%5Cn%C3%A7%7Dr%C2%8E%C2%88n-%C3%9B%C3%92%C3%9A%C3%83%C3%BA%C3%9D%C2%B1%C2%AF%C2%A6%5Cu001fl%5Cr%C2%AB%C2%8F%C2%87%C3%A3a5XK%5Cu0004%5Cu001dP9%25%5Cu0000%5Cu0005!%C3%99%5Cu0018Fs4%5Cu0016%C2%81H%5Cu0017%7D%24y%5Cu00108vJPrQc%C2%AB%C3%84ji%C3%BE%C2%86n%5Cu0003EF%5Cu0011%5Cu0018%C3%A31%5B%C3%A4)X%C3%814(%C3%A6%C2%98%20%C2%8A%3A%C2%82%C2%AA%C2%9BN%C3%9B%C3%B1%C2%8B%C2%96%C3%94%C2%AB%C3%AF%5Cu001e%C2%9C%3C%7D%C2%B6%5Cu0016%C3%9Bj%C3%96E%C3%8E%7F5%5Cu0014%C2%AB)%C3%88%C2%86%C3%AE%C2%96%C2%B3%C3%B1-%C2%8C%C2%97%C3%B3%C3%83%C2%A5%C3%87e%C3%8BX%C3%AB%3D%26%C2%A94%C2%90%C3%90%C3%94%25b%5Cu000e%C3%91k%5Ct%C2%91%5Cu0012%C2%A6%C2%B8%5Cf%C3%91%C2%98%C3%BF%5Cu0019%C2%87%C2%9D%C2%81%C3%9B%C3%8C8q%5Cf%C2%99%25%5Cu0011%C2%BC%C2%97y%C3%86SsE%C2%A2%C2%84%C2%90gAz%2BL%5Cu0012%C2%B1%C2%BBK%C3%9E%C3%AE%C2%92%C2%B2%C3%B6%C2%895%3D%C2%AF%24%C2%94%C2%B0%2C%C3%B1%C3%90%C3%9E%60%C2%9F%5E%3D%C3%BB%C3%BD%C3%97%C3%85%C3%B1%C2%A3%C3%8E%5Cr%C3%96%5Cu0017y%23%C2%88%C2%B76X%5Bl%C2%83OA%5Cu0004%C3%89D%5Cu000b%C2%BFs%C3%BD%C3%BA%C3%99%C2%93_N%C2%9F%C3%BC%C3%94IW%C3%B62%C3%AD%C3%BF%5Cu0007%C2%BD%3D%5Cu001bW%C3%9D%C3%81dVg%C3%94hu%C2%91A%C2%B7g.%C2%96n%5C%5C%2F%C3%8B%C3%A8%C2%90%C3%B8%C2%A8o%C3%A8%C2%8Ej%24V%3F%5Cu0002%C2%81%5C%5C%5Cu0005%C2%AB%C2%81%C2%9B%C2%9C%C2%95h%C3%B6%60%C3%BE5ppH%C2%8C%C2%A0%C2%8Ak%5Cu001eu%C2%B7%C3%8F%5C%22%C3%B7%C2%86%C3%83%C2%BDAV%5Cu001c%C3%8FF%C2%A3%5Cu000b%C2%AE%C3%8B%C3%B9%C3%8D%C3%B9%3F%5Ct%2F%2B%C2%88%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22w7q2S%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B-197.20000000000005%2C-214%2C1%5D%2C%22width%22%3A1032.2%2C%22height%22%3A478%7D%2C%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1607825664969-8a234679-ac32-4c70-a494-6f6a7a466227.jpeg%22%2C%22search%22%3A%22toy-brower%20HTTP%E8%AF%B7%E6%B1%82%20%E6%9E%84%E5%BB%BA%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%95(Request)%20options%20send%20createHeader%20%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C%E7%9A%84%E6%96%B9%E6%B3%95(ReponseParse)%20receive%20receiveParse%EF%BC%88%E7%8A%B6%E6%80%81%E6%9C%BA%EF%BC%89%20get%C2%A0%20isFinish%20get%20response%20%E9%92%88%E5%AF%B9response%20body%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%EF%BC%88TrunkedBodyParser%EF%BC%89%20receiveChar%20HTML%E8%A7%A3%E6%9E%90%20CSS%E8%AE%A1%E7%AE%97%20Layout%22%7D\"></card>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。</p><p data-lake-id=\"1f9ee96ae53711afd503a3759b253aa7\"><br /></p><h2 data-lake-id=\"712570cf67e1610c02bc8b20791c46a7\" id=\"wfaHF\">基本功能描述</h2><p data-lake-id=\"53da884e9da075dde64e80a02fc870da\"><br /></p><p data-lake-id=\"f076d6c7b0c2e0dabbabb3ecf2d860e6\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png%22%2C%22originWidth%22%3A1506%2C%22originHeight%22%3A178%2C%22name%22%3A%22image.png%22%2C%22size%22%3A163962%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1146.3481%2C%22y%22%3A80.18365%2C%22width%22%3A40.25590000000011%2C%22height%22%3A18.992919999999998%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A869.8622%2C%22y%22%3A88.92137%2C%22width%22%3A42.72636%2C%22height%22%3A20.03036%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A594.959%2C%22y%22%3A99.863625%2C%22width%22%3A46.89683000000002%2C%22height%22%3A22.212064999999996%2C%22text%22%3A%22DOM%22%7D%2C%7B%22x%22%3A975.7393%2C%22y%22%3A100.9829%2C%22width%22%3A64.70140000000015%2C%22height%22%3A22.130430000000004%2C%22text%22%3A%22layout%22%7D%2C%7B%22x%22%3A157.10025%2C%22y%22%3A101.14388%2C%22width%22%3A53.28708%2C%22height%22%3A19.649905000000004%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A319.31232%2C%22y%22%3A102.79266%2C%22width%22%3A46.64245%2C%22height%22%3A18.003929999999997%2C%22text%22%3A%22HTML%22%7D%2C%7B%22x%22%3A1247.7098%2C%22y%22%3A103.59845%2C%22width%22%3A67.13089999999988%2C%22height%22%3A18.863640000000004%2C%22text%22%3A%22render%22%7D%2C%7B%22x%22%3A1413.0874%2C%22y%22%3A104.90297%2C%22width%22%3A57.10080000000016%2C%22height%22%3A15.413825000000003%2C%22text%22%3A%22Bitmap%22%7D%2C%7B%22x%22%3A429.3707%2C%22y%22%3A103.67094%2C%22width%22%3A57.69445999999999%2C%22height%22%3A20.022189999999995%2C%22text%22%3A%22parse%22%7D%2C%7B%22x%22%3A858.0627%2C%22y%22%3A113.3274%2C%22width%22%3A66.08550000000002%2C%22height%22%3A18.509010000000004%2C%22text%22%3A%22wIthCSS%22%7D%2C%7B%22x%22%3A681.46796%2C%22y%22%3A119.31313%2C%22width%22%3A103.49090000000001%2C%22height%22%3A17.891609999999986%2C%22text%22%3A%22computing%22%7D%2C%7B%22x%22%3A1137.7185%2C%22y%22%3A128.97556%2C%22width%22%3A62.91769999999997%2C%22height%22%3A15.838539999999995%2C%22text%22%3A%22posibion%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22DOM%20DOM%20DOM%20layout%20HTTP%20HTML%20render%20Bitmap%20parse%20wIthCSS%20computing%20posibion%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1506%2C%22height%22%3A178%7D\"></card></p><h2 data-lake-id=\"9eaee806fa82c8c523bd350d92400f31\" id=\"6zg7A\">功能实现</h2><p data-lake-id=\"b7dd3740e1e13cdabcc09034cba3e54c\"><br /></p><h3 data-lake-id=\"9e80b3baf8c8bd8f44e9d87e18f9f130\" id=\"zwjkI\">HTTP实现</h3><p data-lake-id=\"5d70494a8367b5b52666de11db6345b0\"><br /></p><p data-lake-id=\"051d7559449d129bba4d7c7edc14c8d1\">为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。</p><ol data-lake-id=\"a412ad52cdbeecf36fe8a07907aa0e48\" start=\"1\"><li data-lake-id=\"1d60b0f31115fa950e610de8d8df9d19\">构建请求信息（请求方法、请求行、请求头、请求体）</li><li data-lake-id=\"83ca52c1716c070ea087989063d22c12\">建立网络连接（net.createServer()）</li><li data-lake-id=\"f51e417bf33752991bef8dc70591c90f\">接收响应结果</li><li data-lake-id=\"ba05aae53ddf1dfa954287eeebb0789d\">处理响应结果</li></ol><ol data-lake-id=\"db281362b7682e6737d5618882f6a213\" data-lake-indent=\"1\"><li data-lake-id=\"1899ebe3589799ad092a785cfd72ce50\">处理响应头</li><li data-lake-id=\"1f7d34058f9bc91a7de35c87354e615c\">处理响应体 - 利用单独的子类进行body text的处理</li></ol><p data-lake-id=\"cf14c4cc4382338d8b50c1cf16494167\"><br /></p><ol data-lake-id=\"69a64e41db4291bb60bdda1c84e2f465\" start=\"1\"><li data-lake-id=\"f3d62679bf831953dfa79639ea7166a7\">构造一个发送请求的类 <code> Request </code> </li></ol><blockquote><p data-lake-id=\"74fd71f1ef1f89646a1ad7f4d98a1f9b\">思考：这个类都需要什么东西？</p><ul data-lake-id=\"fdb5a20b0667ed8ef39d89cdbeb591f7\"><li data-lake-id=\"e075e5ed5fac7e3d442a8b4fa667ff72\">首先需要一些发送请求时需要配置的基本配置项（options）</li></ul><ul data-lake-id=\"2224c394fa71dd6d3d8192e1353bb2d1\" data-lake-indent=\"1\"><li data-lake-id=\"9d655b6c1ea193092028451a652ea13b\">url   请求路径</li><li data-lake-id=\"e1bcf301bc33c361ca42b940e915002c\">port    请求端口</li><li data-lake-id=\"f35a739c54fc6e3565338559712b3ba9\">method    请求方法</li><li data-lake-id=\"df47d948fb96f7b30181b9d90db32de5\">headers    请求头</li><li data-lake-id=\"a6bcfecd4e7eebcb3509f15061a19670\">body    请求体</li></ul><ul data-lake-id=\"035a60b66b581755effe96edcd7bab4b\"><li data-lake-id=\"de3c8062e86706d5f4a0e30fe50b1501\">其次需要一个发送该请求的方法（send）</li></ul><ul data-lake-id=\"04819d02078b6dbd170aa5c05e33a338\" data-lake-indent=\"1\"><li data-lake-id=\"997334191a0ed9fbbdbc1de5d711e9bd\">该方法返回一个promise对象，该对象是请求回来的结果</li><li data-lake-id=\"f802499212c7baa36bc631ed13642062\">该方法的功能：</li></ul><ul data-lake-id=\"c9a9073d6c86b2eff82cdd1923d1a5a5\" data-lake-indent=\"2\"><li data-lake-id=\"fddcae00cd1d8a5a651468e56fef8b02\">构造请求并发送，发送前需要拼接上<span>请求行、请求头、换行、请求体等信息。</span></li><li data-lake-id=\"36763a320323bbf620c2c9b85ec6e165\">接受请求结果</li></ul></blockquote><p data-lake-id=\"d5e281a7fb1aa4797b40ea68a4ca5154\" style=\"padding-left: 4em;\"><br /></p><ol data-lake-id=\"0cb68ecc076652b6636b5ecb65103251\" start=\"2\"><li data-lake-id=\"8eccce245d320913c008595f70580314\">构造一个解析响应的类 <code> ResponseParse </code> </li></ol><blockquote><ul data-lake-id=\"19a5278d1d1d51c3eab158c5a7c74f5b\"><li data-lake-id=\"6e42458ae8a30d26e4df66ca5302b65c\">response返回的结果需要分段来进行处理，所以我们需要一个ResponseParse来进行装配</li><li data-lake-id=\"3adef06baefd7dab4943fb45f9034796\">ResponseParse来分段处理返回的结果，我们用有限状态机来记录完成这一个过程</li><li data-lake-id=\"54f6090e5526878bbb164d93425acbf7\">针对response body中的内容采用另一个方法进行分段解析</li></ul></blockquote><p data-lake-id=\"4a65b5d6245dc1d7ebb2a7b6758650ab\"><br /></p><ol data-lake-id=\"7fbce56e5b23594bc83d6ea5f0576030\" start=\"3\"><li data-lake-id=\"2b9bf90d484a1f229a475f82c1672689\">构造一个类 <code> TrunkedBodyParser </code> </li></ol><blockquote><ul data-lake-id=\"696ed42c1d83c7fe01cf1347be3fe1e9\"><li data-lake-id=\"e151f7cdc2fbb1f03f51f5c4bcc79738\">response body针对不通的Content-type类型会有不同的处理方法</li><li data-lake-id=\"efa70e2d88f547860169a2d967cf6df3\">我们这里针对chunk类型进行解析</li></ul></blockquote><card type=\"block\" name=\"hr\"></card><p data-lake-id=\"47ebbc694500c2be2896c8c410b0527c\"><br /></p><h3 data-lake-id=\"9c82d0bad2f8fc6e176db59c694256e5\" id=\"zwpIT\">HTML解析的实现</h3><ol data-lake-id=\"ecf1b7d2ee0a3c1de397336a9549fba8\" start=\"1\"><li data-lake-id=\"eb1df9894547f5866744737ac12200d1\">接收响应体进行解析</li></ol><p data-lake-id=\"ec5d8e68cf3f97b5ff238d5d8bae3ecc\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1607643059789-38ccd590-7e2b-42a1-8852-b7b75fa9d219.png%22%2C%22originWidth%22%3A1108%2C%22originHeight%22%3A128%2C%22name%22%3A%22image.png%22%2C%22size%22%3A79721%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A54.22125%2C%22y%22%3A6.3225784%2C%22width%22%3A774.41075%2C%22height%22%3A32.6973836%2C%22text%22%3A%22%E8%BF%99%E9%87%8C%E6%98%AF%E5%B0%86response%E5%A4%84%E7%90%86%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E6%95%B0%E6%8D%AE%E4%BA%A4%E7%BB%99parseHtml%E5%8E%BB%E5%A4%84%E7%90%86%E7%9A%84%22%7D%2C%7B%22x%22%3A57.173096%2C%22y%22%3A42.688457%2C%22width%22%3A1003.3319040000001%2C%22height%22%3A38.741232999999994%2C%22text%22%3A%22%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%AD%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E9%80%9A%E8%BF%87%E5%88%86%E6%AE%B5%E6%9D%A5%E5%A4%84%E7%90%86%E7%9A%84%2C%E5%B0%B1%E6%98%AF%E8%A7%A3%E6%9E%90%E4%B8%80%E6%AE%B5%E5%A4%84%E7%90%86%E4%B8%80%E6%AE%B5%E7%9A%84%E5%BD%A2%E5%BC%8F%2C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%22%7D%2C%7B%22x%22%3A13.238206%2C%22y%22%3A90.45745%2C%22width%22%3A408.118364%2C%22height%22%3A29.539100000000005%2C%22text%22%3A%22parse.parseHTML(res.body)%3B%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E8%BF%99%E9%87%8C%E6%98%AF%E5%B0%86response%E5%A4%84%E7%90%86%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E6%95%B0%E6%8D%AE%E4%BA%A4%E7%BB%99parseHtml%E5%8E%BB%E5%A4%84%E7%90%86%E7%9A%84%20%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%AD%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E9%80%9A%E8%BF%87%E5%88%86%E6%AE%B5%E6%9D%A5%E5%A4%84%E7%90%86%E7%9A%84%2C%E5%B0%B1%E6%98%AF%E8%A7%A3%E6%9E%90%E4%B8%80%E6%AE%B5%E5%A4%84%E7%90%86%E4%B8%80%E6%AE%B5%E7%9A%84%E5%BD%A2%E5%BC%8F%2C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%20parse.parseHTML(res.body)%3B%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A554%2C%22height%22%3A64%7D\"></card></p><ol data-lake-id=\"4f88f680e6d6fd7fd5c022a3bbe7328b\" start=\"2\"><li data-lake-id=\"660f2b2b3ae1ca2345d06b429b09e228\">构造状态机进行标签解析</li></ol><ol data-lake-id=\"697922cdc86a63cdf226cc30b10d2880\" data-lake-indent=\"1\"><li data-lake-id=\"39d1d059e8f15ab938fa3d9a8d120485\">开始标签</li></ol><ol data-lake-id=\"000135a20ddb23ad50aa552a0b716d25\" data-lake-indent=\"2\"><li data-lake-id=\"5f740ffac66cc037ab12666da7d226eb\"><code> &lt; </code> 开始标签的标志</li><li data-lake-id=\"d2dbe925f5379ca9ec627e88ed6a0959\"><code> /n/t  </code> 空格标志后面是标签属性</li></ol><ol data-lake-id=\"2b92922e933960aa8e84a5fcf15d9dc9\" data-lake-indent=\"1\" start=\"2\"><li data-lake-id=\"0bcb3dae6b155d1268e5383b7420b8a8\">结束标签</li></ol><ol data-lake-id=\"bea0edc58d21aa9b4930c4f0bd2ff13f\" data-lake-indent=\"2\"><li data-lake-id=\"f6342259ba69e748a525147295dfaaa9\"><code> / </code> 结束标签的标志</li><li data-lake-id=\"d474a2366540c92bc1bc3dbac94fc4e4\"><code> &gt; </code> 标签解析结束，开始下一个标签解析</li></ol><ol data-lake-id=\"132e45e300ebd3c2937edf1aa293e32e\" data-lake-indent=\"1\" start=\"3\"><li data-lake-id=\"ac3431c3337ea4e73ba9bd9869d78f21\">自封闭标签</li></ol><ol data-lake-id=\"86f2bdf914d448b549c7b018b94ed04f\" data-lake-indent=\"2\"><li data-lake-id=\"190f7dc858141b16bdf819ba26bc8445\"><code> &lt;/    </code> 自闭和标签的标志</li></ol><ol data-lake-id=\"6349acf9da9c926e30e45893099e9bb1\" start=\"3\"><li data-lake-id=\"ed78d55c3a567c47916d3fd3976d3f1b\">利用currentToken变量接受解析结果</li></ol><ol data-lake-id=\"a5ff34edf7d771c2387e03f6c4325cbd\" data-lake-indent=\"1\"><li data-lake-id=\"c71b1b2172e78f192db93d0eb4670f7c\"><code>text</code>文本类型</li><li data-lake-id=\"c04a0926d6c4bbd33e8ff8203203b249\"><code>statTag</code>开始标签类型</li><li data-lake-id=\"e05c2f17b081f010177b96545e45e561\"><code>endTag</code>结束标签类型</li><li data-lake-id=\"43db1e8eeb4997d4f16e5e338a69908e\"><code>isSelfCloseTag</code>自闭和标签标志</li></ol><blockquote><p data-lake-id=\"1266ab59a679f98180209fc16990ffbb\">每次当前标签结束时需要<code>emit(currentToken)</code>来触发当前标签结束的事件</p></blockquote><ol data-lake-id=\"8fdef35932a1e3fdedb0bf4fb759e493\" start=\"4\"><li data-lake-id=\"a7a44d9d11317eefe7fdb7b017528183\">解析标签属性</li></ol><ol data-lake-id=\"0585484ac5acbe867b773edac730bf35\" data-lake-indent=\"1\"><li data-lake-id=\"0e7ba9e24313a0af89f8033a0c3472e5\">氛围attributeName和value两部分进行解析</li><li data-lake-id=\"be6068ffaad197bd0d68c2bdd6571222\">解析完成之后emit对应数据</li></ol><ol data-lake-id=\"dd40106f980e43d8b6953dd094941074\" start=\"5\"><li data-lake-id=\"f90207926364df8aa5e8c84c71be9fa3\">构建DOM树</li></ol><ol data-lake-id=\"6f2bb0085a3189f8a315da5bc7e91335\" data-lake-indent=\"1\"><li data-lake-id=\"b4a320a0311b48a71037727cbe36112d\">使用栈进行构造</li><li data-lake-id=\"6bf2e677e8f3e5c57b8e2cac66b8d907\">遇到开始标签就处理好相关属性和元素名入栈</li><li data-lake-id=\"292f4f599703476ca7e91f9c539b148a\">遇到自闭和标签就相当入栈后立即出栈</li><li data-lake-id=\"1f9a87b97ff9f57f358bcb0ec8cf6bf1\">遇到闭合标签就找到对应标签出栈</li></ol><h3 data-lake-id=\"0c088f8c7d6fed91465e8fd77e6bd117\" id=\"QCAHm\">CSS 计算</h3><ol data-lake-id=\"a8696f58dbdc95e15d02cf8a059bdf8c\" start=\"1\"><li data-lake-id=\"cad1f2794e21ca0629866322b20a7ebb\">遇到style标签时，将css规则保存起来，使用css parser解析规则</li><li data-lake-id=\"71349c81b247869efcb633d98ddff1dc\">当创建一个元素后应立即计算css</li></ol><ol data-lake-id=\"71f8c24217dbca060d1c69a39eb72eca\" data-lake-indent=\"1\"><li data-lake-id=\"756cd56e99a017cf541ecb4f8964826e\">理论上当我们分析一个元素时，是假设这个元素的css规则已经全部收集完毕的</li></ol><ol data-lake-id=\"e52db4467f9d0a0c1524d44eec98a06f\" start=\"3\"><li data-lake-id=\"bd223fec06c2f9a04c0d2f54ee04afeb\">在computedCss函数中，我们需要知道所有元素的父元素才可以去判断元素是否与规则匹配</li></ol><ol data-lake-id=\"77db1613df9e461659312584729e7b06\" data-lake-indent=\"1\"><li data-lake-id=\"91784098d3ee047cc4c44ea588733e1d\">由于我们首先获取的是当前元素，所以我们获得和计算父元素匹配的顺序是由内到外的</li></ol><ol data-lake-id=\"80a8ed071fb1ad971bedbe52b1da9eaf\" start=\"4\"><li data-lake-id=\"68761567a7b967684feb735ea601ded6\">选择器也是由内向外匹配排列的</li><li data-lake-id=\"a825a5943fac2e7a40ad023a0de3f236\">根据选择器的类型和元素属性，计算是否当前的元素匹配</li><li data-lake-id=\"294c370886319d997815a1f217b49a4b\">元素匹配完成就应用选择器到元素上，形成computedSty</li><li data-lake-id=\"2dcbcb86d157337060649252a1cc7810\">css规则具有优先级，我们利用specificity特征去进行判断比较</li></ol><ol data-lake-id=\"e9977d0c6dff58eb45cb63355b7ed7ab\" data-lake-indent=\"1\"><li data-lake-id=\"4f1edb0c57f9847fd93e937ca8d66baa\">specificity是一个四元组，越左边权重越重</li></ol><ol data-lake-id=\"7b07af0adf2b06c3add5322a2bb99e0c\" data-lake-indent=\"2\"><li data-lake-id=\"fe16b5e3a931020572018a54e9ba4544\">[0,0,0,]</li><li data-lake-id=\"baedef38edfecea978f8ee418764a7ac\">inline、id、class、tag</li></ol><ol data-lake-id=\"b1b421b01fc32a2ef83d9e4df32ade57\" data-lake-indent=\"1\" start=\"2\"><li data-lake-id=\"47ce827ed2882f11e9b7eefc86b7590d\">css规则的specificity是根据所包含的简单选择器相加形成的</li></ol><card type=\"block\" name=\"mindmap\" value=\"data:%7B%22diagramData%22%3A%22x%C2%9C%C2%85%C2%95%C3%9B%C2%8A%5Cu001cU%5Cu0014%C2%86_e(A%5Cu0014z%C2%85%7D%3E%C2%8CWfl%C2%89%5Cu0010!%C2%98%C2%B9%5Cu000b%C2%B9%C3%98%C2%87%C2%B5%C2%A7%C2%9B%C3%B4tw%C2%AA%C2%AA%C2%A3%C3%A3%C3%90%C2%90%C2%84A%C2%A27%C2%89%C2%8A%5Cn%5Cu0012%5Cu0006D%C3%81%C2%BB%5Cu0004%5Cu0011%C2%94%5Cu001c%5Egz%26Wy%5Cu0005wuOwj%5C%22%C2%A5w%C2%B5%C3%AB%C3%B0%C3%BDk%C3%BD%C3%BFb%C3%95a1%40%5Cu0017%C2%8B%C3%AD%C3%83%C3%A2%5Cu000e%C2%96%C3%95p2.%C2%B6%5Cu000bv%C2%89%5C%5C%5C%22E%C2%AF%C2%A8%5Cu000f%C2%A6%C2%98%C2%8F%C3%BB%C3%83q%C3%9Cw%C3%93b%C3%9E%2B%C3%BC%24%5Cu001e%5Cu0014%C3%9B7%5Cu000e%C2%8Ba%C3%BE%C2%A4%5Cu0010N%5Cu000b%5Cu001b%C2%94%C3%8F%C2%AF%5Cu000e%C3%AA%C3%BDQ%C2%BESO%5Cu000e%C3%80%C2%97%C2%93%C3%8F%C2%B1%C3%BC%C3%B7%C3%A7%C2%BD%5C%22%5Cf%C2%86%C2%A3X%C3%A2%C3%B8%5Cr%C3%81pb%3C%C3%B5%C3%B6%5Cr%C3%A1%C3%8A%C3%AE%C3%AE%C2%B5%C2%B3%C2%A7%7F%2F%C3%BE%C2%B8%C3%9F%5Cu0010J%C3%84~%C3%9C%C3%83%C2%A6%C2%BC%C2%AA.'%C2%B7%5Cu001a%C3%9E%3B%5Cu001f2%C2%A3%C3%BB%C2%B4)%C3%A7%5Cu0002%C3%B0%5Cu001c%C2%B08%3E%3Ay%C3%B1%C3%BC%C3%A4%C3%A1%C2%B7%C2%AF%C3%AE%C3%9E%5B%C2%81N%7F%3EZ%C3%BC%C3%B8l%C3%B1%C3%A7%5Cu000f%C3%AF%7D%C2%86%C2%B7gX%C3%95%C3%AFg%C3%B4R%C2%9E%24G%5CfA%5Cr%C3%943%5Cu0006%5C%22%60%5Cu0002%C2%9F%5Cu0014%5Cu0007FB%C2%A2%C3%84%C3%98db%7C%C2%BB%C3%AEs%C2%99%C3%89%C2%B4%C3%8EfUk%5Cu0012%C3%A3%C2%94J%C2%82%5Cb%C3%81%C2%92LJ%C3%89%C2%81%5Cr%C2%9C%5Cu00002T!%5Cu0019at%5Cu0010%5Cu0017I7%7B%C3%85%C2%97%C2%9F%C2%8C%23~Ql%C3%8Byo%C3%83%C2%ADp%5Cu001c%C3%97P%C3%AB%C2%88%C2%92%C3%84%5Cu00130%5C%5C5P%5Cu001d%C3%80%26)%40xn%C2%92M%C3%912c%3B%C2%A1%C2%AA%5Cu0005%5Cr%25%C2%BA%5Cu001a%C2%AF%C3%A4%C2%A0%C2%97%C3%81%C2%AC*%C2%B6%C3%8AJ%C2%A9%5Cu0002D%5Cu0016d%C3%93%C2%BB%5Cu0006%C2%9F%C3%AF%C2%80s%26J%C3%A2%5C%5C%C2%8C%C3%81t%C3%82%C3%B5%C2%BCu%C3%A0-%C2%A5%C2%93%C3%9F%C2%8EN%5Cu001f%7Du%C3%AE%C3%BB%C2%8B%C3%AF%5Cu0017%C3%87%C2%8F%C3%9B%C3%AEO%C2%B3cx%C3%8D%C2%95%5Cu0015n%5C%22%C2%B0%C2%8Ca%5Cu0014!%5Cu001b%2F-%5Cu0007A%5Cr%C2%82I%5Cu000e%C3%81%C3%93D%C2%B5RQ%3B%C2%9F%3A%5C%22(1%C3%A0%C3%B0%5Cu000enH%3C%5Cu0019NQ%5Cu0000%C2%8FF%C2%83%C3%A0%C3%94%C2%80%C2%A5%C2%96%C2%82%C2%88%2C)tVZ%C3%87%3B%5Cu001b2%C2%AD%5Cu001e%C3%8E%C2%B9%C3%8B%3A_%C2%BF%7Cp%C3%BA%C3%8D_%C2%8B%C2%BB%C3%B7%5Cu0016%C2%8F%C2%9F%C2%BF~%C3%B9%C3%B5Z%C2%8B%7B%5Cu0019%7D%5Cn%5Cu0001%C2%BC%5Cu0013%5Cu0006%5Cu0004j%5Cu0007%5E%7B%5Cr%C2%8C%5Cn%C3%A7%7Dr%C2%8E%C2%88n-%C3%9B%C3%92%C3%9A%C3%83%C3%BA%C3%9D%C2%B1%C2%AF%C2%A6%5Cu001fl%5Cr%C2%AB%C2%8F%C2%87%C3%A3a5XK%5Cu0004%5Cu001dP9%25%5Cu0000%5Cu0005!%C3%99%5Cu0018Fs4%5Cu0016%C2%81H%5Cu0017%7D%24y%5Cu00108vJPrQc%C2%AB%C3%84ji%C3%BE%C2%86n%5Cu0003EF%5Cu0011%5Cu0018%C3%A31%5B%C3%A4)X%C3%814(%C3%A6%C2%98%20%C2%8A%3A%C2%82%C2%AA%C2%9BN%C3%9B%C3%B1%C2%8B%C2%96%C3%94%C2%AB%C3%AF%5Cu001e%C2%9C%3C%7D%C2%B6%5Cu0016%C3%9Bj%C3%96E%C3%8E%7F5%5Cu0014%C2%AB)%C3%88%C2%86%C3%AE%C2%96%C2%B3%C3%B1-%C2%8C%C2%97%C3%B3%C3%83%C2%A5%C3%87e%C3%8BX%C3%AB%3D%26%C2%A94%C2%90%C3%90%C3%94%25b%5Cu000e%C3%91k%5Ct%C2%91%5Cu0012%C2%A6%C2%B8%5Cf%C3%91%C2%98%C3%BF%5Cu0019%C2%87%C2%9D%C2%81%C3%9B%C3%8C8q%5Cf%C2%99%25%5Cu0011%C2%BC%C2%97y%C3%86SsE%C2%A2%C2%84%C2%90gAz%2BL%5Cu0012%C2%B1%C2%BBK%C3%9E%C3%AE%C2%92%C2%B2%C3%B6%C2%895%3D%C2%AF%24%C2%94%C2%B0%2C%C3%B1%C3%90%C3%9E%60%C2%9F%5E%3D%C3%BB%C3%BD%C3%97%C3%85%C3%B1%C2%A3%C3%8E%5Cr%C3%96%5Cu0017y%23%C2%88%C2%B76X%5Bl%C2%83OA%5Cu0004%C3%89D%5Cu000b%C2%BFs%C3%BD%C3%BA%C3%99%C2%93_N%C2%9F%C3%BC%C3%94IW%C3%B62%C3%AD%C3%BF%5Cu0007%C2%BD%3D%5Cu001bW%C3%9D%C3%81dVg%C3%94hu%C2%91A%C2%B7g.%C2%96n%5C%5C%2F%C3%8B%C3%A8%C2%90%C3%B8%C2%A8o%C3%A8%C2%8Ej%24V%3F%5Cu0002%C2%81%5C%5C%5Cu0005%C2%AB%C2%81%C2%9B%C2%9C%C2%95h%C3%B6%60%C3%BE5ppH%C2%8C%C2%A0%C2%8Ak%5Cu001eu%C2%B7%C3%8F%5C%22%C3%B7%C2%86%C3%83%C2%BDAV%5Cu001c%C3%8FF%C2%A3%5Cu000b%C2%AE%C3%8B%C3%B9%C3%8D%C3%B9%3F%5Ct%2F%2B%C2%88%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22w7q2S%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B-197.20000000000005%2C-214%2C1%5D%2C%22width%22%3A1032.2%2C%22height%22%3A478%7D%2C%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fjpeg%2F2705850%2F1607825664969-8a234679-ac32-4c70-a494-6f6a7a466227.jpeg%22%2C%22search%22%3A%22toy-brower%20HTTP%E8%AF%B7%E6%B1%82%20%E6%9E%84%E5%BB%BA%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%95(Request)%20options%20send%20createHeader%20%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C%E7%9A%84%E6%96%B9%E6%B3%95(ReponseParse)%20receive%20receiveParse%EF%BC%88%E7%8A%B6%E6%80%81%E6%9C%BA%EF%BC%89%20get%C2%A0%20isFinish%20get%20response%20%E9%92%88%E5%AF%B9response%20body%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%EF%BC%88TrunkedBodyParser%EF%BC%89%20receiveChar%20HTML%E8%A7%A3%E6%9E%90%20CSS%E8%AE%A1%E7%AE%97%20Layout%22%7D\"></card>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 1,
    "comments_count": 0,
    "content_updated_at": "2020-12-13T02:14:26.000Z",
    "deleted_at": null,
    "created_at": "2020-12-02T13:38:57.000Z",
    "updated_at": "2020-12-13T02:14:26.000Z",
    "published_at": "2020-12-13T02:14:26.000Z",
    "first_published_at": "2020-12-02T16:01:12.000Z",
    "word_count": 976,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1607396985290-ee9fbd15-7e2e-4ab0-9f71-7adf34a29f88.png?x-oss-process=image%2Fresize%2Cw_1500",
    "description": "为了更加了解浏览器的工作原理，我们来自己用代码搞一个浏览器玩一下。基本功能描述功能实现HTTP实现为了实现浏览器发送网络请求的这一部分，需要梳理一下这部分所需要的功能。构建请求信息（请求方法、请求行、请求头、请求体）建立网络连接（net.createServer()）接收响应结果处理响应结果处...",
    "custom_description": null,
    "hits": 5,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 16798712,
    "slug": "ygknqe",
    "title": "代码效率优化方法论",
    "book_id": 2081244,
    "book": {
      "id": 2081244,
      "type": "Book",
      "slug": "blog",
      "name": "前端雾界",
      "user_id": 2705850,
      "description": "特别喜欢雨后雾蒙蒙的天，有种莫名的舒适感",
      "creator_id": 2705850,
      "public": 1,
      "items_count": 24,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-04T06:11:32.839Z",
      "updated_at": "2021-02-04T06:11:32.000Z",
      "created_at": "2020-12-02T01:21:13.000Z",
      "namespace": "callmew/blog",
      "user": {
        "id": 2705850,
        "type": "User",
        "login": "callmew",
        "name": "雾",
        "description": "我有猫了叫憨憨(>^ω^<)",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
        "books_count": 4,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 3,
        "created_at": "2020-10-16T00:41:57.000Z",
        "updated_at": "2021-02-02T09:28:38.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 2705850,
    "creator": {
      "id": 2705850,
      "type": "User",
      "login": "callmew",
      "name": "雾",
      "description": "我有猫了叫憨憨(>^ω^<)",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606871621982-avatar/d5c68109-4b0d-4984-933a-e78f8e08f114.png",
      "books_count": 4,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 3,
      "created_at": "2020-10-16T00:41:57.000Z",
      "updated_at": "2021-02-02T09:28:38.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"BjxUI\"></a>\n## 如何衡量一段代码的优劣呢？\n一般我们会从两个维度去考虑一段代码的质量：\n\n1. 时间复杂度\n1. 空间复杂度\n\n顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。<br />那么我们应该怎么取舍这两个标准呢？<br />\n\n<a name=\"Lw6WB\"></a>\n## 提高代码效率的方法\n我们从上面已经知道了衡量代码效率的方法，那么我们应该怎么着手去优化提高我们代码的效率呢？<br />\n<br />总的策略就是降低代码的时间复杂度和空间复杂度。<br />\n<br />但是对于一段代码来说往往时间和空间两个是互斥的，如果我们想要降低时间复杂度，那么无疑就会增加空间复杂度。<br />举一个生活中的🌰，就像我们平时生活中开车过红绿灯，如果只有这一条路（空间）那么我们就只能在这等着红灯，当车越来越多的时候，就会消耗大家很多时间，但是当我们修建了立交桥之后，就会有更多的选择空间，就会大大减少等待红灯的时间。<br />![CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif](https://cdn.nlark.com/yuque/0/2020/gif/2705850/1606953443121-946ba365-7a49-4689-8090-5e820840f5eb.gif#align=left&display=inline&height=720&margin=%5Bobject%20Object%5D&name=CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif&originHeight=720&originWidth=1280&size=9958377&status=done&style=none&width=1280)<br />（图片来自拉钩教育-公瑾老师的重学算法与数据结构一课中）<br />而对我们来说，时间永远都要比空间更加重要，因为时间拿钱买不来，而空间我们起码可以拿钱来进行扩容。<br />**空间是廉价的，时间是昂贵的**<br />**![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953817114-7e1a263e-6acb-4bf2-9110-da34521c23f8.png#align=left&display=inline&height=76&margin=%5Bobject%20Object%5D&name=image.png&originHeight=152&originWidth=142&size=26430&status=done&style=none&width=71)**\n\n1. 暴力解法：在没有任何时间和空间的限制下，将目标达成\n1. 剔除无效操作：将代码中没有必要的计算、无效的存储删除来优化时间和空间复杂度\n1. 时空转换：设计合理的数据结构，将时间向空间转换\n\n\n\n<a name=\"Hn7G9\"></a>\n## 增删查：数据的基本操作\n一般一段算法的实现最常设计的三个操作就是：增、删、查。<br />而我们对一个算法的优化和实现只要围绕这三个为重心去思考展开即可：\n\n1. 分析这段代码对数据进行了那些操作\n1. 这些操作中有哪些操作是最消耗性能的，对时间复杂度的损耗是最高的？\n1. 考虑有哪种数据结构可以帮助提高数据操作的使用效率。\n\n\n<br />以上三点就是构成我们实现代码效率优化的方法论。<br />\n\n<a name=\"BCrdP\"></a>\n### 查\n\n\n1. 按照元素索引查找\n   - 对于数组这些天生拥有索引的数据结构来说十分简单\n   - 对于链表这种，通过指针进行连接的就需要知道前面一个元素\n2. 按照元素特征值查找\n   - 对于字典类型的数据来说，key就相当是特征，value就是值，查找起来非常方便\n   - 对于数组和链表来说就需要循环对比每个元素来进行比较值的特征是否符合\n\n\n\n<a name=\"QPJ01\"></a>\n### 增\n\n\n1. 在复杂数据结构的末尾添加数据\n   - 不会影响数据的原始位置\n2. 在复杂数据结构的中间添加数据\n   - 会影响到数据原始的位置\n\n\n<br />\n\n<a name=\"EI89A\"></a>\n### 删\n\n\n1. 在复杂数据结构的末尾删除\n   - 不会影响到原先数据的位置\n2. 在复杂数据结构的中间位置进行删除\n   - 会影响到之前数据的原始位置\n\n\n\n",
    "body_draft": "<a name=\"BjxUI\"></a>\n## 如何衡量一段代码的优劣呢？\n一般我们会从两个维度去考虑一段代码的质量：\n\n1. 时间复杂度\n1. 空间复杂度\n\n顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。<br />那么我们应该怎么取舍这两个标准呢？<br />\n\n<a name=\"Lw6WB\"></a>\n## 提高代码效率的方法\n我们从上面已经知道了衡量代码效率的方法，那么我们应该怎么着手去优化提高我们代码的效率呢？<br />\n<br />总的策略就是降低代码的时间复杂度和空间复杂度。<br />\n<br />但是对于一段代码来说往往时间和空间两个是互斥的，如果我们想要降低时间复杂度，那么无疑就会增加空间复杂度。<br />举一个生活中的🌰，就像我们平时生活中开车过红绿灯，如果只有这一条路（空间）那么我们就只能在这等着红灯，当车越来越多的时候，就会消耗大家很多时间，但是当我们修建了立交桥之后，就会有更多的选择空间，就会大大减少等待红灯的时间。<br />![CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif](https://cdn.nlark.com/yuque/0/2020/gif/2705850/1606953443121-946ba365-7a49-4689-8090-5e820840f5eb.gif#align=left&display=inline&height=720&margin=%5Bobject%20Object%5D&name=CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif&originHeight=720&originWidth=1280&size=9958377&status=done&style=none&width=1280)<br />（图片来自拉钩教育-公瑾老师的重学算法与数据结构一课中）<br />而对我们来说，时间永远都要比空间更加重要，因为时间拿钱买不来，而空间我们起码可以拿钱来进行扩容。<br />**空间是廉价的，时间是昂贵的**<br />**![image.png](https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953817114-7e1a263e-6acb-4bf2-9110-da34521c23f8.png#align=left&display=inline&height=76&margin=%5Bobject%20Object%5D&name=image.png&originHeight=152&originWidth=142&size=26430&status=done&style=none&width=71)**\n\n1. 暴力解法：在没有任何时间和空间的限制下，将目标达成\n1. 剔除无效操作：将代码中没有必要的计算、无效的存储删除来优化时间和空间复杂度\n1. 时空转换：设计合理的数据结构，将时间向空间转换\n\n\n\n<a name=\"Hn7G9\"></a>\n## 增删查：数据的基本操作\n一般一段算法的实现最常设计的三个操作就是：增、删、查。<br />而我们对一个算法的优化和实现只要围绕这三个为重心去思考展开即可：\n\n1. 分析这段代码对数据进行了那些操作\n1. 这些操作中有哪些操作是最消耗性能的，对时间复杂度的损耗是最高的？\n1. 考虑有哪种数据结构可以帮助提高数据操作的使用效率。\n\n\n<br />以上三点就是构成我们实现代码效率优化的方法论。<br />\n\n<a name=\"BCrdP\"></a>\n### 查\n\n\n1. 按照元素索引查找\n   - 对于数组这些天生拥有索引的数据结构来说十分简单\n   - 对于链表这种，通过指针进行连接的就需要知道前面一个元素\n2. 按照元素特征值查找\n   - 对于字典类型的数据来说，key就相当是特征，value就是值，查找起来非常方便\n   - 对于数组和链表来说就需要循环对比每个元素来进行比较值的特征是否符合\n\n\n\n<a name=\"QPJ01\"></a>\n### 增\n\n\n1. 在复杂数据结构的末尾添加数据\n   - 不会影响数据的原始位置\n2. 在复杂数据结构的中间添加数据\n   - 会影响到数据原始的位置\n\n\n<br />\n\n<a name=\"EI89A\"></a>\n### 删\n\n\n1. 在复杂数据结构的末尾删除\n   - 不会影响到原先数据的位置\n2. 在复杂数据结构的中间位置进行删除\n   - 会影响到之前数据的原始位置\n\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C1%5D%2C%5B0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><h2 data-lake-id=\"195766d0a7b14fd4a4e5f8f880fc70e1\" id=\"BjxUI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">如何衡量一段代码的优劣呢？</h2><p data-lake-id=\"8b01e01e791219a7090652f713adb026\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"072a1b72df3d4d2dcb4420cfb06e1d05\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"2a48bd1a2efbf2da66e2f16941146a30\">时间复杂度</li><li data-lake-id=\"5ee68dd519cb6715c7cdb0f72239b522\">空间复杂度</li></ol><p data-lake-id=\"ab8bed8fd4569ee5950197b9c672855f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"d36762e27bc22fa3ea7a9c2b381ada75\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么我们应该怎么取舍这两个标准呢？</p><p data-lake-id=\"b2b82212e15e6ef0d89790344a80da81\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"636835b84451617e74fdc29439982f26\" id=\"Lw6WB\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">提高代码效率的方法</h2><p data-lake-id=\"b6a7ca4bbfb438aade73e56bdbe1054a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们从上面已经知道了衡量代码效率的方法，那么我们应该怎么着手去优化提高我们代码的效率呢？</p><p data-lake-id=\"3e8f66c5f09a4f3398d3b2674e89884b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6607e036668e925cecb4ce4a2a6e1127\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">总的策略就是<span style=\"color: #FFA39E;\">降低代码的时间复杂度和空间复杂度。</span></p><p data-lake-id=\"78f738a1518db2e24d7f6cfc05134b1a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"53bb539be3bcf7aeae4476d6b9e25382\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">但是对于一段代码来说往往时间和空间两个是互斥的，如果我们想要降低时间复杂度，那么无疑就会增加空间复杂度。</span></span></span></p><p data-lake-id=\"3819d3936d2249b7767a26795d07922c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">举一个生活中的🌰，就像我们平时生活中开车过红绿灯，如果只有这一条路（空间）那么我们就只能在这等着红灯，当车越来越多的时候，就会消耗大家很多时间，但是当我们修建了立交桥之后，就会有更多的选择空间，就会大大减少等待红灯的时间。</span></span></span></p><p data-lake-id=\"4daa50d8581ff53d713a24d16fa5b19e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/gif/2705850/1606953443121-946ba365-7a49-4689-8090-5e820840f5eb.gif\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif\" title=\"CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif\" data-height=\"720px\" style=\"visibility: visible; width: 1280px;\"></span></span></span></span></p><p data-lake-id=\"d8a5060cbaef296a9eb1d27accef7ae3\" style=\"text-align: center; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #8C8C8C;\">（图片来自拉钩教育-公瑾老师的重学算法与数据结构一课中）</span></p><p data-lake-id=\"196333203ee32cf571502130d914d4ac\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而对我们来说，时间永远都要比空间更加重要，因为时间拿钱买不来，而空间我们起码可以拿钱来进行扩容。</p><p data-lake-id=\"643c370b96b835868ba7f9a158b17b11\" style=\"text-align: center; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #FA8C16;\"><strong>空间是廉价的，时间是昂贵的</strong></span></p><p data-lake-id=\"4b82b2c89bb95468a85ce91d5816d785\" style=\"text-align: center; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #FA8C16;\"><strong><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953817114-7e1a263e-6acb-4bf2-9110-da34521c23f8.png\" data-raw-src=\"\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" data-height=\"76px\" style=\"visibility: visible; width: 71px;\"></span></strong></span></p><ol data-lake-id=\"7b386df4e593d0ec36a5ac3853863eaf\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"fbc9cb13accb086daf24bb1e65ca7d1b\">暴力解法：在没有任何时间和空间的限制下，将目标达成</li><li data-lake-id=\"7181f00e2901853c9fa2c660482cd246\">剔除无效操作：将代码中没有必要的计算、无效的存储删除来优化时间和空间复杂度</li><li data-lake-id=\"0a42c42600fe49666e069d327a737435\">时空转换：设计合理的数据结构，将时间向空间转换</li></ol><p data-lake-id=\"284ea75a0d22fc9e771559fae5e6a4f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"68796103d8b85c9bd058ab4def804bce\" id=\"Hn7G9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">增删查：数据的基本操作</h2><p data-lake-id=\"164e720c1de7ca8dd91b43b32eb04e24\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一般一段算法的实现最常设计的三个操作就是：增、删、查。</p><p data-lake-id=\"6a34b466c83d98ae6f7d6b20390b03b3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而我们对一个算法的优化和实现只要围绕这三个为重心去思考展开即可：</p><ol data-lake-id=\"7fe336741e3954b2e6776c4b8342536b\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"dd0534f27c0d7e272835d2bbad743e48\">分析这段代码对数据进行了那些操作</li><li data-lake-id=\"6908c25184ff1c5b6cc433c2487e28fd\">这些操作中有哪些操作是最消耗性能的，对时间复杂度的损耗是最高的？</li><li data-lake-id=\"db807eddb2680aca14ad7b66ae90c9ad\">考虑有哪种数据结构可以帮助提高数据操作的使用效率。</li></ol><p data-lake-id=\"5a6262f8cbc2ecd51d0e7c83795f0047\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0843a0cf31ce7c0a3b104a102e887043\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">以上三点就是构成我们实现代码效率优化的方法论。</p><p data-lake-id=\"b79bcf0da7dc0ca238f9f39226d31422\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"056e420a97c80ffe398a44fc263f3a16\" id=\"BCrdP\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">查</h3><p data-lake-id=\"a8b0dca2b818b44ba3ecc9a713f9c070\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"d5a2113bfe75d903f01695219d49e9b6\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"cde113ca750b0cf5c4a5c893ee6dc8f2\">按照元素索引查找</li></ol><ul data-lake-id=\"79e7a9eb1e27499d8115efccd6e98924\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"dbf554090b4252ff90fd0f7604fb51a7\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"282320924a14dd316e630c491718b622\">对于数组这些天生拥有索引的数据结构来说十分简单</li><li data-lake-id=\"17d8afa2ed502c56ad9093b814272989\">对于链表这种，通过指针进行连接的就需要知道前面一个元素</li></ul></ul><ol data-lake-id=\"fc49a3534e77d13ab06a5fab93e4cdfd\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"2a1c3385e96d1450b6435178c8887c9c\">按照元素特征值查找</li></ol><ul data-lake-id=\"e1820940cb1d9799960b3afcbb3704a0\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"345a9565321f393f399154dbca7d14ed\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"7edf2a64d324379bb3779d818bfe3510\">对于字典类型的数据来说，key就相当是特征，value就是值，查找起来非常方便</li><li data-lake-id=\"e6652bf1a7f1e6fa4feb395f6a0251ed\">对于数组和链表来说就需要循环对比每个元素来进行比较值的特征是否符合</li></ul></ul><p data-lake-id=\"2bd7306c29d8ae644c9332d15a78bbcb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"20357edd76a93e08a4002eaed1de7175\" id=\"QPJ01\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">增</h3><p data-lake-id=\"7f37bf2661ab2d50be898f5e360f572c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"cfe52aa5810781cbb29b95a1ee67f2e9\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"76ed54ad0bb9ed3e45635fd6de029691\">在复杂数据结构的末尾添加数据</li></ol><ul data-lake-id=\"30a48baefc3c677b222d32725e833598\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"3a6025a9ed5f868f81ef42e9543dff27\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"7aec5d4b14fe54967c45f78de505c86e\">不会影响数据的原始位置</li></ul></ul><ol data-lake-id=\"155491e82380d0145f982bd4885531d7\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"890107e6381ea1183ce6ea0a2246dceb\">在复杂数据结构的中间添加数据</li></ol><ul data-lake-id=\"08547af2ea3e885751b51620643480fc\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"3f8dd2b48aa653849b0baabbfcbc3f32\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"31d2a11ae8fc63cd3e41bbe8176fc73a\">会影响到数据原始的位置</li></ul></ul><p data-lake-id=\"203f05e48b83bf01f0b6fd3840544a68\" style=\"padding-left: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"588e561d155c5b64d1bce8a322a88639\" style=\"padding-left: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"b72b046860fd5c4286ef228d4bf882d3\" id=\"EI89A\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">删</h3><p data-lake-id=\"0c887c3d14b697f136863f5f0217a57f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol data-lake-id=\"f9dc858f8c35c87941846c24b1ab5246\" start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"7064170332e8394fcee296fde1ddd4f2\">在复杂数据结构的末尾删除</li></ol><ul data-lake-id=\"212f7d071da6262629260c440faf8c6e\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"e8b292072c8fde3a39a39742f3a5a331\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"964f3b5fdebff54be4d9c6c240c70e40\">不会影响到原先数据的位置</li></ul></ul><ol data-lake-id=\"5cd80cc33fddea056f76d68f4952d92c\" start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"3fed838e9922e7d3382101c8cdc322a0\">在复杂数据结构的中间位置进行删除</li></ol><ul data-lake-id=\"43d37ee5d7e29e95a9bccb364dd59042\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"c7085a42e3783c7d94af55e619dfa045\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\"><li data-lake-id=\"e63e6857d93306aff9aa10bee88f84b7\">会影响到之前数据的原始位置</li></ul></ul><p data-lake-id=\"74646f82c54bc556e4454fa1ed4c8f06\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"195766d0a7b14fd4a4e5f8f880fc70e1\" id=\"BjxUI\"><cursor />如何衡量一段代码的优劣呢？</h2><p data-lake-id=\"8b01e01e791219a7090652f713adb026\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"072a1b72df3d4d2dcb4420cfb06e1d05\" start=\"1\"><li data-lake-id=\"2a48bd1a2efbf2da66e2f16941146a30\">时间复杂度</li><li data-lake-id=\"5ee68dd519cb6715c7cdb0f72239b522\">空间复杂度</li></ol><p data-lake-id=\"ab8bed8fd4569ee5950197b9c672855f\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"d36762e27bc22fa3ea7a9c2b381ada75\">那么我们应该怎么取舍这两个标准呢？</p><p data-lake-id=\"b2b82212e15e6ef0d89790344a80da81\"><br /></p><h2 data-lake-id=\"636835b84451617e74fdc29439982f26\" id=\"Lw6WB\">提高代码效率的方法</h2><p data-lake-id=\"b6a7ca4bbfb438aade73e56bdbe1054a\">我们从上面已经知道了衡量代码效率的方法，那么我们应该怎么着手去优化提高我们代码的效率呢？</p><p data-lake-id=\"3e8f66c5f09a4f3398d3b2674e89884b\"><br /></p><p data-lake-id=\"6607e036668e925cecb4ce4a2a6e1127\">总的策略就是<span style=\"color: #FFA39E;\">降低代码的时间复杂度和空间复杂度。</span></p><p data-lake-id=\"78f738a1518db2e24d7f6cfc05134b1a\"><br /></p><p data-lake-id=\"53bb539be3bcf7aeae4476d6b9e25382\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">但是对于一段代码来说往往时间和空间两个是互斥的，如果我们想要降低时间复杂度，那么无疑就会增加空间复杂度。</span></span></span></p><p data-lake-id=\"3819d3936d2249b7767a26795d07922c\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">举一个生活中的🌰，就像我们平时生活中开车过红绿灯，如果只有这一条路（空间）那么我们就只能在这等着红灯，当车越来越多的时候，就会消耗大家很多时间，但是当我们修建了立交桥之后，就会有更多的选择空间，就会大大减少等待红灯的时间。</span></span></span></p><p data-lake-id=\"4daa50d8581ff53d713a24d16fa5b19e\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fgif%2F2705850%2F1606953443121-946ba365-7a49-4689-8090-5e820840f5eb.gif%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A720%2C%22name%22%3A%22CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif%22%2C%22size%22%3A9958377%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1109.1438%2C%22y%22%3A662.0096%2C%22width%22%3A130.22900000000004%2C%22height%22%3A31.858600000000024%2C%22text%22%3A%22%40%E6%8B%89%E5%8B%BE%E6%95%99%E8%82%B2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%40%E6%8B%89%E5%8B%BE%E6%95%99%E8%82%B2%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1280%2C%22height%22%3A720%7D\"></card></span></span></span></p><p data-lake-id=\"d8a5060cbaef296a9eb1d27accef7ae3\" style=\"text-align: center;\"><span style=\"color: #8C8C8C;\">（图片来自拉钩教育-公瑾老师的重学算法与数据结构一课中）</span></p><p data-lake-id=\"196333203ee32cf571502130d914d4ac\">而对我们来说，时间永远都要比空间更加重要，因为时间拿钱买不来，而空间我们起码可以拿钱来进行扩容。</p><p data-lake-id=\"643c370b96b835868ba7f9a158b17b11\" style=\"text-align: center;\"><span style=\"color: #FA8C16;\"><strong>空间是廉价的，时间是昂贵的</strong></span></p><p data-lake-id=\"4b82b2c89bb95468a85ce91d5816d785\" style=\"text-align: center;\"><span style=\"color: #FA8C16;\"><strong><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1606953817114-7e1a263e-6acb-4bf2-9110-da34521c23f8.png%22%2C%22originWidth%22%3A142%2C%22originHeight%22%3A152%2C%22name%22%3A%22image.png%22%2C%22size%22%3A26430%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A15.257019%2C%22y%22%3A127.29151%2C%22width%22%3A114.75961099999999%2C%22height%22%3A15.253%2C%22text%22%3A%22%E6%97%B6%E9%97%B4%2C%E4%BC%9A%E7%BB%99%E4%BD%A0%E7%AD%94%E6%A1%88%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%97%B6%E9%97%B4%2C%E4%BC%9A%E7%BB%99%E4%BD%A0%E7%AD%94%E6%A1%88%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A71%2C%22height%22%3A76%7D\"></card></strong></span></p><ol data-lake-id=\"7b386df4e593d0ec36a5ac3853863eaf\" start=\"1\"><li data-lake-id=\"fbc9cb13accb086daf24bb1e65ca7d1b\">暴力解法：在没有任何时间和空间的限制下，将目标达成</li><li data-lake-id=\"7181f00e2901853c9fa2c660482cd246\">剔除无效操作：将代码中没有必要的计算、无效的存储删除来优化时间和空间复杂度</li><li data-lake-id=\"0a42c42600fe49666e069d327a737435\">时空转换：设计合理的数据结构，将时间向空间转换</li></ol><p data-lake-id=\"284ea75a0d22fc9e771559fae5e6a4f1\"><br /></p><h2 data-lake-id=\"68796103d8b85c9bd058ab4def804bce\" id=\"Hn7G9\">增删查：数据的基本操作</h2><p data-lake-id=\"164e720c1de7ca8dd91b43b32eb04e24\">一般一段算法的实现最常设计的三个操作就是：增、删、查。</p><p data-lake-id=\"6a34b466c83d98ae6f7d6b20390b03b3\">而我们对一个算法的优化和实现只要围绕这三个为重心去思考展开即可：</p><ol data-lake-id=\"7fe336741e3954b2e6776c4b8342536b\" start=\"1\"><li data-lake-id=\"dd0534f27c0d7e272835d2bbad743e48\">分析这段代码对数据进行了那些操作</li><li data-lake-id=\"6908c25184ff1c5b6cc433c2487e28fd\">这些操作中有哪些操作是最消耗性能的，对时间复杂度的损耗是最高的？</li><li data-lake-id=\"db807eddb2680aca14ad7b66ae90c9ad\">考虑有哪种数据结构可以帮助提高数据操作的使用效率。</li></ol><p data-lake-id=\"5a6262f8cbc2ecd51d0e7c83795f0047\"><br /></p><p data-lake-id=\"0843a0cf31ce7c0a3b104a102e887043\">以上三点就是构成我们实现代码效率优化的方法论。</p><p data-lake-id=\"b79bcf0da7dc0ca238f9f39226d31422\"><br /></p><h3 data-lake-id=\"056e420a97c80ffe398a44fc263f3a16\" id=\"BCrdP\">查</h3><p data-lake-id=\"a8b0dca2b818b44ba3ecc9a713f9c070\"><br /></p><ol data-lake-id=\"d5a2113bfe75d903f01695219d49e9b6\" start=\"1\"><li data-lake-id=\"cde113ca750b0cf5c4a5c893ee6dc8f2\">按照元素索引查找</li></ol><ul data-lake-id=\"dbf554090b4252ff90fd0f7604fb51a7\" data-lake-indent=\"1\"><li data-lake-id=\"282320924a14dd316e630c491718b622\">对于数组这些天生拥有索引的数据结构来说十分简单</li><li data-lake-id=\"17d8afa2ed502c56ad9093b814272989\">对于链表这种，通过指针进行连接的就需要知道前面一个元素</li></ul><ol data-lake-id=\"fc49a3534e77d13ab06a5fab93e4cdfd\" start=\"2\"><li data-lake-id=\"2a1c3385e96d1450b6435178c8887c9c\">按照元素特征值查找</li></ol><ul data-lake-id=\"345a9565321f393f399154dbca7d14ed\" data-lake-indent=\"1\"><li data-lake-id=\"7edf2a64d324379bb3779d818bfe3510\">对于字典类型的数据来说，key就相当是特征，value就是值，查找起来非常方便</li><li data-lake-id=\"e6652bf1a7f1e6fa4feb395f6a0251ed\">对于数组和链表来说就需要循环对比每个元素来进行比较值的特征是否符合</li></ul><p data-lake-id=\"2bd7306c29d8ae644c9332d15a78bbcb\"><br /></p><h3 data-lake-id=\"20357edd76a93e08a4002eaed1de7175\" id=\"QPJ01\">增</h3><p data-lake-id=\"7f37bf2661ab2d50be898f5e360f572c\"><br /></p><ol data-lake-id=\"cfe52aa5810781cbb29b95a1ee67f2e9\" start=\"1\"><li data-lake-id=\"76ed54ad0bb9ed3e45635fd6de029691\">在复杂数据结构的末尾添加数据</li></ol><ul data-lake-id=\"3a6025a9ed5f868f81ef42e9543dff27\" data-lake-indent=\"1\"><li data-lake-id=\"7aec5d4b14fe54967c45f78de505c86e\">不会影响数据的原始位置</li></ul><ol data-lake-id=\"155491e82380d0145f982bd4885531d7\" start=\"2\"><li data-lake-id=\"890107e6381ea1183ce6ea0a2246dceb\">在复杂数据结构的中间添加数据</li></ol><ul data-lake-id=\"3f8dd2b48aa653849b0baabbfcbc3f32\" data-lake-indent=\"1\"><li data-lake-id=\"31d2a11ae8fc63cd3e41bbe8176fc73a\">会影响到数据原始的位置</li></ul><p data-lake-id=\"203f05e48b83bf01f0b6fd3840544a68\" style=\"padding-left: 2em;\"><br /></p><p data-lake-id=\"588e561d155c5b64d1bce8a322a88639\" style=\"padding-left: 2em;\"><br /></p><h3 data-lake-id=\"b72b046860fd5c4286ef228d4bf882d3\" id=\"EI89A\">删</h3><p data-lake-id=\"0c887c3d14b697f136863f5f0217a57f\"><br /></p><ol data-lake-id=\"f9dc858f8c35c87941846c24b1ab5246\" start=\"1\"><li data-lake-id=\"7064170332e8394fcee296fde1ddd4f2\">在复杂数据结构的末尾删除</li></ol><ul data-lake-id=\"e8b292072c8fde3a39a39742f3a5a331\" data-lake-indent=\"1\"><li data-lake-id=\"964f3b5fdebff54be4d9c6c240c70e40\">不会影响到原先数据的位置</li></ul><ol data-lake-id=\"5cd80cc33fddea056f76d68f4952d92c\" start=\"2\"><li data-lake-id=\"3fed838e9922e7d3382101c8cdc322a0\">在复杂数据结构的中间位置进行删除</li></ol><ul data-lake-id=\"c7085a42e3783c7d94af55e619dfa045\" data-lake-indent=\"1\"><li data-lake-id=\"e63e6857d93306aff9aa10bee88f84b7\">会影响到之前数据的原始位置</li></ul><p data-lake-id=\"74646f82c54bc556e4454fa1ed4c8f06\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"195766d0a7b14fd4a4e5f8f880fc70e1\" id=\"BjxUI\"><cursor />如何衡量一段代码的优劣呢？</h2><p data-lake-id=\"8b01e01e791219a7090652f713adb026\">一般我们会从两个维度去考虑一段代码的质量：</p><ol data-lake-id=\"072a1b72df3d4d2dcb4420cfb06e1d05\" start=\"1\"><li data-lake-id=\"2a48bd1a2efbf2da66e2f16941146a30\">时间复杂度</li><li data-lake-id=\"5ee68dd519cb6715c7cdb0f72239b522\">空间复杂度</li></ol><p data-lake-id=\"ab8bed8fd4569ee5950197b9c672855f\">顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。</p><p data-lake-id=\"d36762e27bc22fa3ea7a9c2b381ada75\">那么我们应该怎么取舍这两个标准呢？</p><p data-lake-id=\"b2b82212e15e6ef0d89790344a80da81\"><br /></p><h2 data-lake-id=\"636835b84451617e74fdc29439982f26\" id=\"Lw6WB\">提高代码效率的方法</h2><p data-lake-id=\"b6a7ca4bbfb438aade73e56bdbe1054a\">我们从上面已经知道了衡量代码效率的方法，那么我们应该怎么着手去优化提高我们代码的效率呢？</p><p data-lake-id=\"3e8f66c5f09a4f3398d3b2674e89884b\"><br /></p><p data-lake-id=\"6607e036668e925cecb4ce4a2a6e1127\">总的策略就是<span style=\"color: #FFA39E;\">降低代码的时间复杂度和空间复杂度。</span></p><p data-lake-id=\"78f738a1518db2e24d7f6cfc05134b1a\"><br /></p><p data-lake-id=\"53bb539be3bcf7aeae4476d6b9e25382\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">但是对于一段代码来说往往时间和空间两个是互斥的，如果我们想要降低时间复杂度，那么无疑就会增加空间复杂度。</span></span></span></p><p data-lake-id=\"3819d3936d2249b7767a26795d07922c\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\">举一个生活中的🌰，就像我们平时生活中开车过红绿灯，如果只有这一条路（空间）那么我们就只能在这等着红灯，当车越来越多的时候，就会消耗大家很多时间，但是当我们修建了立交桥之后，就会有更多的选择空间，就会大大减少等待红灯的时间。</span></span></span></p><p data-lake-id=\"4daa50d8581ff53d713a24d16fa5b19e\"><span style=\"color: #FFA39E;\"><span style=\"color: #FFA39E;\"><span style=\"color: #000000;\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fgif%2F2705850%2F1606953443121-946ba365-7a49-4689-8090-5e820840f5eb.gif%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A720%2C%22name%22%3A%22CgqCHl7CRMaAO_oEAJfz6fjfMNQ403.gif%22%2C%22size%22%3A9958377%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1109.1438%2C%22y%22%3A662.0096%2C%22width%22%3A130.22900000000004%2C%22height%22%3A31.858600000000024%2C%22text%22%3A%22%40%E6%8B%89%E5%8B%BE%E6%95%99%E8%82%B2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%40%E6%8B%89%E5%8B%BE%E6%95%99%E8%82%B2%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A1280%2C%22height%22%3A720%7D\"></card></span></span></span></p><p data-lake-id=\"d8a5060cbaef296a9eb1d27accef7ae3\" style=\"text-align: center;\"><span style=\"color: #8C8C8C;\">（图片来自拉钩教育-公瑾老师的重学算法与数据结构一课中）</span></p><p data-lake-id=\"196333203ee32cf571502130d914d4ac\">而对我们来说，时间永远都要比空间更加重要，因为时间拿钱买不来，而空间我们起码可以拿钱来进行扩容。</p><p data-lake-id=\"643c370b96b835868ba7f9a158b17b11\" style=\"text-align: center;\"><span style=\"color: #FA8C16;\"><strong>空间是廉价的，时间是昂贵的</strong></span></p><p data-lake-id=\"4b82b2c89bb95468a85ce91d5816d785\" style=\"text-align: center;\"><span style=\"color: #FA8C16;\"><strong><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F2705850%2F1606953817114-7e1a263e-6acb-4bf2-9110-da34521c23f8.png%22%2C%22originWidth%22%3A142%2C%22originHeight%22%3A152%2C%22name%22%3A%22image.png%22%2C%22size%22%3A26430%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A15.257019%2C%22y%22%3A127.29151%2C%22width%22%3A114.75961099999999%2C%22height%22%3A15.253%2C%22text%22%3A%22%E6%97%B6%E9%97%B4%2C%E4%BC%9A%E7%BB%99%E4%BD%A0%E7%AD%94%E6%A1%88%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%97%B6%E9%97%B4%2C%E4%BC%9A%E7%BB%99%E4%BD%A0%E7%AD%94%E6%A1%88%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A71%2C%22height%22%3A76%7D\"></card></strong></span></p><ol data-lake-id=\"7b386df4e593d0ec36a5ac3853863eaf\" start=\"1\"><li data-lake-id=\"fbc9cb13accb086daf24bb1e65ca7d1b\">暴力解法：在没有任何时间和空间的限制下，将目标达成</li><li data-lake-id=\"7181f00e2901853c9fa2c660482cd246\">剔除无效操作：将代码中没有必要的计算、无效的存储删除来优化时间和空间复杂度</li><li data-lake-id=\"0a42c42600fe49666e069d327a737435\">时空转换：设计合理的数据结构，将时间向空间转换</li></ol><p data-lake-id=\"284ea75a0d22fc9e771559fae5e6a4f1\"><br /></p><h2 data-lake-id=\"68796103d8b85c9bd058ab4def804bce\" id=\"Hn7G9\">增删查：数据的基本操作</h2><p data-lake-id=\"164e720c1de7ca8dd91b43b32eb04e24\">一般一段算法的实现最常设计的三个操作就是：增、删、查。</p><p data-lake-id=\"6a34b466c83d98ae6f7d6b20390b03b3\">而我们对一个算法的优化和实现只要围绕这三个为重心去思考展开即可：</p><ol data-lake-id=\"7fe336741e3954b2e6776c4b8342536b\" start=\"1\"><li data-lake-id=\"dd0534f27c0d7e272835d2bbad743e48\">分析这段代码对数据进行了那些操作</li><li data-lake-id=\"6908c25184ff1c5b6cc433c2487e28fd\">这些操作中有哪些操作是最消耗性能的，对时间复杂度的损耗是最高的？</li><li data-lake-id=\"db807eddb2680aca14ad7b66ae90c9ad\">考虑有哪种数据结构可以帮助提高数据操作的使用效率。</li></ol><p data-lake-id=\"5a6262f8cbc2ecd51d0e7c83795f0047\"><br /></p><p data-lake-id=\"0843a0cf31ce7c0a3b104a102e887043\">以上三点就是构成我们实现代码效率优化的方法论。</p><p data-lake-id=\"b79bcf0da7dc0ca238f9f39226d31422\"><br /></p><h3 data-lake-id=\"056e420a97c80ffe398a44fc263f3a16\" id=\"BCrdP\">查</h3><p data-lake-id=\"a8b0dca2b818b44ba3ecc9a713f9c070\"><br /></p><ol data-lake-id=\"d5a2113bfe75d903f01695219d49e9b6\" start=\"1\"><li data-lake-id=\"cde113ca750b0cf5c4a5c893ee6dc8f2\">按照元素索引查找</li></ol><ul data-lake-id=\"dbf554090b4252ff90fd0f7604fb51a7\" data-lake-indent=\"1\"><li data-lake-id=\"282320924a14dd316e630c491718b622\">对于数组这些天生拥有索引的数据结构来说十分简单</li><li data-lake-id=\"17d8afa2ed502c56ad9093b814272989\">对于链表这种，通过指针进行连接的就需要知道前面一个元素</li></ul><ol data-lake-id=\"fc49a3534e77d13ab06a5fab93e4cdfd\" start=\"2\"><li data-lake-id=\"2a1c3385e96d1450b6435178c8887c9c\">按照元素特征值查找</li></ol><ul data-lake-id=\"345a9565321f393f399154dbca7d14ed\" data-lake-indent=\"1\"><li data-lake-id=\"7edf2a64d324379bb3779d818bfe3510\">对于字典类型的数据来说，key就相当是特征，value就是值，查找起来非常方便</li><li data-lake-id=\"e6652bf1a7f1e6fa4feb395f6a0251ed\">对于数组和链表来说就需要循环对比每个元素来进行比较值的特征是否符合</li></ul><p data-lake-id=\"2bd7306c29d8ae644c9332d15a78bbcb\"><br /></p><h3 data-lake-id=\"20357edd76a93e08a4002eaed1de7175\" id=\"QPJ01\">增</h3><p data-lake-id=\"7f37bf2661ab2d50be898f5e360f572c\"><br /></p><ol data-lake-id=\"cfe52aa5810781cbb29b95a1ee67f2e9\" start=\"1\"><li data-lake-id=\"76ed54ad0bb9ed3e45635fd6de029691\">在复杂数据结构的末尾添加数据</li></ol><ul data-lake-id=\"3a6025a9ed5f868f81ef42e9543dff27\" data-lake-indent=\"1\"><li data-lake-id=\"7aec5d4b14fe54967c45f78de505c86e\">不会影响数据的原始位置</li></ul><ol data-lake-id=\"155491e82380d0145f982bd4885531d7\" start=\"2\"><li data-lake-id=\"890107e6381ea1183ce6ea0a2246dceb\">在复杂数据结构的中间添加数据</li></ol><ul data-lake-id=\"3f8dd2b48aa653849b0baabbfcbc3f32\" data-lake-indent=\"1\"><li data-lake-id=\"31d2a11ae8fc63cd3e41bbe8176fc73a\">会影响到数据原始的位置</li></ul><p data-lake-id=\"203f05e48b83bf01f0b6fd3840544a68\" style=\"padding-left: 2em;\"><br /></p><p data-lake-id=\"588e561d155c5b64d1bce8a322a88639\" style=\"padding-left: 2em;\"><br /></p><h3 data-lake-id=\"b72b046860fd5c4286ef228d4bf882d3\" id=\"EI89A\">删</h3><p data-lake-id=\"0c887c3d14b697f136863f5f0217a57f\"><br /></p><ol data-lake-id=\"f9dc858f8c35c87941846c24b1ab5246\" start=\"1\"><li data-lake-id=\"7064170332e8394fcee296fde1ddd4f2\">在复杂数据结构的末尾删除</li></ol><ul data-lake-id=\"e8b292072c8fde3a39a39742f3a5a331\" data-lake-indent=\"1\"><li data-lake-id=\"964f3b5fdebff54be4d9c6c240c70e40\">不会影响到原先数据的位置</li></ul><ol data-lake-id=\"5cd80cc33fddea056f76d68f4952d92c\" start=\"2\"><li data-lake-id=\"3fed838e9922e7d3382101c8cdc322a0\">在复杂数据结构的中间位置进行删除</li></ol><ul data-lake-id=\"c7085a42e3783c7d94af55e619dfa045\" data-lake-indent=\"1\"><li data-lake-id=\"e63e6857d93306aff9aa10bee88f84b7\">会影响到之前数据的原始位置</li></ul><p data-lake-id=\"74646f82c54bc556e4454fa1ed4c8f06\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 1,
    "comments_count": 0,
    "content_updated_at": "2021-02-02T06:06:29.000Z",
    "deleted_at": null,
    "created_at": "2020-12-02T01:26:57.000Z",
    "updated_at": "2021-02-02T06:06:29.000Z",
    "published_at": "2021-02-02T06:06:29.000Z",
    "first_published_at": "2020-12-02T01:27:19.000Z",
    "word_count": 931,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/2705850/1606953725697-beedfd24-126b-4e4f-97cc-28d93d2321e1.png",
    "description": "如何衡量一段代码的优劣呢？一般我们会从两个维度去考虑一段代码的质量：时间复杂度空间复杂度顾名思义，其实时间复杂度就是说这段代码的计算量所能消耗的时间，而空间复杂度就是这段代码所占据的内存空间。那么我们应该怎么取舍这两个标准呢？提高代码效率的方法我们从上面已经知道了衡量代码效率的方法，那么我们应...",
    "custom_description": null,
    "hits": 5,
    "_serializer": "v2.doc_detail"
  }
]